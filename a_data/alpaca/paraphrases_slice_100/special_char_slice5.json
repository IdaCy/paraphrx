[
  {
    "prompt_count": 401,
    "instruction_original": "Come up with a creative tagline for a beauty product.",
    "input": "",
    "instruct_all_caps_and_typo": "CREAT A KOOL TAGLIN FOR A BEAUTY PRODCUT.",
    "instruct_all_caps_and_typo_and_missing_bracket": "CREAT A KOOL TAGLIN FOR A BEAUTY PRODCUT [",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "GENRATE A KREATIVE TAGLINE 4 BEAUTY PRODCT <}",
    "instruct_code_fence": "```Generate a creative tagline for a beauty product.```",
    "instruct_curly_quotations": "‚ÄúCome up with a creative tagline for a beauty product.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúCome up with a creative tagline for a beauty product.‚Äù [",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúCome up with a creative taglin for a beauty product.‚Äù {",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúCome up with a creative taglin for a beauty produt.‚Äù ^}",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúCome up with a creative taglin for a beauty produt.‚Äù & {",
    "instruct_curly_quotations_and_typo": "‚ÄúCome up with a creative taglin for a beauty product.‚Äù",
    "instruct_emoji": "Craft a dazzling tagline ‚ú® for a beauty product üíÑ that truly shines! üåü",
    "instruct_emoji_and_typo": "Craft a dazzling tagline ‚ú® for a beauty produt üíÑ that truly shines! üåü",
    "instruct_emoji_and_typo_and_missing_bracket": "Creat a dazzling tagline ‚ú® for a beauty produt üíÑ that truly shines! üåü }",
    "instruct_emoji_and_typo_and_random_question_marks": "Creat a dazzling tagline ‚ú® for a beauty produt üíÑ that truly shines! ????",
    "instruct_emoticon": "Think of a clever tagline for a beauty product. :) It should be super creative! <3",
    "instruct_emoticon_and_typo": "Think of a clevr tagline for a beauty product. :) It should be super creative! <3",
    "instruct_emoticon_and_typo_and_missing_bracket": "Think of a clevr tagline for a beauty product. :) It should be super creative! <3 ]",
    "instruct_emoticon_and_typo_and_random_exclamations": "Think of a clevr tagline for a beauty product. :) It should be super creative! <3 !!!!!",
    "instruct_helpful_markdown_structure": "### Beauty Product Tagline * Task: Create a tagline. * Requirement: Must be creative. * Subject: A beauty product.",
    "instruct_helpful_meaning_reinforing_characters": "[[Design a truly unique tagline for a beauty product.]]",
    "instruct_html_tags": "<span>Devise an imaginative slogan for a cosmetic item.</span>",
    "instruct_markdown_bold": "**Invent a catchy slogan for a beauty product.**",
    "instruct_markdown_bold_and_italic": "**_Develop an imaginative and unique tagline for a beauty product._**",
    "instruct_markdown_italic": "*Formulate a distinctive tagline for a beauty product.*",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Compose a creativ tagline for a beauty product {",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Think up a creativ! tagline for a beauti! product!!!! ]",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Formulat, a innovativ taglin for: a beauty product (;",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Devise . a clever taglin, for a beuty product [ {",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Invent a new taglin for a bea_uty prod_ct. ;",
    "instruct_several_html_tags": "<div><p>Please <em>generate</em> a <b>highly</b> creative tagline</p> for a <mark>beauty product</mark>!</div>",
    "instruct_small_hex_blob": "436F6D6520757020776974682061206372656174697665207461676C696E6520666F722061206265617574792070726F647563742E",
    "instruct_spoiler_bars": "||Conceive a novel tagline for a cosmetic item.||",
    "output": "\"The Beauty of Now - Unlock Your Radiance with {Brand Name}\"",
    "prompt_id": "ccf1286c-c147-4fc6-b0b7-70288e529ad8"
  },
  {
    "prompt_count": 402,
    "instruction_original": "Describe how quantum computers work.",
    "input": "",
    "instruct_all_caps_and_typo": "EXPLAIN HOW QUANTUM COMPUTERS WERK PLEES.",
    "instruct_all_caps_and_typo_and_missing_bracket": "EXPLAIN HOW QUANTUM COMPUTEERS WURK PLS",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "EXPLAIHN HOW QUUNTTUM COMPUTERS WURK PLEZ !!!???",
    "instruct_code_fence": "```Explain how quantum computers work.```",
    "instruct_curly_quotations": "‚ÄúDescribe how quantum computers work.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúDescrib how quantum computrs werk",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúDescrib how kwantum computrs werk",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúDescrib how kwantum computrs werk !@#$",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúDescrib how kwantum computrs werk !@#$   ",
    "instruct_curly_quotations_and_typo": "‚ÄúDescrib how quantum computrs werk.‚Äù",
    "instruct_emoji": "How do quantum computers operate? ü§Ø‚öõÔ∏èüî¨ Explain!",
    "instruct_emoji_and_typo": "How do kwantum computrz werk? ü§Øüî¨",
    "instruct_emoji_and_typo_and_missing_bracket": "How do kwantum computrz werk ü§Øüî¨",
    "instruct_emoji_and_typo_and_random_question_marks": "How do kwantum computrz werk? ü§Øüî¨???",
    "instruct_emoticon": "So, quantum computers... how do they work? ü§îüí° Please elaborate. :-)",
    "instruct_emoticon_and_typo": "So, kwantum computors... how do they werk? ü§îüí° :-(",
    "instruct_emoticon_and_typo_and_missing_bracket": "So, kwantum computors... how do they werk ü§îüí° :-(",
    "instruct_emoticon_and_typo_and_random_exclamations": "So, kwantum computors... how do they werk! ü§îüí° :-!!!!!",
    "instruct_helpful_markdown_structure": "## Quantum Computers: How They Work\n\nProvide a comprehensive description of the operational principles behind quantum computers.",
    "instruct_helpful_meaning_reinforing_characters": ">>> How do quantum computers work? <<< (Explain their mechanisms)",
    "instruct_html_tags": "<p>Explain how quantum computers <i>function</i>.</p>",
    "instruct_markdown_bold": "**Explain how quantum computers work.**",
    "instruct_markdown_bold_and_italic": "**_Thoroughly explain how quantum computers work._**",
    "instruct_markdown_italic": "*Describe how quantum computers work.*",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Descriobe how quantum computers\n\n\nwerk please.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Explein how quantum compuetrs \n\n wirk !!!!!!111",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "How do quantum computrs \n\n work?.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "How do quantum computrs \n\n work ?  .",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "How do quantum comupters \n\n w0rk ^&*$",
    "instruct_several_html_tags": "<div><p>Could you <b>detail</b> how quantum computers <i>operate</i>?</p></div>",
    "instruct_small_hex_blob": "446573637269626520686F77207175616E74756D20636F6D70757465727320776F726B2E",
    "instruct_spoiler_bars": "||How do quantum computers work?||",
    "output": "Quantum computers use quantum bits, or qubits, instead of traditional bits to encode information. These qubits can work together in groups, allowing them to process and store data more efficiently than traditional computers. Quantum computers use quantum algorithms to enable them to solve complex problems that would be intractable on classical computers.",
    "prompt_id": "952ab93e-c419-46a7-a719-d63ec7b5bd76"
  },
  {
    "prompt_count": 403,
    "instruction_original": "Generate a memorable quote from Albert Einstein.",
    "input": "",
    "instruct_all_caps_and_typo": "PLEAE GENRATE A MEMORBLE QUOET FROM ALBETR EINSTEIN.",
    "instruct_all_caps_and_typo_and_missing_bracket": "PLEAE GENRATE A MEMORBLE QUOET FROM ALBETR EINSTEIN",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "PLEAE GENRATE A MEMORBLE QUOET FROM ALBETR EINSTEIN!@#$",
    "instruct_code_fence": "```generate_quote(author='Albert Einstein', memorable=True)```",
    "instruct_curly_quotations": "‚ÄúGenerate a memorable quote from Albert Einstein.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúGenrate a memrable quote from Albert Einstein.",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúGenrate a memrable quoet from Albert Einstein.",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúGenrate a memrable quoet from Albert Einstein.!@#$",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚Äú Genrate a memrable  quoet from Albert Einstein.!@#$ ",
    "instruct_curly_quotations_and_typo": "‚ÄúGenrate a memrable quote from Albert Einstein.‚Äù",
    "instruct_emoji": "‚ú® Please generate a truly memorable quote from the brilliant Albert Einstein. üí°",
    "instruct_emoji_and_typo": "ü§î Can you genrate a memrable quote from Albert Einstein? ‚úçÔ∏è",
    "instruct_emoji_and_typo_and_missing_bracket": "üí° Please genrate a memrable quoet from Albert Einstein ü§Ø",
    "instruct_emoji_and_typo_and_random_question_marks": "ü§îü§î Can you genrate a memrable quote from Albert Einstein? ????",
    "instruct_emoticon": "Can you please generate a memorable quote from Albert Einstein? :D",
    "instruct_emoticon_and_typo": "Can you genrate a memrable quote from Albert Einstein? :/",
    "instruct_emoticon_and_typo_and_missing_bracket": "Can you genrate a memrable quote from Albert Einstein :(",
    "instruct_emoticon_and_typo_and_random_exclamations": "Can you genrate a memrable quote from Albert Einstein? !!!!",
    "instruct_helpful_markdown_structure": "### Quote Request: - **Subject**: Albert Einstein - **Task**: Generate a memorable quote",
    "instruct_helpful_meaning_reinforing_characters": ">>> Generate a memorable quote from Albert Einstein. <<<",
    "instruct_html_tags": "<p>Generate a memorable quote from Albert Einstein.</p>",
    "instruct_markdown_bold": "**Generate a memorable quote from Albert Einstein.**",
    "instruct_markdown_bold_and_italic": "***Generate a memorable quote from Albert Einstein.***",
    "instruct_markdown_italic": "*Generate a memorable quote from Albert Einstein.*",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Generate a memorble... quoet from Albert... Einstein",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "GENRATE A MEMORBLE QUOET FROM ALBETR EINSTEIN!!!!!!!!!!!!!!!!!!!!!!!!!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Generate a memorble quoet from Albert; Einstein.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": " Generate a memorble  quoet from Albert; Einstein. ",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Generate a memorble quoet from Albert Einstein, ^&**",
    "instruct_several_html_tags": "<div><span><p>Please generate a truly memorable quote from Albert Einstein.</p></span></div>",
    "instruct_small_hex_blob": "Provide a memorable quote from the entity represented by 0x416c626572742045696e737465696e.",
    "instruct_spoiler_bars": "||I need a memorable quote from Albert Einstein.||",
    "output": "\"Imagination is more important than knowledge.\" - Albert Einstein.",
    "prompt_id": "28699158-4b31-4fb3-8361-9137d506514a"
  },
  {
    "prompt_count": 404,
    "instruction_original": "Find the sum of the numbers 6 and 12.",
    "input": "6 + 12",
    "instruct_all_caps_and_typo": "WHATS THE SUMM OF 6 AND 12?",
    "instruct_all_caps_and_typo_and_missing_bracket": "WHATS THE SUMM OF 6 AND 12",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "WHATS THE SUMM OF 6 AND 12 XYZ",
    "instruct_code_fence": "```\nCalculate the sum of 6 and 12.\n```",
    "instruct_curly_quotations": "‚ÄúFind the sum of the numbers 6 and 12.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúFind the sum of the numbers 6 and 12.",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúFind the summ of the numbers 6 and 12.",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúFind the summ of the numbers 6 and 12. ABC",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúFind the summ of the numbers 6 and 12. ABC ",
    "instruct_curly_quotations_and_typo": "‚ÄúFind the summ of the numbers 6 and 12.‚Äù",
    "instruct_emoji": "Add 6 and 12 together. ‚ûïüî¢",
    "instruct_emoji_and_typo": "Whats 6 + 12? ü§î‚ûï",
    "instruct_emoji_and_typo_and_missing_bracket": "Whats 6 + 12? ü§î",
    "instruct_emoji_and_typo_and_random_question_marks": "Whats 6 + 12???? ‚ùì‚ûï",
    "instruct_emoticon": "Please calculate 6 + 12. :)",
    "instruct_emoticon_and_typo": "Whats 6 + 12? ;)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Whats 6 + 12 :(",
    "instruct_emoticon_and_typo_and_random_exclamations": "Whats 6 + 12!!!!!!! :D",
    "instruct_helpful_markdown_structure": "### Calculation Task\n- **Operation**: Addition\n- **Numbers**: 6 and 12\nFind the sum.",
    "instruct_helpful_meaning_reinforing_characters": "Find the sum of 6 and 12!!! The grand total! üî¢",
    "instruct_html_tags": "Add the numbers 6 and 12. <p>What's the total?</p>",
    "instruct_markdown_bold": "What is the **sum** of **6** and **12**?",
    "instruct_markdown_bold_and_italic": "Please compute the _**total**_ of the numbers **6** and _12_.",
    "instruct_markdown_italic": "Determine _the sum_ of _six_ and _twelve_.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Pls sum\n6 an\n12",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Pls sum\n6 an\n12!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Pls sum;\n6 an:\n12.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Pls sum ;\n6 an :\n12 .",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Pls sum\n6 an\n12",
    "instruct_several_html_tags": "Calculate the <B>sum</B> of <i>six</i> and <u>twelve</u>. <span>What is the result?</span>",
    "instruct_small_hex_blob": "Sum 0x06 and 0x0C",
    "instruct_spoiler_bars": "||What is 6 plus 12?||",
    "output": "18.",
    "prompt_id": "66bd18c9-1567-40b0-846c-58c7417c1124"
  },
  {
    "prompt_count": 405,
    "instruction_original": "Transform the following sentence using the past perfect tense: Yesterday they opened the door.",
    "input": "",
    "instruct_all_caps_and_typo": "TRANSFORM THE FOLLWOING SENTENCE USNG THE PAST PERFECT TENSE: YESTERDAY THEY OPENED THE DOOR.",
    "instruct_all_caps_and_typo_and_missing_bracket": "TRANSFORM THE FOLLWOING SENTENCE USNG THE PAST PERFECT TENSE: YESTERDAY THEY OPENED THE DOOR.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "XYZ TRANSFORM THE FOLLWOING SENTENCE USNG THE PAST PERFECT TENSE: YESTERDAY THEY OPENED THE DOOR. QWE",
    "instruct_code_fence": "```Transform the following sentence using the past perfect tense: 'Yesterday they opened the door.'```",
    "instruct_curly_quotations": "Transform the following sentence using the past perfect tense: ‚ÄúYesterday they opened the door.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "Transform the following sentence using the past perfect tense: ‚ÄúYesterday they opened the door.‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "Trnsform the follwoing sentence usng the past perfect tense: ‚ÄúYesterday they opened the door.‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "ABC Trnsform the follwoing sentence usng the past perfect tense: ‚ÄúYesterday they opened the door.‚Äù DEF",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "ABC  Trnsform the  follwoing  sentence  usng the  past perfect  tense:  ‚ÄúYesterday they opened the door.‚Äù  DEF",
    "instruct_curly_quotations_and_typo": "Trnsform the follwoing sentence usng the past perfect tense: ‚ÄúYesterday they opened the door.‚Äù",
    "instruct_emoji": "Transform this sentence ‚û°Ô∏èüìù into the past perfect tense: 'Yesterday they opened the door.' üï∞Ô∏è‚úÖ",
    "instruct_emoji_and_typo": "Trnsform this sentence ‚û°Ô∏èüìù into the past perfect tense: 'Yesterday they opened the door.' üï∞Ô∏è‚úÖ",
    "instruct_emoji_and_typo_and_missing_bracket": "Trnsform this sentence ‚û°Ô∏èüìù into the past perfect tense: 'Yesterday they opened the door.' üï∞Ô∏è‚úÖ",
    "instruct_emoji_and_typo_and_random_question_marks": "Trnsform? this sentence ‚û°Ô∏èüìù into? the past perfect tense: 'Yesterday they opened the door.' üï∞Ô∏è‚úÖ?",
    "instruct_emoticon": "Please transform this sentence into past perfect tense: 'Yesterday they opened the door.' :-) Thanks!",
    "instruct_emoticon_and_typo": "Pls transform this sentnce into past perfect tense: 'Yesterday they opened the door.' :-) Thx!",
    "instruct_emoticon_and_typo_and_missing_bracket": "Pls transform this sentnce into past perfect tense: 'Yesterday they opened the door.' :-) Thx!",
    "instruct_emoticon_and_typo_and_random_exclamations": "Pls!!! transform this sentnce into past perfect tense: 'Yesterday they opened the door.' :-) Thx!",
    "instruct_helpful_markdown_structure": "## Transformation Task### Sentence:`Yesterday they opened the door.`### Instruction:*   Rewrite the above sentence.*   Use the **past perfect tense**.",
    "instruct_helpful_meaning_reinforing_characters": "[[Transform]] the following sentence >>> using the ###past perfect tense###: 'Yesterday they opened the door.' +++",
    "instruct_html_tags": "<body><p>Transform the following sentence using the past perfect tense: Yesterday they opened the door.</p></body>",
    "instruct_markdown_bold": "**Transform** the following sentence using the **past perfect tense**: 'Yesterday they opened the door.'",
    "instruct_markdown_bold_and_italic": "***Transform*** the following sentence using the ***_past perfect tense_***: 'Yesterday they opened the door.'",
    "instruct_markdown_italic": "_Transform_ the following sentence using the _past perfect tense_: 'Yesterday they opened the door.'",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Transform the\nfollwoing sentence\nusng the past perfect tense:\nYesterday they opened the door.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Transform the!\nfollwoing sentence!!!\nusng the past perfect tense:\nYesterday they opened the door.!!!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Transform the;\nfollwoing sentence?\nusng the past perfect tense.\nYesterday they opened the door,",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Transform the  ;\nfollwoing  sentence ?\nusng the past perfect tense.\nYesterday  they opened the  door,",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Trnsfrm the fllwng sentnce usng the past prfct tns: Yesterdy they opend the dor.",
    "instruct_several_html_tags": "<div><h3>Task:</h3><p>Please transform the sentence: <strong>'Yesterday they opened the door.'</strong> into the <em>past perfect tense</em>.</p></div>",
    "instruct_small_hex_blob": "5472616e73666f726d2074686520666f6c6c6f77696e672073656e74656e6365207573696e6720746865207061737420706572666563742074656e73653a205965737465726461792074686579206f70656e65642074686520646f6f722e",
    "instruct_spoiler_bars": "||Transform the following sentence|| using the ||past perfect tense||: 'Yesterday they opened the door.'",
    "output": "Yesterday they had opened the door.",
    "prompt_id": "d31a3c94-8509-4d8d-8e9c-5997df4f635c"
  },
  {
    "prompt_count": 406,
    "instruction_original": "Explain the uses of artificial intelligence.",
    "input": "",
    "instruct_all_caps_and_typo": "EXPLAIN THE USES OF ARTIFICAL INTELIGENCE PLZ.",
    "instruct_all_caps_and_typo_and_missing_bracket": "EXPLAIN THE USES OF ARTIFICAL INTELIGENCE PLZ(",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "EXPLAIN THE USES OF ARTIFICAL INTELIGENCE PLZ( !@#$%",
    "instruct_code_fence": "```explain_ai_uses()```",
    "instruct_curly_quotations": "‚ÄúExplain the uses of artificial intelligence.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúExplain the uses of artificial intelligence.‚Äù}",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúExplain the uses of artifical intelligence.‚Äù}",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúExplain the uses of artifical intelligence.‚Äù}(!@#)",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": " ‚ÄúExplain the uses of artifical intelligence.‚Äù}(!@#) ",
    "instruct_curly_quotations_and_typo": "‚ÄúExplain the uses of artifical intelligence.‚Äù",
    "instruct_emoji": "Could you kindly elaborate on the diverse applications of artificial intelligence? ü§ñüí°üåê",
    "instruct_emoji_and_typo": "Could you kindly elaborate on the diverse appliecations of artificial intelligence? ü§ñüí°üåê",
    "instruct_emoji_and_typo_and_missing_bracket": "Could you kindly elaborate on the diverse appliecations of artificial intelligence? ü§ñüí°üåê(",
    "instruct_emoji_and_typo_and_random_question_marks": "Could you kindly elaborate on the diverse appliecations of artificial intelligence???????????? ü§ñüí°üåê",
    "instruct_emoticon": "Hey there! Can you explain the practical uses of AI? :D <(^_^)>",
    "instruct_emoticon_and_typo": "Hey there! Can you explain the practical uses of AI? :D <(^_^)> :(",
    "instruct_emoticon_and_typo_and_missing_bracket": "Hey there! Can you explain the practical uses of AI? :D <(^_^)> :(((",
    "instruct_emoticon_and_typo_and_random_exclamations": "Hey there! Can you explain the practical uses of AI!!!!!!!!!!!!!!!!!!!!! :D <(^_^)>",
    "instruct_helpful_markdown_structure": "### Artificial Intelligence Applications- What are they?- How are they used?Please provide an explanation.",
    "instruct_helpful_meaning_reinforing_characters": ">>> Explain the uses of Artificial Intelligence! <<< üöÄ‚ú®",
    "instruct_html_tags": "<p>Explain the uses of artificial intelligence.</p>",
    "instruct_markdown_bold": "**Explain the uses of artificial intelligence.**",
    "instruct_markdown_bold_and_italic": "_**Kindly outline the various applications of Artificial Intelligence.**_",
    "instruct_markdown_italic": "_Explain the uses of artificial intelligence._",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Explain theusesof artificalintelligence.(",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Explain theusesof artificalintelligence.!!!!!!!!!!!!!!!!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Explain theusesof artificalintelligence,.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Explain theusesof artificalintelligence, . ",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Explain theusesof artificalintelligence ?;.",
    "instruct_several_html_tags": "<div><span><p>Please detail the applications of artificial intelligence.</p></span></div>",
    "instruct_small_hex_blob": "0xAI_USAGE_EXPLAIN: Explain the uses of artificial intelligence.",
    "instruct_spoiler_bars": "||What are the applications of AI?||",
    "output": "Artificial intelligence is used in a variety of applications ranging from self-driving cars to facial recognition software. AI is used to help automate processes and make decisions in ways that are faster and more accurate than humans. AI can also be used for predictive analytics, where computers can detect patterns in data and make predictions about what could happen in the future.",
    "prompt_id": "3deaabb3-2725-4bd2-962b-c0868499f42a"
  },
  {
    "prompt_count": 407,
    "instruction_original": "Describe a scenario in which blockchain technology could be successfully applied.",
    "input": "",
    "instruct_all_caps_and_typo": "DESCIBE A SCENIRO WHERE BLOCKCHAIN TECHNOOLOGY IS A WIN!",
    "instruct_all_caps_and_typo_and_missing_bracket": "DESCIBE A SCENIRO WHERE BLOCKCHAIN TECHNOOLOGY IS A WIN.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "DE*SCIBE A SCENIRO WHERE BL%CKCHAI?N TECHNOOLOGY IS A WIN.",
    "instruct_code_fence": "Outline a practical case where blockchain technology would be optimally utilized.",
    "instruct_curly_quotations": "‚ÄúIllustrate a practical use-case where blockchain technology achieves significant success.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúIllustrate a practcal use-case where blockchain technolgy acheives significan succeess.",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúIllustrate a practcal use-case where blockchain technolgy acheives significan succeess.",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúIllu$trate a practcal use-case where blockchain technolgy acheives signifi@can succeess.",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúIllu$trate a practcal use-case where blockchain technolgy acheives signifi@can succeess. .",
    "instruct_curly_quotations_and_typo": "‚ÄúIllustrate a practcal use-case where blockchain technolgy acheives significan succeess.‚Äù",
    "instruct_emoji": "üåê‚ú® Envision a real-world use case for blockchain. How could it excel? üöÄ",
    "instruct_emoji_and_typo": "ü§Ø Pls decribe a scenro where blockchain ‚õìÔ∏è can work gr8! üëç",
    "instruct_emoji_and_typo_and_missing_bracket": "üßê Decribe a scenro where blockchain üîó can wok!",
    "instruct_emoji_and_typo_and_random_question_marks": "üí° Descrie a scenaro?? wher blockchain ‚õìÔ∏è can work gr8???",
    "instruct_emoticon": "Describe a scenario where blockchain tech would be a perfect fit. :)",
    "instruct_emoticon_and_typo": "Descibe a scenrio (where blockchin tehc can be sucsessful). :)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Decrib a sceniro where blockchin tehc can be sucsessful. :(",
    "instruct_emoticon_and_typo_and_random_exclamations": "Describ a scenrio!!! where blockchin tehc can be sucsessful! :D",
    "instruct_helpful_markdown_structure": "# Blockchain Application Scenario\n\n*   **Task**: Outline a detailed scenario.\n*   **Focus**: Where blockchain offers significant benefits.\n*   **Outcome**: A successful implementation example.",
    "instruct_helpful_meaning_reinforing_characters": ">>> Imagine a specific, successful application of blockchain technology. What is it? <<<",
    "instruct_html_tags": "<p>Illustrate a compelling application for blockchain.</p>",
    "instruct_markdown_bold": "**Present a specific instance where blockchain technology offers a clear advantage.**",
    "instruct_markdown_bold_and_italic": "_**Detail a real-world scenario where blockchain proves highly effective.**_",
    "instruct_markdown_italic": "_Envision a practical application where blockchain truly shines._",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Deescibe a sceniro\nwer\nblockchian tehc\ncoould\nbe succeessfuly\nappliied",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "DESCRBIE A SCENR!O\nWHER\nBLOCKCHAN TEC!HNOLGY\nCOULD BE\nSUCCESFULL!Y APLIEED!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Desribe. a. scenario\nwhre\nblockchian tech.\ncould. be\nsuccesfully. applied?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Desribe . a. scenario .\nwhre\nblockchian tech.\ncould . be\nsuccesfully . applied?\n.",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "D#escrib a scenario\nin which blockchain techology?\ncould be\nsuccessfully applied.\n*",
    "instruct_several_html_tags": "<div><p><span>Provide an example of a successful blockchain implementation.</span></p></div>",
    "instruct_small_hex_blob": "4465736372696265426c6f636b636861696e",
    "instruct_spoiler_bars": "||Consider a use case where blockchain is the ideal solution.||",
    "output": "Blockchain technology can be used for secure transactions and fast payments. For example, it could be used to store and process healthcare records, allowing secure and instantaneous sharing of information between doctors and patients. It can also be used for secure digital voting, allowing votes to be securely and accurately counted while still allowing voters to stay anonymous.",
    "prompt_id": "edff32c0-e80d-46ef-a296-78b1e4cfe4ad"
  },
  {
    "prompt_count": 408,
    "instruction_original": "Complete the following analogy: Loud is to quiet as day is to",
    "input": "",
    "instruct_all_caps_and_typo": "COMPLEET THE ANALOGY: LOUD IS TO QUIET AS DAY IS TO ____",
    "instruct_all_caps_and_typo_and_missing_bracket": "COMPLEET THE ANALOGY: LOUD IS TO QUIET AS DAY IS TO ____ (FILL IN THE BLANK",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "PLZZZZ COMPLEET THE ANALOGY: LOUD IS TO QUIET AS DAY IS TO ____ (FILL IN THE BLANKZzZ",
    "instruct_code_fence": "```Complete the analogy: Loud is to quiet as day is to ____```",
    "instruct_curly_quotations": "‚ÄúLoud‚Äù is to ‚Äúquiet‚Äù as ‚Äúday‚Äù is to ____?",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúLoud‚Äù is to ‚Äúquiet‚Äù as ‚Äúday‚Äù is to ____ (fill in the blank",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúLoud‚Äù is to ‚Äúquiet‚Äù as ‚Äúday‚Äù is to ____ (pls compleet",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúLoud‚Äù zZ is to ‚Äúquiet‚Äù as ‚Äúday‚Äù is to ____ (pls compleet!!!!",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúLoud‚Äù zZ is to ‚Äúquiet‚Äù as ‚Äúday‚Äù is to ____ ( pls compleet !!!! ",
    "instruct_curly_quotations_and_typo": "‚ÄúLoud‚Äù is to ‚Äúquiet‚Äù as ‚Äúday‚Äù is to ____? Pls compleet.",
    "instruct_emoji": "üîä is to ü§´ as ‚òÄÔ∏è is to ____?",
    "instruct_emoji_and_typo": "üîä is to ü§´ as ‚òÄÔ∏è is to ____? Pls compleet.",
    "instruct_emoji_and_typo_and_missing_bracket": "üîä is to ü§´ as ‚òÄÔ∏è is to ____ (pls compleet",
    "instruct_emoji_and_typo_and_random_question_marks": "üîä? is to ü§´?? as ‚òÄÔ∏è??? is to ____? Pls compleet?????",
    "instruct_emoticon": "Loud :O is to quiet :| as day :) is to ____?",
    "instruct_emoticon_and_typo": "Loud :O is to quiet :| as day :) is to ____? Pls compleet.",
    "instruct_emoticon_and_typo_and_missing_bracket": "Loud :O is to quiet :| as day :) is to ____ (pls compleet",
    "instruct_emoticon_and_typo_and_random_exclamations": "Loud :O! is to quiet :|!! as day :)!!! is to ____? Pls compleet!!!!!!",
    "instruct_helpful_markdown_structure": "## Analogy Completion TaskPlease complete the following analogy:*   Loud : Quiet :: Day : ____",
    "instruct_helpful_meaning_reinforing_characters": "Loud -> quiet as day -> ____",
    "instruct_html_tags": "<span>Loud</span> is to <span>quiet</span> as <span>day</span> is to <span>____</span>?",
    "instruct_markdown_bold": "**Loud** is to **quiet** as **day** is to ____?",
    "instruct_markdown_bold_and_italic": "***Loud*** is to ***quiet*** as ***day*** is to ___?",
    "instruct_markdown_italic": "*Loud* is to *quiet* as *day* is to ____?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Compleet the following analogy:Loud is to quiet as day is to ____ (fill in the blank",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Compleet the following analogy:Loud is to quiet as day is to ____ (fill in the blank!!!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Compleet the following analogy?Loud is to quiet as day is to ____ (fill in the blank.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Compleet the following analogy ? Loud is to quiet as day is to ____ ( fill in the blank . ",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Compleet the followin anlogy:Loud is to quiet as day is to _____",
    "instruct_several_html_tags": "<div><p>Loud</p></div> is to <em>quiet</em> as <br/> <span>day</span> is to <strong>____</strong>?",
    "instruct_small_hex_blob": "4C6F756420697320746F2071756965742061732064617920697320746F205F5F5F5F",
    "instruct_spoiler_bars": "||Loud|| is to ||quiet|| as ||day|| is to ____?",
    "output": "Night.",
    "prompt_id": "d138a6dd-b2c6-4236-b95b-f279fe2ff5f7"
  },
  {
    "prompt_count": 409,
    "instruction_original": "Create an example of alliteration.",
    "input": "",
    "instruct_all_caps_and_typo": "CREAET AN EXAMPLE OF ALITERATION.",
    "instruct_all_caps_and_typo_and_missing_bracket": "CREAET AN EXAMPLE OF ALITERATION (MISSING BRACKET.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "CREAET AN EXAMPLE OF ALITERATION (MISSING BRACKET) #@!$%.",
    "instruct_code_fence": "```Create an example of alliteration.```",
    "instruct_curly_quotations": "‚ÄúCreate an example of alliteration.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúCreate an example of alliteration. [",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúCreaate an example of alliteration. [",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúCreaate an example of alliteration. [!@#$%‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúCreaate an example of alliteration. [ ! @ # $ % ‚Äù ",
    "instruct_curly_quotations_and_typo": "‚ÄúCreaate an example of alliteration.‚Äù",
    "instruct_emoji": "Create an example of alliteration. ‚ú®",
    "instruct_emoji_and_typo": "Creaate an example of alliteration. ‚ú®",
    "instruct_emoji_and_typo_and_missing_bracket": "Creaate an example of alliteration. (missing) ü§Ø",
    "instruct_emoji_and_typo_and_random_question_marks": "Creaate an example of alliteration. ??? ü§î",
    "instruct_emoticon": "Create an example of alliteration. :)",
    "instruct_emoticon_and_typo": "Creaate an example of alliteration. :)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Creaate an example of alliteration. (missing) :/",
    "instruct_emoticon_and_typo_and_random_exclamations": "Creaate an example of alliteration. !!! ;)",
    "instruct_helpful_markdown_structure": "### Task: Alliteration Example\n\n*   **Objective:** Formulate a sentence or phrase demonstrating alliteration.",
    "instruct_helpful_meaning_reinforing_characters": ">>> Create an example of alliteration. <<<",
    "instruct_html_tags": "<html>Create an example of alliteration.</html>",
    "instruct_markdown_bold": "**Create an example of alliteration.**",
    "instruct_markdown_bold_and_italic": "***Create an example of alliteration.***",
    "instruct_markdown_italic": "*Create an example of alliteration.*",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Crete an example\nof alliteration.\n(missing bracket",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Crete an example\nof alliteration.!\n(missing bracket!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Crete an example;\nof alliteration,.\n(missing bracket?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Crete an example ; \nof alliteration , .\n(missing bracket ? ",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Crete an example\nof alliteration.\n(missing somethin)",
    "instruct_several_html_tags": "<div><p><span>Create an example of alliteration.</span></p></div>",
    "instruct_small_hex_blob": "0x43726561746520616E206578616D706C65206F6620616C6C697465726174696F6E2E",
    "instruct_spoiler_bars": "||Create an example of alliteration.||",
    "output": "Sweet slippery snakes.",
    "prompt_id": "ede2bf5f-3d5a-4b59-991f-4885f2a9ab57"
  },
  {
    "prompt_count": 410,
    "instruction_original": "Classify the following words by their grammatical categories: walk, interesting, quickly",
    "input": "",
    "instruct_all_caps_and_typo": "PLZ CLASSIFY THE WORDZ: WALK, INTERTESTING, QUICLKY BY THEIR GRAMMER CATEGORIES.",
    "instruct_all_caps_and_typo_and_missing_bracket": "PLZ CLASSIFY THE WORDZ [WALK, INTERTESTING, QUICLKY BY THEIR GRAMMER CATEGORIES.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "PLZ CLASSIFY THE WORDZ [WALK, INTERTESTING, QUICLKY BY THEIR GRAMMER CATEGORIES. @#$!*",
    "instruct_code_fence": "Classify the following words by their grammatical categories: walk, interesting, quickly",
    "instruct_curly_quotations": "‚ÄúClassify the following words by their grammatical categories: walk, interesting, quickly.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúClassify the following words [walk, interesting, quickly by their grammatical categories.‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúClassify these wordz [walk, interresting, quickly by their grammatical categories.‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúClassify these wordz [walk, interresting, quickly by their grammatical categories. #@!‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúClassify these wordz [ walk , interresting , quickly by their grammatical categories . # @ ! ‚Äù",
    "instruct_curly_quotations_and_typo": "‚ÄúPls classify these wordz: walk, interresting, quickly by their grammatical categories.‚Äù",
    "instruct_emoji": "ü§ñ Categorize these words by grammar: walk, interesting, quickly ‚ú®",
    "instruct_emoji_and_typo": "üßê Categorize these wordz: walk, interesting, quicklly by grammar!",
    "instruct_emoji_and_typo_and_missing_bracket": "ü§î Classify the following wordz [walk, interesting, quicklly by their grammatical categories.",
    "instruct_emoji_and_typo_and_random_question_marks": "‚ùì‚ùì Classify these wordz: walk, interesting, quicklly by grammatical categories??? ü§î",
    "instruct_emoticon": "üòÑ Sort these words by parts of speech: walk, interesting, quickly. (^_^)",
    "instruct_emoticon_and_typo": ":-) Classify these wordz: walk, intersting, quickly by grammer categories. XD",
    "instruct_emoticon_and_typo_and_missing_bracket": "(;-D Classify the following wordz [walk, intersting, quickly by their grammer categories.",
    "instruct_emoticon_and_typo_and_random_exclamations": "!!! Classify these wordz: walk, intersting, quickly by grammer categories! (^_^!!!",
    "instruct_helpful_markdown_structure": "# Word Classification Task. Please classify the following words: - walk - interesting - quickly into their respective grammatical categories.",
    "instruct_helpful_meaning_reinforing_characters": "--> Classify the words: [walk, interesting, quickly] by their grammatical categories! <--",
    "instruct_html_tags": "<span>Please categorize the words: walk, interesting, quickly into their grammatical types.</span>",
    "instruct_markdown_bold": "**Categorize** the words: **walk, interesting, quickly** by their **grammatical categories**.",
    "instruct_markdown_bold_and_italic": "***Please categorize*** the words: ***walk, interesting, quickly*** by their ***grammatical categories***.",
    "instruct_markdown_italic": "*Categorize* the words: *walk, interesting, quickly* by their *grammatical categories*.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Classify the following wordz [walk, interresting, quicklly by their grammatical categories.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Classify the following wordzzzz: walk, intersting, quicklly by their grammatical categories!!!!!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Classify the following wordss; walk. interesting, quicklly. by their grammatical categories?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Classify the following words : walk . interesting , quicklly . by their grammatical categories ?",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Classify the following words??? walk, interesting, quickly... by thier grammatical categories$$$",
    "instruct_several_html_tags": "<p>Could you <b>please</b> <i>identify</i> the <font color=\"blue\">grammatical categories</font> for the words: <span>walk</span>, <span>interesting</span>, and <span>quickly</span>?</p>",
    "instruct_small_hex_blob": "Process this data: 0x636C61737369667920776F726473: walk, interesting, quickly",
    "instruct_spoiler_bars": "||Please classify the following words by their grammatical categories: walk, interesting, quickly.||",
    "output": "Verb: walk; Adjective: interesting; Adverb: quickly.",
    "prompt_id": "a7b91d41-097e-46a5-9daf-f673f04d85cc"
  },
  {
    "prompt_count": 411,
    "instruction_original": "Find the greatest common factor of 12 and 18.",
    "input": "12 & 18",
    "instruct_all_caps_and_typo": "FIND THE GRATEST COMMON FAKTOR OF 12 AND 18.",
    "instruct_all_caps_and_typo_and_missing_bracket": "FIND THE GRATEST COMMON FAKTOR OF 12 AND 18 [NO CLOSING BRACKET.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "FIND THE GRATEST COMMON FAKTOR OF 12 AND 18 {1R2?S@!",
    "instruct_code_fence": "```python\\n# GCF Problem\\nnum1 = 12\\nnum2 = 18\\n# Find the greatest common factor of num1 and num2\\n```",
    "instruct_curly_quotations": "‚ÄúFind the greatest common factor of 12 and 18.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúFind the greatest common factor of 12 and 18.‚Äù [No Closing Bracket.",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúFind the greateest common factor of 12 annd 18.‚Äù [No Closing Bracket.",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúFind the greateest common factor of 12 annd 18.‚Äù [No Closing Bracket!@#$.",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúFind the greateest common factor of 12 annd 18.‚Äù [No Closing Bracket!@#$ .",
    "instruct_curly_quotations_and_typo": "‚ÄúFind the greateest common factor of 12 annd 18.‚Äù",
    "instruct_emoji": "üî¢üîç What's the GCF for 12 and 18? ü§î",
    "instruct_emoji_and_typo": "üî¢ü§î What's the greateest common factor of 12 annd 18? üí°",
    "instruct_emoji_and_typo_and_missing_bracket": "What's the GCF of 12 annd 18? ü§î [NO CLOSING BRACKET.",
    "instruct_emoji_and_typo_and_random_question_marks": "üî¢‚ùì What's the greateest common factor of 12 annd 18?????",
    "instruct_emoticon": "Can you help me find the GCF of 12 and 18? :) It's important! :D",
    "instruct_emoticon_and_typo": "Can u find the gr8est common factor of 12 & 18? :(",
    "instruct_emoticon_and_typo_and_missing_bracket": "Can you find the gr8est common factor of 12 & 18? :) [NO CLOSING BRACKET.",
    "instruct_emoticon_and_typo_and_random_exclamations": "Can u find the gr8est common factor of 12 & 18!!! :D!!!",
    "instruct_helpful_markdown_structure": "## GCF Calculation Request\\n\\nPlease assist in determining the **Greatest Common Factor** (GCF) for the following numbers:\\n*   Number 1: 12\\n*   Number 2: 18\\n\\nYour expertise is appreciated!",
    "instruct_helpful_meaning_reinforing_characters": ">>> Calculate the GCF (Greatest Common Factor) for the numbers 12 and 18. <<<",
    "instruct_html_tags": "<p>Please calculate the GCF for 12 and 18.</p>",
    "instruct_markdown_bold": "**Calculate the greatest common factor for 12 and 18.**",
    "instruct_markdown_bold_and_italic": "_**Find the GCF of 12 and 18.**_",
    "instruct_markdown_italic": "_Identify the greatest common factor between 12 and 18._",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Find the\\ngreatst common\\nfactor of 12 and 18\\n[No closing bracket.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Find the\\ngreatst common factor\\nof 12 and 18\\n[NO CLOSING BRACKET!!!??!!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Find the\\ngreatst common factor\\nof 12 and 18\\n[NO CLOSING BRACKET;.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Find the\\ngreatst common factor\\nof 12 and 18\\n[NO CLOSING BRACKET; . ",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Find the\\ngreatst common factor\\nof 12 and 18\\n?*&^",
    "instruct_several_html_tags": "<div><span><p><em>Determine the Greatest Common Factor of 12 and 18.</em></p></span></div>",
    "instruct_small_hex_blob": "46696e642074686520474346206f6620313220616e642031382e",
    "instruct_spoiler_bars": "||What is the greatest common factor of 12 and 18?||",
    "output": "6.",
    "prompt_id": "1f967a42-a697-410c-8ff9-4b8d4af259cd"
  },
  {
    "prompt_count": 412,
    "instruction_original": "Come up with a riddle",
    "input": "",
    "instruct_all_caps_and_typo": "DEVISE A RIDLE, PLEASE!",
    "instruct_all_caps_and_typo_and_missing_bracket": "DEVISE A RIDLE PLEASE]",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "DEVISE A RIDLE PLEASE] #@! (MISSING STUFF)",
    "instruct_code_fence": "`print(generate_riddle())`",
    "instruct_curly_quotations": "‚ÄúCraft a clever conundrum.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúCraft a clever conundrum‚Äù]",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúCraft a clever conumdrum‚Äù]",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúCraft a clever conumdrum‚Äù]^&%!",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúCraft a clever conumdrum‚Äù ^&% ! ",
    "instruct_curly_quotations_and_typo": "‚ÄúCraft a clever conumdrum.‚Äù",
    "instruct_emoji": "ü§îüí°üìù Create a brain teaser!",
    "instruct_emoji_and_typo": "ü§îüí°üò¨ Make a ridle!",
    "instruct_emoji_and_typo_and_missing_bracket": "üí°‚ùìü§Ø Craate a riddle]",
    "instruct_emoji_and_typo_and_random_question_marks": "ü§îüí°‚ùì‚ùì‚ùì Creaate a riddle????",
    "instruct_emoticon": "(-_-) ? -> Create a riddle! :-)",
    "instruct_emoticon_and_typo": "(^_^) -> Make a ridle! :-(",
    "instruct_emoticon_and_typo_and_missing_bracket": "(:O) Formulte a riddle]",
    "instruct_emoticon_and_typo_and_random_exclamations": "(o_O) !!! Invent a ridle!!!!",
    "instruct_helpful_markdown_structure": "## Task: Create a Riddle - _Elaborate on a clever enigma._",
    "instruct_helpful_meaning_reinforing_characters": "--- Riddle Time! --- > Formulate a brain-teasing question.",
    "instruct_html_tags": "<span>Devise a challenging riddle.</span>",
    "instruct_markdown_bold": "**Generate a clever riddle.**",
    "instruct_markdown_bold_and_italic": "_**Craft a puzzling riddle.**_",
    "instruct_markdown_italic": "_Invent a new riddle._",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Please, devis a rddle now]",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "OKAY!!! GENRATE A RIDLE!!! NOW!!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Cme! up. with a riddl ?!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": " Cme ! up. with a riddl ? ! ",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Pls... mak3 a ?riddle? ...now#",
    "instruct_several_html_tags": "<p><strong><em><u>Formulate a compelling enigma.</u></em></strong></p>",
    "instruct_small_hex_blob": "0xR1DDL3: Produce enigma.",
    "instruct_spoiler_bars": "||Create a riddle.||",
    "output": "What's full of keys but can't open a single lock?\nAnswer: A piano.",
    "prompt_id": "c59e9c07-9bc2-4a1c-8254-e5e823345e06"
  },
  {
    "prompt_count": 413,
    "instruction_original": "Identify the conjugation of the verb: I will have helped",
    "input": "",
    "instruct_all_caps_and_typo": "IDNETIFY THE CONJUGATION OF THE VERB: I WILL HAVE HELPED",
    "instruct_all_caps_and_typo_and_missing_bracket": "IDNETIFY THE CONJUGATION OF THE VERB: I WILL HAVE HELPED",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "IDNETIFY THE CONJUGATION OF THE VERB: I WILL HAVE HELPED !!!@@#",
    "instruct_code_fence": "```text\nIdentify the conjugation of the verb: I will have helped\n```",
    "instruct_curly_quotations": "Identify the conjugation of the verb: ‚ÄòI will have helped‚Äô",
    "instruct_curly_quotations_and_missing_bracket": "Identify the conjugation of the verb: ‚ÄòI will have helped‚Äô",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "Identyfy the conjogation of the verb: ‚ÄòI will have helped‚Äô",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "Identyfy the conjogation of the verb: ‚ÄòI will have helped‚Äô &*^",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "Identyfy the conjogation of the verb : ‚Äò I will have helped ‚Äô & * ^",
    "instruct_curly_quotations_and_typo": "Identyfy the conjogation of the verb: ‚ÄòI will have helped‚Äô",
    "instruct_emoji": "ü§î What's the conjugation for 'I will have helped'? üßê Verb form identification challenge! üöÄ",
    "instruct_emoji_and_typo": "ü§î What's the conjogation for 'I will have helped'? üßê",
    "instruct_emoji_and_typo_and_missing_bracket": "ü§î What's the conjogation for 'I will have helped'? üßê Verb form identification challenge!",
    "instruct_emoji_and_typo_and_random_question_marks": "ü§î What's the conjogation for 'I will have helped'???? üßê",
    "instruct_emoticon": "Hey! :-) Can you pinpoint the conjugation of 'I will have helped'? Thanks! ;-)",
    "instruct_emoticon_and_typo": "Hey! :-) Can you pinpoint the conjogation of 'I will have helped'? ;-)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Hey! :-) Can you pinpoint the conjogation of 'I will have helped'? Thanks!",
    "instruct_emoticon_and_typo_and_random_exclamations": "Hey! :-) Can you pinpoint the conjogation of 'I will have helped'?! Thanks!!!!",
    "instruct_helpful_markdown_structure": "### Verb Conjugation Task\n*   **Verb Phrase:** `I will have helped`\n*   **Task:** Identify the precise conjugation (tense, aspect, voice, mood, person, number).\n*   **Goal:** Provide a comprehensive analysis.",
    "instruct_helpful_meaning_reinforing_characters": "-> Your task: Determine the conjugation.\n-> The verb phrase: 'I will have helped'\n-> Provide a clear and concise answer.",
    "instruct_html_tags": "Identify the conjugation of the verb: <verb>I will have helped</verb>",
    "instruct_markdown_bold": "Please identify the **conjugation** of the verb: I will have helped.",
    "instruct_markdown_bold_and_italic": "Please tell me the ***conjugation*** of the verb phrase: *I will have helped*.",
    "instruct_markdown_italic": "Can you identify the *conjugation* of the verb phrase: I will have helped?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Identyfy the conjugation\nof the verb: I will have helped",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Identyfy the conjugation!\nof the verb: I will have helped!!!!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Identyfy, the conjugation?\nof the verb: I will have helped;",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Identyfy , the conjugation ?\nof the verb: I will have helped ;",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Identyfy the conjugation of the\nverb: I will have helped ???",
    "instruct_several_html_tags": "<p>Could you please <em>identify</em> the <b>conjugation</b> of the specific <span class='verb-phrase'>verb phrase</span>:</p> <span class='example'>I will have helped</span>?",
    "instruct_small_hex_blob": "4964656e746966792074686520636f6e6a75676174696f6e206f662074686520766572623a20492077696c6c20686176652068656c706564",
    "instruct_spoiler_bars": "||What is the conjugation of 'I will have helped'?||",
    "output": "Future perfect.",
    "prompt_id": "0ad84b39-e2c1-4ad7-88d0-fc7b3c768712"
  },
  {
    "prompt_count": 414,
    "instruction_original": "What is the first rule of storytelling?",
    "input": "",
    "instruct_all_caps_and_typo": "WOT IS THE FURST RUEL OF STOYTELLING?",
    "instruct_all_caps_and_typo_and_missing_bracket": "WOT IS THE FURST RUEL OF STOYTELLING]?",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "WOT IS THE FURST RUEL OF STOYTELLING]? &@#!??",
    "instruct_code_fence": "What is the critical initial axiom for successful storytelling?",
    "instruct_curly_quotations": "‚ÄúWhat is the paramount rule for narrative artistry?‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúWot is the paramownt ruel for narrativ artistry‚Äù]?",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúWot is the paramownt ruel for narrativ artistry‚Äù]?",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúWot is the paramownt ruel for narrativ artistry‚Äù]? @#$%!",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúWot is the paramownt ruel for narrativ artistry‚Äù]? @#$%! ",
    "instruct_curly_quotations_and_typo": "‚ÄúWot is the paramownt ruel for narrativ artistry?‚Äù",
    "instruct_emoji": "üìö‚úçÔ∏è What's the fundamental principle of narrative creation? ü§î‚ú®",
    "instruct_emoji_and_typo": "üìö‚úçÔ∏è WOT'S THE FUNDEMENTAL PRICIPLE OF NARRITIVE CREATION? ü§î‚ú®",
    "instruct_emoji_and_typo_and_missing_bracket": "üìö‚úçÔ∏è WOT'S THE FUNDEMENTAL PRICIPLE OF NARRITIVE CREATION]? ü§î‚ú®",
    "instruct_emoji_and_typo_and_random_question_marks": "üìö‚úçÔ∏è WOT'S THE FUNDEMENTAL PRICIPLE OF NARRITIVE CREATION???????? ü§î‚ú®",
    "instruct_emoticon": "(^o^) What's the numero uno guideline for spinning a yarn? ;)",
    "instruct_emoticon_and_typo": "(^o^) WOT'S THE NUMERO UNO GUIDELINE FOR SPINNING A YARN? ;)",
    "instruct_emoticon_and_typo_and_missing_bracket": "(^o^) WOT'S THE NUMERO UNO GUIDELINE FOR SPINNING A YARN]?;)",
    "instruct_emoticon_and_typo_and_random_exclamations": "(^o^) WOT'S THE NUMERO UNO GUIDELINE FOR SPINNING A YARN!!!!!!!! ;)",
    "instruct_helpful_markdown_structure": "# The Art of Narrative## Core Principles- What is the foundational rule for crafting a compelling story?",
    "instruct_helpful_meaning_reinforing_characters": "-> What's the absolute *first* rule of storytelling? <= That's the question!",
    "instruct_html_tags": "<p>What is the primary directive for crafting a compelling story?</p>",
    "instruct_markdown_bold": "**What is the most important initial rule of storytelling?**",
    "instruct_markdown_bold_and_italic": "***What is the essential foundational rule of effective narrative construction?***",
    "instruct_markdown_italic": "*What is the guiding principle that must be followed first in storytelling?*",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Wot is the first ruel of storyteling]?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Wot is the first ruel of storytelling]!!!???!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Wot is the first ruel of storytelling.]?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Wot is the first ruel of storytelling.] ?",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Wot is the fir t ruel of storytelin??!",
    "instruct_several_html_tags": "<div><p><span>What</span> is the <b>absolute first</b> rule of <em>storytelling</em>?</p></div>",
    "instruct_small_hex_blob": "57686174206973207468652066697273742072756c65206f662073746f727974656c6c696e673f",
    "instruct_spoiler_bars": "||What is the very first, most crucial rule of telling a story?||",
    "output": "The first rule of storytelling is to hook the audience in the very first few sentences.",
    "prompt_id": "e5282352-6d59-4436-b0fa-177a958de986"
  },
  {
    "prompt_count": 415,
    "instruction_original": "Rewrite the sentence into more descriptive form:\nThe food was delicious.",
    "input": "",
    "instruct_all_caps_and_typo": "THE MEAL WAS AN EXQUISIT SYMPHONY OF FLAVORS, A TRULY DELIGHTFULL CULINARY EXPERIENCE.",
    "instruct_all_caps_and_typo_and_missing_bracket": "THE MEAL WAS AN EXQUISIT SYMPHONY OF FLAVORS, A TRULY DELIGHTFULL CULINARY EXPERIENCE.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "THE MEAL WAS AN EXQUISIT SYMPHONY OF FLAVORS, A TRULY DELIGHTFULL CULINARY EXPERIENCE. $$$",
    "instruct_code_fence": "```The meal was an exquisite symphony of flavors, a truly delightful culinary experience.```",
    "instruct_curly_quotations": "‚ÄúThe meal was an exquisite symphony of flavors, a truly delightful culinary experience.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúThe meal was an exquisite symphony of flavors, a truly delightful culinary experience.‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúThe meel was an exquisit symphony of flavors, a truly delightfull culinary experience.‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúThe meel was an exquisit symphony of flavors, a truly delightfull culinary experience.‚Äù ***",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúThe meel was an exquisit symphony of flavors, a truly delightfull culinary experience.‚Äù * * *",
    "instruct_curly_quotations_and_typo": "‚ÄúThe meel was an exquisit symphony of flavors, a truly delightfull culinary experience.‚Äù",
    "instruct_emoji": "The meal was an exquisite symphony of flavors üé∂, a truly delightful culinary experience. üòã‚ú®",
    "instruct_emoji_and_typo": "The meel was an exquisit symphony of flavors üé∂, a truly delightfull culinary experience. üòã‚ú®",
    "instruct_emoji_and_typo_and_missing_bracket": "The meel was an exquisit symphony of flavors üé∂, a truly delightfull culinary experience. üòã‚ú®",
    "instruct_emoji_and_typo_and_random_question_marks": "The meel was an exquisit symphony of flavors üé∂, a truly delightfull culinary experience. ??? üòã‚ú®",
    "instruct_emoticon": "The meal was an exquisite symphony of flavors, a truly delightful culinary experience. (^o^)",
    "instruct_emoticon_and_typo": "The meel was an exquisit symphony of flavors, a truly delightfull culinary experience. (^O^)",
    "instruct_emoticon_and_typo_and_missing_bracket": "The meel was an exquisit symphony of flavors, a truly delightfull culinary experience. (^O^)",
    "instruct_emoticon_and_typo_and_random_exclamations": "The meel was an exquisit symphony of flavors, a truly delightfull culinary experience. !!! (^O^)",
    "instruct_helpful_markdown_structure": "## Food Description: The meal was an exquisite symphony of flavors, a truly delightful culinary experience. *It was a culinary masterpiece!*",
    "instruct_helpful_meaning_reinforing_characters": "!!!The meal was an exquisite symphony of flavors, a truly delightful culinary experience.!!!",
    "instruct_html_tags": "<p>The meal was an exquisite symphony of flavors, a truly delightful culinary experience.</p>",
    "instruct_markdown_bold": "**The meal was an exquisite symphony of flavors, a truly delightful culinary experience.**",
    "instruct_markdown_bold_and_italic": "_**The meal was an exquisite symphony of flavors, a truly delightful culinary experience.**_",
    "instruct_markdown_italic": "*The meal was an exquisite symphony of flavors, a truly delightful culinary experience.*",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "The meal was an exquisit symphony of flavors, a truly delightfull culinary experience.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "The meal was an exquisit symphony of flavors, a truly delightfull culinary experience.!!!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "The meal was an exquisit; symphony of flavors. a truly delightfull culinary experience?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "The meal was an exquisit ; symphony of flavors. a truly delightfull culinary experience ?",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "The meal was an exquisit %^ symphony of flavors, a truly delightfull @# culinary experience.",
    "instruct_several_html_tags": "<div><span><p>The meal was an exquisite symphony of flavors, a truly delightful culinary experience.</p></span></div>",
    "instruct_small_hex_blob": "5472756c7920616d617a696e6720666f6f642e",
    "instruct_spoiler_bars": "||The meal was an exquisite symphony of flavors, a truly delightful culinary experience.||",
    "output": "The food was succulent and tantalizing to the taste buds.",
    "prompt_id": "dcad129b-9dc8-4aee-97b4-b8ad25c32623"
  },
  {
    "prompt_count": 416,
    "instruction_original": "Name 5 emotional states",
    "input": "",
    "instruct_all_caps_and_typo": "NAME FVE EMOTIONAL STATS PLZ",
    "instruct_all_caps_and_typo_and_missing_bracket": "NAME FVE EMOTIONAL STAES",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "??! NAME FVE EMOTIONAL STATS PLZ @#$",
    "instruct_code_fence": "```Please list 5 emotional states.```",
    "instruct_curly_quotations": "‚ÄúName 5 emotional states‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúName 5 emotional states",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúNaem 5 emotinal statts",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúNaem 5 emotinal statts ???",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚Äú Naem 5 emotinal statts ??? ",
    "instruct_curly_quotations_and_typo": "‚ÄúNaem 5 emotinal statts‚Äù",
    "instruct_emoji": "Could you please list 5 feelings? üòäüòåüò¢üò†üòÑ",
    "instruct_emoji_and_typo": "Pleese list 5 feeleengs. üò¨",
    "instruct_emoji_and_typo_and_missing_bracket": "Name 5 emojional staets üò¨",
    "instruct_emoji_and_typo_and_random_question_marks": "What??? ar 5 emojional stats?? ü§®?",
    "instruct_emoticon": "Can you identify 5 different emotional conditions for me? :-)",
    "instruct_emoticon_and_typo": "Can yu identfy 5 differnt emotinal condtions for me? :-(",
    "instruct_emoticon_and_typo_and_missing_bracket": "Lsit 5 emotinal sttes :)",
    "instruct_emoticon_and_typo_and_random_exclamations": "LIST!!! 5! EMOTIONAL STTES!!!! :D",
    "instruct_helpful_markdown_structure": "### Emotional StatesPlease provide a list of 5 emotional states.",
    "instruct_helpful_meaning_reinforing_characters": "--- Name 5 emotional states! ---",
    "instruct_html_tags": "Please <em>enumerate</em> 5 <del>distinct</del> emotional states.",
    "instruct_markdown_bold": "Kindly **list 5 emotional states**.",
    "instruct_markdown_bold_and_italic": "Please *__name five emotional states__*.",
    "instruct_markdown_italic": "Can you _enumerate 5 emotional states_?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Name5emotoionalstates.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "NAME!!!5EMOTIONAL!STTES!!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Name,5emotoionalstates;",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Name ,5emotoionalstates ; ",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Na e5 emotoionalsta es $%",
    "instruct_several_html_tags": "Could you <b>kindly</b> <i>list</i> <u>five</u> <p>different</p> emotional <span>conditions</span>?",
    "instruct_small_hex_blob": "4E616D65203520656D6F74696F6E616C20737461746573",
    "instruct_spoiler_bars": "||Could you name 5 emotional states?||",
    "output": "Joy, sadness, fear, anger, and disgust.",
    "prompt_id": "91628790-aef6-437a-8f30-a0195db53e40"
  },
  {
    "prompt_count": 417,
    "instruction_original": "Create a funny one-liner.",
    "input": "",
    "instruct_all_caps_and_typo": "CREAT A FUNE ONE-LINER.",
    "instruct_all_caps_and_typo_and_missing_bracket": "GENERATE A FUNNY ONE-LINER. (",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "GENERATE A FUNNY ONE-LINER. ( %$#",
    "instruct_code_fence": "```python# Generate a funny one-linerprint('Write a single, hilarious sentence.')```",
    "instruct_curly_quotations": "‚ÄúCreate a funny one-liner.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúCreate a funny one-liner. [‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúCreat a fune one-liner. [‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúCreat a fune one-liner. [!@#‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": " ‚Äú Creat a fune one-liner . [ !@# ‚Äù ",
    "instruct_curly_quotations_and_typo": "‚ÄúCreat a fune one-liner.‚Äù",
    "instruct_emoji": "üí°‚úçÔ∏è A hilarious single sentence. üòÇ",
    "instruct_emoji_and_typo": "Creat a fune one-liner. üòÇ",
    "instruct_emoji_and_typo_and_missing_bracket": "Creat a fune one-liner [. üòÇ",
    "instruct_emoji_and_typo_and_random_question_marks": "Creat a fune one-liner??? üòÇ",
    "instruct_emoticon": "Write a humorous, concise sentence. :D",
    "instruct_emoticon_and_typo": "Creat a fune one-liner. :(",
    "instruct_emoticon_and_typo_and_missing_bracket": "Creat a fune one-liner [. :(",
    "instruct_emoticon_and_typo_and_random_exclamations": "Creat a fune one-liner!!! :D",
    "instruct_helpful_markdown_structure": "### Task: Funny One-Liner Creation- **Objective:** Generate a single, amusing sentence.",
    "instruct_helpful_meaning_reinforing_characters": "[[Create a funny one-liner.]]",
    "instruct_html_tags": "<html><body>Create a funny one-liner.</body></html>",
    "instruct_markdown_bold": "**Generate a funny one-liner.**",
    "instruct_markdown_bold_and_italic": "_**Craft a humorous, concise phrase.**_",
    "instruct_markdown_italic": "_Produce a witty, single-sentence joke._",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Creat a funny\none-liner [",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Creat a funny\none-liner [!!!!!!!!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Creat a funny,\none-liner [",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": " Creat a funny , \none-liner [ ",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Creat a funny\non-liner!!! &@",
    "instruct_several_html_tags": "<div><p><span>Please create a short, humorous sentence.</span></p></div>",
    "instruct_small_hex_blob": "43726561746520612066756e6e79206f6e652d6c696e65722e",
    "instruct_spoiler_bars": "||I need a funny one-liner.||",
    "output": "I used to think the brain was the most important organ. Then I thought, look what's telling me that!",
    "prompt_id": "29cb4c6a-3d3d-4f6f-ba15-0f0c0a189c24"
  },
  {
    "prompt_count": 418,
    "instruction_original": "Generate a list of fashion trends for Spring 2021.",
    "input": "",
    "instruct_all_caps_and_typo": "PLEESE LISST DA LATEST FASHION TRENDZ FOR SPRING 2021. ASAP!",
    "instruct_all_caps_and_typo_and_missing_bracket": "KINDLY GENERAT A LISST OF FASHION TRENDS FOR SPRING 2021.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "PLEZE MAKE A LISST OF FASHUN TRENZZZ %^& FOR SPRING 2021 NOW!!!???",
    "instruct_code_fence": "```\nPlease list the top fashion trends for Spring 2021.\n```",
    "instruct_curly_quotations": "‚ÄúPlease provide a list of fashion trends for Spring 2021.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúCan u make a lisst of fashion trendz for Spring 2021.‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúCould you pleeze creat a lisst of fashun trendz for Spring 2021.‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúPleaze compile a lisst of fashin trendz for Spring 2021 üòú.‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúKindly make a lisst of fashin trendz for Spring 2021 üëç.  Thank you!‚Äù",
    "instruct_curly_quotations_and_typo": "‚ÄúKindley genrate a lisst of fasion trendz for Spring 2021.‚Äù",
    "instruct_emoji": "üå∏üëó Generate a stylish list of Spring 2021 fashion trends, please! ‚ú®",
    "instruct_emoji_and_typo": "Pls make a lisst üìù of fasheon trendz for Spring 2021. üôè",
    "instruct_emoji_and_typo_and_missing_bracket": "Kindle üëó generat a lisst of fashion trends for Spring 2021.",
    "instruct_emoji_and_typo_and_random_question_marks": "Make a lisst üå∏ of fasheon trendz for Spring 2021?? Pls help me out??",
    "instruct_emoticon": "Hey there! :-) Can you please make a list of cool fashion trends for Spring 2021? Thx! :D",
    "instruct_emoticon_and_typo": "Can u get me a lisst :-) of fashion trendz for Sprng 2021? Thanx! :P",
    "instruct_emoticon_and_typo_and_missing_bracket": "Hey, :-) couuld u genrate a lisst of fashen trendz for Spring 2021? Plz! ;-(",
    "instruct_emoticon_and_typo_and_random_exclamations": "Giv me a lisst of fashion trendz! :O for Spring 2021!!! Get it done!!!!",
    "instruct_helpful_markdown_structure": "# Spring 2021 Fashion Trends Report\n## Task:\n- Compile a detailed list of emerging and notable fashion trends.\n- Focus specifically on the Spring 2021 season.\n---\n**Expected Output:** A clear, itemized list.",
    "instruct_helpful_meaning_reinforing_characters": ">>> Spring 2021 Fashion Trends <<<\n-> Generate a thorough list outlining the key fashion trends for the upcoming Spring 2021 season.\n‚úì Aim for comprehensiveness and clarity.",
    "instruct_html_tags": "<html><p>Please provide a list of fashion trends for Spring 2021.</p></html>",
    "instruct_markdown_bold": "**List the key fashion trends for Spring 2021.**",
    "instruct_markdown_bold_and_italic": "**_Kindly provide a comprehensive list of the prevailing fashion trends for Spring 2021._**",
    "instruct_markdown_italic": "*Please enumerate the significant fashion trends for Spring 2021.*",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Pls genrate a\nlisst of fashion\ntrens for Spring 2021.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Genrat a lisst!\nof fashin trenz!\nfor Spring 2021!!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Please.\ngenerate a list;\nof fashion trends, for Spring 2021!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Please .\ngenerate a list ;\nof fashion trends , for Spring 2021 ! with extra space.",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Generat a list\nof fasheun trends\nfor Spring 2021?",
    "instruct_several_html_tags": "<div><h1>Fashion Forecast</h1><p>Could you kindly compile an extensive list detailing the prominent fashion trends anticipated for the Spring 2021 season?</p></div>",
    "instruct_small_hex_blob": "47656E65726174652061206C697374206F662066617368696F6E207472656E647320666F7220537072696E6720323032312E",
    "instruct_spoiler_bars": "||Provide a definitive list of fashion trends for Spring 2021.||",
    "output": "Spring 2021 fashion trends include bright colors, tie-dye and other prints, polka dots, pastels, boho style, flared jeans and trousers, utilitarian looks, earthy tones, sustainable fabrics, and cropped tops.",
    "prompt_id": "3a8ed918-6d7c-4673-9c19-906a5ef314b1"
  },
  {
    "prompt_count": 419,
    "instruction_original": "What is the impact of deforestation on wildlife?",
    "input": "",
    "instruct_all_caps_and_typo": "WHAT IS THE IMPACKT OF DEFORESTATION ON WILDLIFE?",
    "instruct_all_caps_and_typo_and_missing_bracket": "WHAT IS THE IMPACKT OF DEFORESTATION ON WILDLIFE",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "WH@T IS THE IMPACKT OF DEFORESTATION ON WILDLIFE!",
    "instruct_code_fence": "``` // Querying environmental impact // Subject: Deforestation // Target: Wildlife // Request: Detail the impact of deforestation on wildlife. ```",
    "instruct_curly_quotations": "‚ÄúWhat is the impact of deforestation on wildlife?‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúWhat is the impact of deforestation on wildlife?",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúWhat is the impackt of deforestation on wildlife?",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúWh@t is the impackt of deforest@ti0n on wildlife?!",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚Äú Wh@t is the impackt of deforest@ti0n on wildlife ?! ",
    "instruct_curly_quotations_and_typo": "‚ÄúWhat is the impackt of deforestation on wildlife?‚Äù",
    "instruct_emoji": "üå≥‚û°Ô∏èüìâü¶å habitat? üåçüíî Tell me the impact of losing forests on animals. üêÖüêíüê¶",
    "instruct_emoji_and_typo": "üå≥‚û°Ô∏èüìâü¶å impackt? üíî What happens to animals when trees are cut down? üêí",
    "instruct_emoji_and_typo_and_missing_bracket": "üå≥‚û°Ô∏èüìâü¶å impackt üíî What happens to animals when trees are cut down üêí",
    "instruct_emoji_and_typo_and_random_question_marks": "üå≥‚û°Ô∏èüìâü¶å impackt??? üíî What happens to animals when trees are cut down???? üêí",
    "instruct_emoticon": "Deforestation's impact on wildlife? (>.<) What happens to animal habitats? :(",
    "instruct_emoticon_and_typo": "What's the impackt of deforestation on wildlife? (>.<) What happens to animal habitats? :(",
    "instruct_emoticon_and_typo_and_missing_bracket": "What's the impackt of deforestation on wildlife (>.< What happens to animal habitats :(",
    "instruct_emoticon_and_typo_and_random_exclamations": "What's the impackt of deforestation on wildlife!!! (>.<) What happens to animal habitats!!! :(",
    "instruct_helpful_markdown_structure": "### Deforestation and Wildlife: The Impact - A Detailed Analysis Could you please elaborate on: * The direct effects of deforestation on animal populations? * Consequences for ecosystems and biodiversity? * Long-term ramifications for wildlife survival?",
    "instruct_helpful_meaning_reinforing_characters": "What is the *negative* impact of deforestation on wildlife? (destruction) (loss)",
    "instruct_html_tags": "What is the <em>impact</em> of <b>deforestation</b> on <span style='color:green;'>wildlife</span>?",
    "instruct_markdown_bold": "What is the **impact** of **deforestation** on **wildlife**?",
    "instruct_markdown_bold_and_italic": "What is the ***impact*** of ***deforestation*** on ***wildlife***?",
    "instruct_markdown_italic": "What is the *impact* of *deforestation* on *wildlife*?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "What is the impackt of deforestation on wildlife (missing closing thought",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "What is the!!! impackt of!!! deforestation on!!! wildlife!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "What is the? impackt of; deforestation on: wildlife.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "What is the ? impackt of ; deforestation on : wildlife .",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Wh@t is the impackt 0f deforest@ti0n on wildlife¬ø Please clarify the impact of cutting down forests on animals.",
    "instruct_several_html_tags": "What is the <p><span><em><b>significant</b></em></span></p> <h2>impact</h2> of <a href=' deforestation.org'>deforestation</a> on <br> <img src='wildlife.jpg' alt='wildlife'> wildlife?",
    "instruct_small_hex_blob": "576861742069732074686520696d70616374206f66206465666f726573746174696f6e206f6e2077696c646c6966653f",
    "instruct_spoiler_bars": "||What is the impact of deforestation on wildlife?||",
    "output": "Deforestation has a range of consequences for wildlife, including habitat loss, disruption of ecosystems and food webs, displacement of species, increased competition, and increased vulnerability to predation. Additionally, deforestation can increase the risk of climate change, resulting in altered temperatures and unpredictable weather patterns that further disrupt wildlife habitats.",
    "prompt_id": "16778410-5560-465c-9871-148a8f27d692"
  },
  {
    "prompt_count": 420,
    "instruction_original": "Explain economics with an example.",
    "input": "",
    "instruct_all_caps_and_typo": "EXPLAIN ECONOMIKS WITH AN EXAMPLE, PLEESE.",
    "instruct_all_caps_and_typo_and_missing_bracket": "EXPLAIN ECONOMIKS WITH AN EXAMPLE. PLEESE )",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "EXPLAIN ECONOMIKS WITH AN EXAMPLE. PLEESE )#@!%",
    "instruct_code_fence": "```Explain economics with an example.```",
    "instruct_curly_quotations": "‚ÄúExplain economics with an example.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúExplain economics with an example.‚Äù )",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúExplane economics with an example.‚Äù )",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúExplane economics with an example.‚Äù )#@$",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúExplane economics with an example.‚Äù  )#@$",
    "instruct_curly_quotations_and_typo": "‚ÄúExplane economics with an example.‚Äù",
    "instruct_emoji": "Can you explain economics üßê with a practical example? üí∞",
    "instruct_emoji_and_typo": "Can you explain economiks üßê with an example? üçé",
    "instruct_emoji_and_typo_and_missing_bracket": "Explain economiks with an example? üßêüçé )",
    "instruct_emoji_and_typo_and_random_question_marks": "Explain economiks with an example???? üßêüçé",
    "instruct_emoticon": "Could you break down economics for me, with a real-world illustration? :)",
    "instruct_emoticon_and_typo": "Could you explane economics with a real-world illustration? :)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Explane economics with an example? :) (",
    "instruct_emoticon_and_typo_and_random_exclamations": "Explane economics with an example!!! :D",
    "instruct_helpful_markdown_structure": "### Understanding Economics\n*   **Objective**: Define economics.\n*   **Requirement**: Provide a relevant example.\n*   **Goal**: Ensure clarity and comprehension.",
    "instruct_helpful_meaning_reinforing_characters": "Please _explain_ `economics` with a *clear* {example}.",
    "instruct_html_tags": "<p>Please explain economics with an example.</p>",
    "instruct_markdown_bold": "**Explain economics with a practical example.**",
    "instruct_markdown_bold_and_italic": "**_Thoroughly explain economics, including a pertinent example._**",
    "instruct_markdown_italic": "_Explain economics by giving a clear, illustrative example._",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "EXPLAIN\nECONOMIKS\nWITH AN EXAMPLE. PLEESE )",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "EXPLAIN\nECONOMIKS\nWITH AN EXAMPLE. PLEESE )!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "EXPLAIN\nECONOMIKS\nWITH AN EXAMPLE. PLEESE. )",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "EXPLAIN\nECONOMIKS\nWITH AN EXAMPLE. PLEESE.  )",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "EXPLAIN\nECONOMIKS\nWITH AN EXAMPLE. PLEESE &^$",
    "instruct_several_html_tags": "<div><span><h1>Explain economics with an example.</h1></span></div>",
    "instruct_small_hex_blob": "0x4578706c61696e2065636f6e6f6d696373207769746820616e206578616d706c652e",
    "instruct_spoiler_bars": "||Explain economics with an example.||",
    "output": "Economics is the study of how people and societies make decisions about production and consumption of goods and services. For example, a bakery may decide how much bread to produce and price it accordingly, depending on the prevailing market conditions, in order to maximize their profits.",
    "prompt_id": "e08ee910-e66c-4c04-bfa7-cc26d2d758c1"
  },
  {
    "prompt_count": 421,
    "instruction_original": "Provide me a list of diseases that can be caused by smoking.",
    "input": "",
    "instruct_all_caps_and_typo": "GIVE ME A LISST OF DIZEASES CAUSED BY SMOKING.",
    "instruct_all_caps_and_typo_and_missing_bracket": "GIVE ME A LISST OF DIZEASES CAUSED BY SMOKING.}",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "GIVE ME A LISST OF DIZEASES CAUSED BY SMOKING. } @#$",
    "instruct_code_fence": "```python get_smoking_diseases_list() ```",
    "instruct_curly_quotations": "‚ÄúProvide me a list of diseases that can be caused by smoking.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúProvide me a list of diseases that can be caused by smoking.‚Äù}",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúProvide me a lisst of dizases that can be caused by smoking.‚Äù}",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúProvide me a lisst of dizases that can be caused by smoking.‚Äù}!@#",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúProvide me a lisst of dizases that can be caused by smoking.‚Äù } ! @ # ",
    "instruct_curly_quotations_and_typo": "‚ÄúProvide me a lisst of dizases that can be caused by smoking.‚Äù",
    "instruct_emoji": "What illnesses can smoking cause? üö¨ü§¢",
    "instruct_emoji_and_typo": "What illneses can smoking cause? üö¨",
    "instruct_emoji_and_typo_and_missing_bracket": "What illneses can smoking cause? üö¨}",
    "instruct_emoji_and_typo_and_random_question_marks": "What illneses can smoking cause??? üö¨",
    "instruct_emoticon": "Can you list diseases caused by smoking? :-( üò∑",
    "instruct_emoticon_and_typo": "Can you list sum diseases that smoking might cause? :-(",
    "instruct_emoticon_and_typo_and_missing_bracket": "Can you list sum diseases that smoking might cause? :-()}",
    "instruct_emoticon_and_typo_and_random_exclamations": "Can you list sum diseases that smoking might cause!!! :-(",
    "instruct_helpful_markdown_structure": "### Smoking-Related Health Issues - Identify the diseases - Provide a clear, concise list",
    "instruct_helpful_meaning_reinforing_characters": "--- Diseases caused by smoking: list them! ---",
    "instruct_html_tags": "<p>Please list diseases caused by smoking.</p>",
    "instruct_markdown_bold": "**What diseases are caused by smoking?**",
    "instruct_markdown_bold_and_italic": "**_List the illnesses caused by smoking._**",
    "instruct_markdown_italic": "*Can you list the diseases caused by smoking?*",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Provide me a list of dizases that can be caused by smoking.}",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Provide me a list of dizases that can be caused by smoking!!!!} ",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Provide me a list of dizases that can be. caused by smoking?]",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Provide me a list of dizases that can be . caused by smoking ? ] ",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Provide me a list of dizases that can be #!@ caused by smoking.",
    "instruct_several_html_tags": "<span>Could you please provide</span> <br> <span style='font-weight:bold;'>a list of illnesses</span> <em>linked to smoking?</em>",
    "instruct_small_hex_blob": "50726f766964652061206c697374",
    "instruct_spoiler_bars": "||What medical conditions stem from smoking?||",
    "output": "Smoking can cause a range of diseases, including cancer, emphysema, chronic bronchitis, heart disease, stroke, and diabetes. Additionally, smoking can increase the risk of developing respiratory illnesses such as pneumonia, asthma, and bronchitis, and can increase the risk of birth defects and developmental delays in infants.",
    "prompt_id": "e710e586-2452-468e-80c7-1ce8605b72aa"
  },
  {
    "prompt_count": 422,
    "instruction_original": "What is the difference between machine learning and deep learning?",
    "input": "",
    "instruct_all_caps_and_typo": "WAT IZ THA DIFERENCE BETWEN MACHIEN LERNING AN DUP LERNING?",
    "instruct_all_caps_and_typo_and_missing_bracket": "WAT IZ THA DIFERENCE BETWEN MACHIEN LERNING AN DUP LERNING{",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "WAT IZ THA DIFERENCE BETWEN MACHIEN LERNING AN DUP LERNING{ !@#$",
    "instruct_code_fence": "```python\\n# What is the difference between machine learning and deep learning?\\n```",
    "instruct_curly_quotations": "‚ÄúWhat is the difference between machine learning and deep learning?‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúWhat is the difference between machine learning and deep learning?‚Äù {",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúWat is the difrence between machien lernin and deep lernin?‚Äù {",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúWat is the difrence between machien lernin and deep lernin?‚Äù {^&( ",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "  ‚ÄúWat  is   the difrence  between machien lernin  and deep  lernin?‚Äù {^& (  ",
    "instruct_curly_quotations_and_typo": "‚ÄúWat is the difrence between machien lernin and deep lernin?‚Äù",
    "instruct_emoji": "What's the üîë difference between machine learning ü§ñ and deep learning üß†?",
    "instruct_emoji_and_typo": "Wats the diffrense ü§ñ betwen machien lernin an deep lernin üß†?",
    "instruct_emoji_and_typo_and_missing_bracket": "Wats the diffrense ü§ñ betwen machien lernin an deep lernin üß† {",
    "instruct_emoji_and_typo_and_random_question_marks": "Wats the diffrense ü§ñ betwen machien lernin an deep lernin üß†?????",
    "instruct_emoticon": "So, what's the distinction between ML and DL? :)",
    "instruct_emoticon_and_typo": "Wot's the difrence betwene ML N DL? =(",
    "instruct_emoticon_and_typo_and_missing_bracket": "Wot's the difrence betwene ML N DL? ={",
    "instruct_emoticon_and_typo_and_random_exclamations": "Wot's the difrence betwene ML N DL!!! =(! ",
    "instruct_helpful_markdown_structure": "# Understanding ML vs DL: Key Differences\\n\\n- What defines Machine Learning?\\n- What defines Deep Learning?\\n- How do they differ fundamentally?",
    "instruct_helpful_meaning_reinforing_characters": ">>> What is the difference between machine learning and deep learning??? <<<",
    "instruct_html_tags": "<span>What is the difference between machine learning and deep learning?</span>",
    "instruct_markdown_bold": "**What is the difference between machine learning and deep learning?**",
    "instruct_markdown_bold_and_italic": "***What is the difference between machine learning and deep learning?***",
    "instruct_markdown_italic": "*What is the difference between machine learning and deep learning?*",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Wha t is th e diffrnce\\nbetw een m achine learning\\nand de ep learnin g ? {",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "WHAAT IS TH DIFERENC!!!!!\\nBETWEN MACHINE LEARNNING AND DEEP LEARNNING!!!! {",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "What is the diffrence.\\nbetweem machine learning!\\nand deep learninng? {",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "  What  is   the diffrenc.. \\n betweem  machine learning: \\n and deep  learninng.  {",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Wh@t is the differnc\\nbetw een ma chine le@rning\\nan d de e p learnng?",
    "instruct_several_html_tags": "<div><p><b><i>What is the difference between machine learning and deep learning?</i></b></p></div>",
    "instruct_small_hex_blob": "0x6d6c20646c2064696666",
    "instruct_spoiler_bars": "||What is the difference between machine learning and deep learning?||",
    "output": "Machine learning is a subset of artificial intelligence that uses algorithms to learn from data and improve performance on a task without explicit human programming. Deep learning is a type of machine learning that uses artificial neural networks to learn from large amounts of data and make predictions. Deep learning is more powerful and accurate than traditional machine learning, but also requires more computing power.",
    "prompt_id": "c38fb77c-bcb4-4302-9347-504953adfce2"
  },
  {
    "prompt_count": 423,
    "instruction_original": "Describe a typical workday for a barista.",
    "input": "",
    "instruct_all_caps_and_typo": "DISCRIBE A TIPICALL WORKDAI FOR A BARISTA, PREESE.",
    "instruct_all_caps_and_typo_and_missing_bracket": "DESCRIBE A TYPICAL WORKDAY FOR A BARISTAA. KINLDY TELL ME",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "DESCRIBE A TYPICAL WORKDAI FOR A BARISDA??? PLZ HINT",
    "instruct_code_fence": "```function describeBaristaWorkday() {  // Outline the common daily activities of a barista.  // Include opening, peak hours, closing, and everything in between.}```",
    "instruct_curly_quotations": "‚ÄúCould you outline a typical workday for a barista?‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúCould you outline a typical workday for a barista.‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúCuld you outline a typicall workday for a barista.‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúCuld you outline a typicall workday for a barista!!!!‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúCuld you outline a typicall workday for a barista !!!!‚Äù",
    "instruct_curly_quotations_and_typo": "‚ÄúCuld you outline a typicall workday for a barista?‚Äù",
    "instruct_emoji": "‚òïÔ∏èüö∂‚Äç‚ôÄÔ∏èüóìÔ∏è What's a barista's typical day like? Tell me! üòÉ",
    "instruct_emoji_and_typo": "‚òïÔ∏èüö∂‚Äç‚ôÄÔ∏èüóìÔ∏è Wats a barista's tipical day like? Tell me! üòÉ",
    "instruct_emoji_and_typo_and_missing_bracket": "‚òïÔ∏èüö∂‚Äç‚ôÄÔ∏èüóìÔ∏è Wats a barista's tipical day like! Tell me üòÉ",
    "instruct_emoji_and_typo_and_random_question_marks": "‚òïÔ∏èüö∂‚Äç‚ôÄÔ∏èüóìÔ∏è Wats a barista's tipical day like???? Tell me! üòÉ",
    "instruct_emoticon": "(-_-) What's a barista's typical workday like? Detail it for me! :)",
    "instruct_emoticon_and_typo": "(-_-) Wats a barista's tipical workday like? Detail it for me! :)",
    "instruct_emoticon_and_typo_and_missing_bracket": "(-_-) Wats a barista's tipical workday like! Detail it for me :)",
    "instruct_emoticon_and_typo_and_random_exclamations": "(-_-) Wats a barista's tipical workday like!!! Detail it for me! :)",
    "instruct_helpful_markdown_structure": "### Barista Workday Inquiry*   **Task**: Detail a barista's typical daily routine.*   **Scope**: Cover common activities from start to finish.*   **Desired Outcome**: A clear, comprehensive description.",
    "instruct_helpful_meaning_reinforing_characters": "üëâ Describe a typical barista's workday. ‚òïÔ∏è From opening to closing, what's their routine? ‚è∞",
    "instruct_html_tags": "<p>Please delineate a typical workday for a professional barista.</p>",
    "instruct_markdown_bold": "**Walk me through the standard workday of a barista.**",
    "instruct_markdown_bold_and_italic": "_**Elaborate on the regular daily routine of a barista.**_",
    "instruct_markdown_italic": "_Could you describe the usual duties and activities a barista performs during a typical shift?_",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Describe a typicall workd\nay for a ba rista. What do they do?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "DESCRIBE A TYPICAL WURKDAY\nFOR A BARISTA!!! WHAY DO THEY DO?!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Describe a typical,\nworkday,\nfor a barista.?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Describe a typical\nwork day  for a barista??",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Discribe a tpical workday,\nfor a barista,\ntell me more",
    "instruct_several_html_tags": "<div><span><p>Kindly articulate the common daily tasks and flow of a barista's workday.</p></span></div>",
    "instruct_small_hex_blob": "Barista daily routine. Describe.",
    "instruct_spoiler_bars": "||What does a barista typically do during their workday?||",
    "output": "A typical workday for a barista typically involves greeting customers, taking orders, preparing coffee drinks, cleaning and restocking, operating cash registers and making sure the area is kept clean and neat. They may also be responsible for making new drinks and running taste tests. Additionally, baristas may be responsible for food orders, setting up catering functions, and general customer service.",
    "prompt_id": "88f1035e-99e0-4105-94c7-b37c3edd4bd1"
  },
  {
    "prompt_count": 424,
    "instruction_original": "How does the human brain remember information?",
    "input": "",
    "instruct_all_caps_and_typo": "HOW DOES THE HUMAN BRAIN REMEBER INFORMAITON?",
    "instruct_all_caps_and_typo_and_missing_bracket": "HOW DOES THE HUMAN BRAIN REMEBER INFORMAITON?{",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "HOW DOES THE HUMAN BRAIN REMEBER INFORMAITON?{ #@$%",
    "instruct_code_fence": "```Query: How does the human brain remember information?```",
    "instruct_curly_quotations": "‚ÄúHow does the human brain remember information?‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúHow does the human brain remember information?‚Äù [",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúHow does the human brain remeber informaition?‚Äù [",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúHow does the human brain remeber informaition?‚Äù [ ~!@",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúHow does the human  brain  remeber  informaition?‚Äù [  ~!@ ",
    "instruct_curly_quotations_and_typo": "‚ÄúHow does the human brain remeber informaition?‚Äù",
    "instruct_emoji": "How does the human brain remember information? üß†üí°ü§î",
    "instruct_emoji_and_typo": "How does the human brain remeber informaition? üß†",
    "instruct_emoji_and_typo_and_missing_bracket": "How does the human brain remeber informaition? üß†}",
    "instruct_emoji_and_typo_and_random_question_marks": "How does the human brain remeber informaition? üß†????",
    "instruct_emoticon": "How does the human brain remember information? (^o^)",
    "instruct_emoticon_and_typo": "How does the human brain remeber informaition? :(",
    "instruct_emoticon_and_typo_and_missing_bracket": "How does the human brain remeber informaition? :(]",
    "instruct_emoticon_and_typo_and_random_exclamations": "How does the human brain remeber informaition? :D!!!",
    "instruct_helpful_markdown_structure": "### Understanding Human Memory - What are the fundamental processes involved in memory formation? - How does the brain encode, store, and retrieve information?",
    "instruct_helpful_meaning_reinforing_characters": "--> How does the human brain remember information? <-- ‚ú®",
    "instruct_html_tags": "What are the <memory>mechanisms</memory> of human information retention?",
    "instruct_markdown_bold": "Kindly elaborate on **how** the human brain stores and recalls information.",
    "instruct_markdown_bold_and_italic": "Please explain **_how_** the human brain processes and retains information.",
    "instruct_markdown_italic": "Describe *how* information is memorized by the human brain.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "How does the human brain reme ber informa tion? [",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "How does the human brain reme ber informa tion? { !!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "How does the human brain reme ber informa tion. [;",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "How does the human  brain  reme ber  informa  tion. [ ; ",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "How does the human brain reme ber informa tion? -+@",
    "instruct_several_html_tags": "<p>Could you explain <em>how</em> the human brain <strong>stores</strong> and <u>recalls</u> information?</p>",
    "instruct_small_hex_blob": "0xABC123DEF456",
    "instruct_spoiler_bars": "||How does the human brain remember information?||",
    "output": "The human brain stores information using networks of neurons that are connected via synapses. When an experience is remembered or recalled, these synapses increase the connections between neurons, which is how memories are encoded and stored. Additionally, the hippocampus serves as a gateway to the brain, helping to intervene in the formation and recall of memories.",
    "prompt_id": "89efe048-b77b-45fb-9932-a097c326ba53"
  },
  {
    "prompt_count": 425,
    "instruction_original": "How does the internet of things (IoT) work?",
    "input": "",
    "instruct_all_caps_and_typo": "HOW DUES THE INTERNET OF THINGS (IOT) WORK?",
    "instruct_all_caps_and_typo_and_missing_bracket": "HOW DUES THE INTERNET OF THINGS IOT WORK?",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "H*O#W D%U$E^S THE I*N&T^E*R%N$E#T O!F T@H#I$N%G^S I$O%T W!O@R#K?",
    "instruct_code_fence": "```How does the Internet of Things (IoT) work?```",
    "instruct_curly_quotations": "‚ÄúHow does the Internet of Things (IoT) work?‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúHow does the Internet of Things IOT work?‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúHow dues the Internet of Things IOT work?‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúH#o%w d^u*e&s t*h$e I*n&t^e*r%n$e#t o!f T@h#i$n%g^s I$O%T w!o@r#k?‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚Äú H#o%w  d^u*e&s  t*h$e  I*n&t^e*r%n$e#t  o!f  T@h#i$n%g^s  I$O%T  w!o@r#k?‚Äù",
    "instruct_curly_quotations_and_typo": "‚ÄúHow dues the Internet of Things (IoT) work?‚Äù",
    "instruct_emoji": "How does the Internet of Things (IoT) function? üåêüí°",
    "instruct_emoji_and_typo": "How dues the Internet of Things (IoT) function? üåêüí°",
    "instruct_emoji_and_typo_and_missing_bracket": "How dues the Internet of Things IOT function? üåêüí°",
    "instruct_emoji_and_typo_and_random_question_marks": "How dues the Internet of Things (IoT) function??? üåêüí°?",
    "instruct_emoticon": "How does the Internet of Things (IoT) operate? :) :O",
    "instruct_emoticon_and_typo": "How dues the Internet of Things (IoT) operate? :) :O",
    "instruct_emoticon_and_typo_and_missing_bracket": "How dues the Internet of Things IOT operate? :) :O",
    "instruct_emoticon_and_typo_and_random_exclamations": "How dues the Internet of Things (IoT) operate!!! :) :O!",
    "instruct_helpful_markdown_structure": "# Understanding IoT:How does the Internet of Things (IoT) work?## Key Components",
    "instruct_helpful_meaning_reinforing_characters": "‚ùì How does the Internet of Things (IoT) work? ‚öôÔ∏è",
    "instruct_html_tags": "<p>How does the Internet of Things (IoT) work?</p>",
    "instruct_markdown_bold": "**How does the Internet of Things (IoT) work?**",
    "instruct_markdown_bold_and_italic": "_**How does the Internet of Things (IoT) work?**_",
    "instruct_markdown_italic": "*How does the Internet of Things (IoT) work?*",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "How dues the Internet of\nThings IOT\nwork?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "How dues the Internet of\nThings IOT\nwork!!!!!!?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "How dues the Internet of\nThings IOT\nwork.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "How  dues  the  Internet  of\nThings  IOT\nwork.",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Hw des the Inte\nrnet o things (IoT) wor?",
    "instruct_several_html_tags": "<div><h1>How</h1> <p>does the Internet of Things (IoT) function?</p></div>",
    "instruct_small_hex_blob": "0x486f7720646f65732074686520696e7465726e6574206f66207468696e67732028496f542920776f726b3f",
    "instruct_spoiler_bars": "||How does the Internet of Things (IoT) work?||",
    "output": "The internet of things (IoT) uses physical sensors and devices connected to the internet to collect data and automate processes. These devices can interact with each other and send data to be processed and analyzed. This allows for efficient and sophisticated monitoring and control, resulting in increased automation, insights, and responsiveness.",
    "prompt_id": "0dbacd21-4b5b-48fb-aea9-3a44d27e2035"
  },
  {
    "prompt_count": 426,
    "instruction_original": "Give me an example of a conflict resolution technique.",
    "input": "",
    "instruct_all_caps_and_typo": "GIV ME AN EXAMPL OF A CONFLCIT RESOLUTION TECHNIIQUE.",
    "instruct_all_caps_and_typo_and_missing_bracket": "GIVE ME AN EXAMPL OF A CONFLCIT RESOLUTION TECHNIQUE, PLEASE [.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "GIV ME AN EXAMPL OF A CONFLCIT RESOLUTION TECHNIIQUE [ #$%^&*!",
    "instruct_code_fence": "```Please provide an example of a conflict resolution technique.```",
    "instruct_curly_quotations": "‚ÄúGive me an example of a conflict resolution technique.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúGive me an example of a conflict resolution technique‚Äù [",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúGiv me an exampl of a conflict resolution techniqe‚Äù [",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúGiv me an exampl of a conflict resolution techniqe‚Äù [!@#$%",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": " ‚Äú Giv  me  an  exampl  of  a  conflict  resolution  techniqe ‚Äù  [ ! @ # $ %  ",
    "instruct_curly_quotations_and_typo": "‚ÄúGiv me an exampl of a conflict resolution techniqe.‚Äù",
    "instruct_emoji": "Could you please provide an ü§ù example of a way to resolve a dispute? üïäÔ∏è",
    "instruct_emoji_and_typo": "Giv me an exampl of a conflict resolution techniqe. ü§ù",
    "instruct_emoji_and_typo_and_missing_bracket": "Giv me an exampl of a conflict resolution techniqe ü§ù [",
    "instruct_emoji_and_typo_and_random_question_marks": "Giv me an exampl of a conflict resolution techniqe???? ü§ù?",
    "instruct_emoticon": "Can you share an example of how to handle disagreements? :)",
    "instruct_emoticon_and_typo": "Giv me an exampl of a conflict resolution techniqe. :)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Giv me an exampl of a conflict resolution techniqe :) [",
    "instruct_emoticon_and_typo_and_random_exclamations": "Giv me an exampl of a conflict resolution techniqe!!! :)",
    "instruct_helpful_markdown_structure": "# Conflict Resolution Technique Request\n\nCould you please provide an example of a proven method for resolving conflicts?",
    "instruct_helpful_meaning_reinforing_characters": "I'm seeking an example (+) of a conflict resolution technique (peace-building).",
    "instruct_html_tags": "Please provide an example of a <b>conflict resolution</b> technique.",
    "instruct_markdown_bold": "I need an **example of a conflict resolution technique**.",
    "instruct_markdown_bold_and_italic": "Please provide an ***example of a conflict resolution technique***.",
    "instruct_markdown_italic": "Can you give me an *example of a conflict resolution technique*?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Could you \n pleas\ne give me a \nexample of \na conflict \nresolution \ntechnique [",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Giv me \nan example of \na conflict \nresolution \ntechniqe [!!!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Can you \nprovid\ne an \nexampl \nof a \nconflict \nresoltion \ntechnique. [?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Could you  \n give me an  \n exampl  \n of a conflict  \n resoltion  \n technique , [?  ",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Could you \npleas\ne give me an \nexampl\ne of a \nconflict\n resolution \ntechniqu ?><",
    "instruct_several_html_tags": "Could you please <i><p>offer</p></i> an <u>example</u> of a <br>conflict resolution technique?</br>",
    "instruct_small_hex_blob": "0x43525445: Example Conflict Resolution.",
    "instruct_spoiler_bars": "||I'm looking for an example of a conflict resolution technique.||",
    "output": "One conflict resolution technique is collaborative problem solving, which involves negotiating and finding a solution that both parties can agree on. This process involves understanding the issue, identifying the interests of both parties, exploring options and solutions, and finding a win-win outcome.",
    "prompt_id": "10ff8ae8-3972-44a5-b801-0f56f611f572"
  },
  {
    "prompt_count": 427,
    "instruction_original": "Pick out the correct noun from the following list.",
    "input": "river, mountain, book",
    "instruct_all_caps_and_typo": "PLEESE IDENTIFY THE CORREC NOUN FROM THE PROVIDED LISST.",
    "instruct_all_caps_and_typo_and_missing_bracket": "PLEESE IDENTIFY THE CORREC NOUN FROM THE PROVIDED LISST",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "PLEESE IDENTIFY THE CORREC NOUN FROM THE PROVIDED LISST @#$!",
    "instruct_code_fence": "```\nIdentify the correct noun from the provided list.\n```",
    "instruct_curly_quotations": "‚ÄúPlease identify the correct noun from the following list.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúPlease identify the correct noun from the following list.",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúPleese identify the correct noun from the following list.",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúPleese identify the correct noun from the following list. @#$",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúPleese identify the correct noun from the following list. @#$ ",
    "instruct_curly_quotations_and_typo": "‚ÄúPleese identify the correct noun from the following list.‚Äù",
    "instruct_emoji": "Please identify the noun from the provided list. ‚úÖüìù",
    "instruct_emoji_and_typo": "Pleese identify the noun from the provided list. üìù",
    "instruct_emoji_and_typo_and_missing_bracket": "Pleese identify the noun from the provided list üìù",
    "instruct_emoji_and_typo_and_random_question_marks": "Pleese??? identify the noun from the provided list??? üìù",
    "instruct_emoticon": "Please identify the noun from the provided list. :) üëç",
    "instruct_emoticon_and_typo": "Pleese identify the noun from the provided list. :)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Pleese identify the noun from the provided list :)",
    "instruct_emoticon_and_typo_and_random_exclamations": "Pleese!!! identify the noun from the provided list!!! :)",
    "instruct_helpful_markdown_structure": "## Noun Selection Guide\n\nPlease identify the correct noun from the following list.",
    "instruct_helpful_meaning_reinforing_characters": "--> [ACTION: IDENTIFY] the <U>correct</U> 'noun' from the *provided* list! <--",
    "instruct_html_tags": "<html>Identify the correct noun from the list provided.</html>",
    "instruct_markdown_bold": "**Identify the correct noun from the provided list.**",
    "instruct_markdown_bold_and_italic": "***Please identify the correct noun from the following list.***",
    "instruct_markdown_italic": "*Please identify the correct noun from the following list.*",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Pleese\nidentfy the\ncorrect\nnoun from the list",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Pleese!!!\nidentfy the!!!\ncorrect!!!\nnoun from the list!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Pleese;\nidentfy the;\ncorrect;\nnoun from the list.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Pleese ; \nidentfy the ; \ncorrect ; \nnoun from the list . ",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Pleese\nidentfy the\ncorrect\nnoun from the list...",
    "instruct_several_html_tags": "<p><em><span>Kindly select the appropriate noun from the given list.</span></em></p>",
    "instruct_small_hex_blob": "0x53656c656374204e6f756e",
    "instruct_spoiler_bars": "||Please identify the correct noun from the following list.||",
    "output": "River",
    "prompt_id": "d7ba82f8-f4e9-40d4-8f8a-3c77ae6510d9"
  },
  {
    "prompt_count": 428,
    "instruction_original": "Identify a programming language suitable for game development.",
    "input": "",
    "instruct_all_caps_and_typo": "IDENTIFY A PROGRMAING LANGUGE SUITABLE FOR GAME DEVLOPMENT.",
    "instruct_all_caps_and_typo_and_missing_bracket": "IDENTIFY A PROGRMAING LANGUGE SUITABLE FOR GAME DEVLOPMENT",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "IDENTIFY A PROGRMAING LANGUGE SUITABLE FOR GAME DEVLOPMENT q@#$",
    "instruct_code_fence": "`Identify a programming language suitable for game development.`",
    "instruct_curly_quotations": "‚ÄúIdentify a programming language suitable for game development.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúIdentify a programming language suitable for game development",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúIdntify a progrraming languge suitble for game developmnt",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúIdntify a progrraming languge suitble for game developmnt q@#$",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúIdntify a progrraming languge suitble for game developmnt q@#$ ",
    "instruct_curly_quotations_and_typo": "‚ÄúIdntify a progrraming languge suitble for game developmnt.‚Äù",
    "instruct_emoji": "Identify a programming language suitable for game development. üéÆüíª‚ú®",
    "instruct_emoji_and_typo": "Idntify a progrraming languge suitble for game developmnt. üéÆ",
    "instruct_emoji_and_typo_and_missing_bracket": "Idntify a progrraming languge suitble for game developmnt üéÆ",
    "instruct_emoji_and_typo_and_random_question_marks": "Idntify a progrraming languge suitble for game developmnt. ??? üéÆ",
    "instruct_emoticon": "Identify a programming language suitable for game development. :) <3",
    "instruct_emoticon_and_typo": "Idntify a progrraming languge suitble for game developmnt. :)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Idntify a progrraming languge suitble for game developmnt :)",
    "instruct_emoticon_and_typo_and_random_exclamations": "Idntify a progrraming languge suitble for game developmnt. !!! :)",
    "instruct_helpful_markdown_structure": "### Programming Language for Game Development. Please identify a programming language that is well-suited for the purpose of game development.",
    "instruct_helpful_meaning_reinforing_characters": "‚úÖ Identify a programming language suitable for game development. ‚úÖ",
    "instruct_html_tags": "<p>Identify a programming language suitable for game development.</p>",
    "instruct_markdown_bold": "**Identify a programming language suitable for game development.**",
    "instruct_markdown_bold_and_italic": "***Identify a programming language suitable for game development.***",
    "instruct_markdown_italic": "*Identify a programming language suitable for game development.*",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "IDENTIFY A PROGRMAING LANGUGE SUITABLE FOR GAME DEVLOPMENT",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "IDENTIFY A PROGRMAING LANGUGE SUITABLE FOR GAME DEVLOPMENT!!!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "IDENTIFY A PROGRMAING LANGUGE SUITABLE FOR GAME DEVLOPMENT?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "IDENTIFY A PROGRMAING LANGUGE SUITABLE FOR GAME DEVLOPMENT ? ",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "IDENTIFY A PROGRMAING LANGUGE SUITABLE FOR GAME DEVLOPMENT %^",
    "instruct_several_html_tags": "<div><span>Identify a programming language suitable for game development.</span></div>",
    "instruct_small_hex_blob": "4964656e7469667920612070726f6772616d6d696e67206c616e6775616765207375697461626c6520666f722067616d6520646576656c6f706d656e742e",
    "instruct_spoiler_bars": "||Identify a programming language suitable for game development.||",
    "output": "C++ is a suitable programming language for game development, as it is a high-performance language that can handle complex calculations. Furthermore, it has good support for object-oriented programming and memory management, making it well-suited for creating sophisticated game engine features such as AI and physics simulation.",
    "prompt_id": "9a6995ef-790d-4776-9d32-6bda50f34b0e"
  },
  {
    "prompt_count": 429,
    "instruction_original": "Make a list of different types of cryptocurrencies.",
    "input": "",
    "instruct_all_caps_and_typo": "PROVIDE A LITS OF DIFFERENT CRYTOCURRENCIES.",
    "instruct_all_caps_and_typo_and_missing_bracket": "MAKE A LISST OF VARYOUS CRYPTO CURRENCY TYPS",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "GENERAT A LIST OF CRIPTOCURRENSY TYPES XYZ123ABC.",
    "instruct_code_fence": "```\nGenerate a list of various cryptocurrency categories.\n```",
    "instruct_curly_quotations": "‚ÄúProvide a list of various types of cryptocurrencies.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúCreate a list of distinct cryptocurrency types.‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúGenerat a lits of cryptocurrency categories.‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúCompil a list of crypto-currency types XYZABC.‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúOutlin  a  lits  of  differant  cryptos  12345.‚Äù",
    "instruct_curly_quotations_and_typo": "‚ÄúPlese list diffrent kinds of digital currencies.‚Äù",
    "instruct_emoji": "Compile a list of various cryptocurrencies! üí∞üìà",
    "instruct_emoji_and_typo": "Lisst different types of cryptocurrencies. üí∞ü§î",
    "instruct_emoji_and_typo_and_missing_bracket": "Giv me a list of crytocurrencies! üí∏",
    "instruct_emoji_and_typo_and_random_question_marks": "Provid a list of crypto-currancies????? ü™ôüí°",
    "instruct_emoticon": "Could you please list different kinds of cryptocurrencies? :-)",
    "instruct_emoticon_and_typo": "Pleese list various crypto types. :-( ",
    "instruct_emoticon_and_typo_and_missing_bracket": "List sum diffrent digital currenciez. :-|",
    "instruct_emoticon_and_typo_and_random_exclamations": "Make a lyst of crypto-currency catagories!!!!!!!!!!! :D",
    "instruct_helpful_markdown_structure": "## Cryptocurrency List\n\n### Task:\n\nCreate a detailed list outlining the different types of cryptocurrencies.",
    "instruct_helpful_meaning_reinforing_characters": "--> Provide a clear list of the distinct types of cryptocurrencies. <-- ",
    "instruct_html_tags": "<p>List the different types of cryptocurrencies.</p>",
    "instruct_markdown_bold": "**List the various types of cryptocurrencies.**",
    "instruct_markdown_bold_and_italic": "***Provide a comprehensive list of distinct cryptocurrency categories.***",
    "instruct_markdown_italic": "*Enumerate different classifications of digital currencies.*",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "List\ndiferent\ncryptocurreny\ntypes.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "GIVE ME A LISST OF\nCRYTPO\nCURRENCIES\nTYPS!!!!!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "List\nvarious\ncryptocurreny\ntypes;.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Make\na  list\nof  differnt\ncrypto\ncurruncies.. ?",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Please\nprovid a\nlist of\ndiffernt\ndigital currencies\n@#$.",
    "instruct_several_html_tags": "<div><h3>Cryptocurrency Types</h3><p>Please enumerate various digital currencies.</p></div>",
    "instruct_small_hex_blob": "0x4C697374416C6C43727970746F5479706573",
    "instruct_spoiler_bars": "||Reveal the diverse types of cryptocurrencies.||",
    "output": "Different types of cryptocurrencies include Bitcoin, Ethereum, Litecoin, Dash, Zcash, Monero, Dogecoin, and Ripple.",
    "prompt_id": "df3310dc-fde1-4dad-89da-158bde2c0744"
  },
  {
    "prompt_count": 430,
    "instruction_original": "Create a tweet with the following hashtag.",
    "input": "#SharingIsCaring",
    "instruct_all_caps_and_typo": "PLESAE CREAT A TWEET WITH THE GIVEN HASHTAG.",
    "instruct_all_caps_and_typo_and_missing_bracket": "PLESAE CREAT A TWEET WITH THE GIVEN HASHTAG [",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "PLESAE CREAT A TWEET WITH THE GIVEN HASHTAG [XYZ>",
    "instruct_code_fence": "```\nPlease create a tweet that includes the provided hashtag.\n```",
    "instruct_curly_quotations": "‚ÄúCreate a tweet with the following hashtag.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúCreate a tweet with the following hashtag.‚Äù<",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúCreat a tweet with the followin hashtag.‚Äù <",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúCreat a tweet with the followin hashtag.‚Äù <XYZ>",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": " ‚ÄúCreat a tweet with the followin hashtag.‚Äù <XYZ> ",
    "instruct_curly_quotations_and_typo": "‚ÄúCreat a tweet with the followin hashtag.‚Äù",
    "instruct_emoji": "Craft a tweet üìù with the specified hashtag. #Ô∏è‚É£",
    "instruct_emoji_and_typo": "Creat a tweet üê¶ with the specified hashtag. #Ô∏è‚É£",
    "instruct_emoji_and_typo_and_missing_bracket": "Creat a tweet üìù with the specified hashtag. #Ô∏è‚É£{",
    "instruct_emoji_and_typo_and_random_question_marks": "Creat a tweet üê¶ with the specified hashtag??? #Ô∏è‚É£?",
    "instruct_emoticon": "Make a tweet :-) using the provided hashtag. ;-)",
    "instruct_emoticon_and_typo": "Mak a tweet :-) using the provided hashtag. ;-)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Mak a tweet :-) using the provided hashtag. :-(",
    "instruct_emoticon_and_typo_and_random_exclamations": "Mak a tweet :-) using the provided hashtag!!! ;-)",
    "instruct_helpful_markdown_structure": "### Tweet Creation Task\n*   **Action**: Create a tweet\n*   **Requirement**: Include the provided hashtag",
    "instruct_helpful_meaning_reinforing_characters": "üëâ Create a tweet üê¶ with the specified hashtag. #Ô∏è‚É£",
    "instruct_html_tags": "Please <code>create</code> a tweet with the provided hashtag.",
    "instruct_markdown_bold": "**Compose** a **tweet** using the **given hashtag**.",
    "instruct_markdown_bold_and_italic": "***Generate*** a ***tweet*** with the ***_following hashtag_***.",
    "instruct_markdown_italic": "_Draft_ a _tweet_ with the _specified hashtag_.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Create a twee\nt with the\ngiven hashtag{",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Crea\nte a tweet wth the\ngiven hashtag{!!!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Crea.te a tweet wth,the given hashtag.{",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": " Crea.te a tweet wth , the given hashtag.{ ",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Crea a tweet wth the given hashta.",
    "instruct_several_html_tags": "<p><b>Generate</b></p> a <em>tweet</em> using the <small>specified hashtag</small>.",
    "instruct_small_hex_blob": "0x4372: Create a tweet with the following hashtag.",
    "instruct_spoiler_bars": "||Produce a tweet incorporating the given hashtag.||",
    "output": "We can all make a difference in the world. #SharingIsCaring. Let's work together to create a better future for everyone.",
    "prompt_id": "d081ed83-9e03-4430-a9db-ef1a3d1f2dd3"
  },
  {
    "prompt_count": 431,
    "instruction_original": "Rewrite the following sentence using the root words.",
    "input": "I am not feeling well.",
    "instruct_all_caps_and_typo": "REWRTIE THE FOLLWING SENTNCE USING THE ROOT WORDZ.",
    "instruct_all_caps_and_typo_and_missing_bracket": "REWRTIE THE FOLLWING SENTNCE USING THE ROOT WORDZ.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "REWRTIE THE FOLLWING SENTNCE X Y Z USING THE ROOT WORDZ @ # $.",
    "instruct_code_fence": "```\nRewrite the following sentence using the root words.\n```",
    "instruct_curly_quotations": "‚ÄúRewrite the following sentence using the root words.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúRewrite the following sentence using the root words.‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúRewrtie the follwing sentence using the root wordz.‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúRewrtie the follwing $ sentence % using ^ the & root * wordz.‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúRewrtie  the  follwing  $  sentence  %  using  ^  the  &  root  *  wordz.‚Äù",
    "instruct_curly_quotations_and_typo": "‚ÄúRewrtie the follwing sentence using the root wordz.‚Äù",
    "instruct_emoji": "üìùüîÅ sentence ‚û°Ô∏èüå≥ words.",
    "instruct_emoji_and_typo": "üìùüîÅ sentence ‚û°Ô∏èüå≥ words. Plz.",
    "instruct_emoji_and_typo_and_missing_bracket": "üìùüîÅ sentence ‚û°Ô∏èüå≥ words. Plz.",
    "instruct_emoji_and_typo_and_random_question_marks": "üìùüîÅ sentence ‚û°Ô∏èüå≥ words??? Plz?",
    "instruct_emoticon": "Rewrite the following sentence using the root words. :)",
    "instruct_emoticon_and_typo": "Rewrite the follwing sentence using the root words. :(",
    "instruct_emoticon_and_typo_and_missing_bracket": "Rewrite the follwing sentence using the root words. ;-(",
    "instruct_emoticon_and_typo_and_random_exclamations": "Rewrite the follwing sentence using the root words. :D!!!",
    "instruct_helpful_markdown_structure": "```markdown\n# Sentence Transformation Task\n\n**Objective:** Rewrite the provided sentence.\n\n*   **Method:** Use only the fundamental \"root words.\"\n*   **Goal:** Simplify to core meanings.\n```",
    "instruct_helpful_meaning_reinforing_characters": "üëâ Rewrite the sentence üîÑ using only the üå≥ root words. ‚úÖ",
    "instruct_html_tags": "<p>Rewrite the following sentence using the root words.</p>",
    "instruct_markdown_bold": "**Rewrite the following sentence using the root words.**",
    "instruct_markdown_bold_and_italic": "***Rewrite the following sentence using the root words.***",
    "instruct_markdown_italic": "*Rewrite the following sentence using the root words.*",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Rwrit the followin\nsentence usin\nthe root words.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Rwrit the followin!!!\nsentence usin!!!\nthe root words!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Rwrit the followin;\nsentence usin:\nthe root words!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Rwrit  the  followin; \nsentence  usin: \nthe  root  words!",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Rwrit the followin @#$\nsentence usin %^&\nthe root words *().",
    "instruct_several_html_tags": "<div><h1>Rewrite</h1> <p>the <em>following</em> <strong>sentence</strong> using the <u>root words</u>.</p></div>",
    "instruct_small_hex_blob": "0xR3wr1t3: Rephrase the provided text, focusing on its fundamental word forms.",
    "instruct_spoiler_bars": "||Rewrite the following sentence using the root words.||",
    "output": "I am not feeling good.",
    "prompt_id": "a39be0a0-1656-4012-ac10-99bb6844e85e"
  },
  {
    "prompt_count": 432,
    "instruction_original": "Combine the two sentences into a single sentence.",
    "input": "He didn't go to the party. He stayed at home.",
    "instruct_all_caps_and_typo": "COMBIN THE TWO SENTNCES INTO A SINGEL SNETENCE.",
    "instruct_all_caps_and_typo_and_missing_bracket": "COMIBN TEH TWO SNTENSES INOT A SNGLE SENTENC ]",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "COMIBN TEH TWO SNTENCES INOT A SNGLE SENTENC ] @#$! %^&*",
    "instruct_code_fence": "```\nTask: Combine sentences.\nInput: Two sentences.\nOutput: One sentence.\n```",
    "instruct_curly_quotations": "‚ÄúCombine the two sentences into a single sentence.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúCombine the two sentences into a single sentence.‚Äù ]",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúComibn the two sntences into a singel snetence.‚Äù ]",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúComibn the two sntences into a singel snetence.‚Äù ] @#$!%^&",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúComibn the two sntences into a singel snetence.‚Äù ] @#$!%^& ",
    "instruct_curly_quotations_and_typo": "‚ÄúComibn the two sntences into a singel snetence.‚Äù",
    "instruct_emoji": "Merge these two phrases into one! ‚ú®‚úçÔ∏è",
    "instruct_emoji_and_typo": "Merj thse two phraes nto one! ‚ú®‚úçÔ∏è",
    "instruct_emoji_and_typo_and_missing_bracket": "Merj thse two phraes nto one! ‚ú®‚úçÔ∏è ]",
    "instruct_emoji_and_typo_and_random_question_marks": "Merj thse two phraes nto one! ‚ú®‚úçÔ∏è ???",
    "instruct_emoticon": "Put these two sentences together as one. :)",
    "instruct_emoticon_and_typo": "Put thes two sntences togethr as one. :)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Put thes two sntences togethr as one. :) ]",
    "instruct_emoticon_and_typo_and_random_exclamations": "Put thes two sntences togethr as one. :) !!!!!",
    "instruct_helpful_markdown_structure": "# Task: Sentence Combination\n- **Objective:** Merge two sentences.\n- **Output:** A single, cohesive sentence.",
    "instruct_helpful_meaning_reinforing_characters": "C_o_m_b_i_n_e the +two+ sentences >>into<< a |single| sentence!",
    "instruct_html_tags": "Please <i>combine</i> the <b>two</b> sentences into a <span style='color:blue;'>single</span> sentence.",
    "instruct_markdown_bold": "**Combine** the **two** sentences into a **single** sentence.",
    "instruct_markdown_bold_and_italic": "***Combine*** the _two_ sentences into a ***single*** sentence.",
    "instruct_markdown_italic": "_Combine_ the _two_ sentences into a _single_ sentence.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Combn the... two sentences... into a single... sentence. ]",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Combn the... two sentences... into a single... sentence. ] !!!!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Combn the... two sentences... into a single... sentence; ]",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Combn the... two sentences... into a single... sentence . ] ",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Combn the... two sentences... into a single... sentence. !@#$%",
    "instruct_several_html_tags": "Can you <p><b><u>combine</u></b></p> the <i>two</i> sentences into a <del>new</del> <span>single</span> sentence?",
    "instruct_small_hex_blob": "436f6d62696e65207468652074776f2073656e74656e63657320696e746f20612073696e676c652073656e74656e63652e",
    "instruct_spoiler_bars": "||Combine the two sentences into a single sentence.||",
    "output": "He didn't go to the party, instead staying at home.",
    "prompt_id": "69393178-8bee-4db2-a893-7963e1310c5f"
  },
  {
    "prompt_count": 433,
    "instruction_original": "Split the following sentence into two separate sentences.",
    "input": "He said hello and waved goodbye.",
    "instruct_all_caps_and_typo": "PLEESE SPLITT THE FOLLWING SENTANCE INTO TWO SEPERATE SENTENSES.",
    "instruct_all_caps_and_typo_and_missing_bracket": "PLEESE SPLITT THE FOLLWING SENTANCE INTO TWO SEPERATE SENTENSES",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "PLEESE SPLITT THE FOLLWING SENTANCE INTO TWO SEPERATE SENTENSES !!!@#$",
    "instruct_code_fence": "```%nSplit the given sentence into two individual sentences.%n```",
    "instruct_curly_quotations": "‚ÄúPlease split the following sentence into two separate sentences.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúPlease split the following sentence into two separate sentences.",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúPleze split the following sentance into two separate sentences.",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúPleze split the following sentance into two separate sentences. @#$!",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúPleze split the following sentance into two separate sentences. @#$! ",
    "instruct_curly_quotations_and_typo": "‚ÄúPleze split the following sentance into two separate sentences.‚Äù",
    "instruct_emoji": "Please split the following sentence into two distinct sentences. ‚úÇÔ∏è‚û°Ô∏èüìÑüìÑ",
    "instruct_emoji_and_typo": "Pleez split the following sentence into two distinct sentences. ‚úÇÔ∏è‚û°Ô∏èüìÑ",
    "instruct_emoji_and_typo_and_missing_bracket": "Pleez split the following sentence into two distinct sentences ‚úÇÔ∏è",
    "instruct_emoji_and_typo_and_random_question_marks": "Pleez split the following sentence into two distinct sentences? ‚úÇÔ∏è??",
    "instruct_emoticon": "Can you please split the following sentence into two different sentences? :D ;)",
    "instruct_emoticon_and_typo": "Kan you split the following sentence into two parts? :(",
    "instruct_emoticon_and_typo_and_missing_bracket": "Kan you split the following sentence into two parts",
    "instruct_emoticon_and_typo_and_random_exclamations": "Kan you split the following sentence into two parts! :O!",
    "instruct_helpful_markdown_structure": "# Task: Sentence Division%n%n- **Input**: A single sentence%n- **Output**: Two distinct sentences%n%n*Please split the provided sentence into two separate sentences.*",
    "instruct_helpful_meaning_reinforing_characters": "--- Split --- the following sentence --- into two separate sentences. ---",
    "instruct_html_tags": "<p>Kindly dissect the provided sentence into a pair of sentences.</p>",
    "instruct_markdown_bold": "**Break apart the following sentence into two complete sentences.**",
    "instruct_markdown_bold_and_italic": "_**Divide the upcoming sentence into two separate sentences.**_",
    "instruct_markdown_italic": "_Separate the subsequent sentence into two independent sentences._",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Split the%nfoLLwing%nsentence into%ntwo%nseparate sentences",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Split the%nfoLLwing%nsentence into%ntwo%nseparate sentences!!!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Split the%nfoLLwing%nsentence into%ntwo%nseparate sentences;",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Split the%nfoLLwing%nsentence into%ntwo%nseparate sentences; %n ",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Split the%nfoLLwing%nsentence into%ntwo%nseparate sentences... ###",
    "instruct_several_html_tags": "<div><span><p>Please break down the given sentence into two distinct sentences.</p></span></div>",
    "instruct_small_hex_blob": "53706C69742073656E742E",
    "instruct_spoiler_bars": "||Dissect the provided sentence into two independent sentences.||",
    "output": "He said hello. He waved goodbye.",
    "prompt_id": "8630587c-7f3c-44e7-8d26-b576fcdf6de2"
  },
  {
    "prompt_count": 434,
    "instruction_original": "Classify the following sentence as positive, negative, or neutral.",
    "input": "I'm going to the store tomorrow.",
    "instruct_all_caps_and_typo": "CLASIFEY THE SENTENCE AHS POSITIVE, NEGAIVE, OR NUTRAL.",
    "instruct_all_caps_and_typo_and_missing_bracket": "CLASIFEY THE SENTENCE AHS POSITIVE, NEGAIVE, OR NUTRAL.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "CLASIFEY THE SENTENCE AHS POSITIVE, NEGAIVE, OR NUTRAL. $$$^&*()",
    "instruct_code_fence": "{\"instruction\": \"Determine if the sentence is positive, negative, or neutral.\"}",
    "instruct_curly_quotations": "‚ÄüCategorize this sentence as ‚Äòpositive,‚Äô ‚Äònegative,‚Äô or ‚Äòneutral.‚Äô‚Äü",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄüCategorize this sentence as ‚Äòpositive,‚Äô ‚Äònegative,‚Äô or ‚Äòneutral.‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄüCategorize this sentnce as ‚Äòpositive,‚Äô ‚Äònegativ,‚Äô or ‚Äòneutral.‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄüCategorize this sentnce as ‚Äòpositive,‚Äô ‚Äònegativ,‚Äô or ‚Äòneutral.‚Äù %^&*",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄüCategorize this sentnce as ‚Äòpositive,‚Äô ‚Äònegativ,‚Äô or ‚Äòneutral.‚Äù %^&* ",
    "instruct_curly_quotations_and_typo": "‚ÄüCategorize this sentnce as ‚Äòpositive,‚Äô ‚Äònegativ,‚Äô or ‚Äòneutral.‚Äô‚Äü",
    "instruct_emoji": "Please categorize this sentence: üòä Positive, üòî Negative, or üòê Neutral?",
    "instruct_emoji_and_typo": "Plase categorise this sentenc: üòä Positive, üòî Negtive, or üòê Nutreal?",
    "instruct_emoji_and_typo_and_missing_bracket": "Plase categorise this sentenc üòä Positive, üòî Negtive, or üòê Nutreal?",
    "instruct_emoji_and_typo_and_random_question_marks": "Plase categorise this sentenc? üòä Positive?? üòî Negtive??? or üòê Nutreal?????",
    "instruct_emoticon": "Can you label this sentence? :) Positive, :( Negative, or :| Neutral?",
    "instruct_emoticon_and_typo": "Can u lable this sentance? :) Positiv, :( Negtive, or :| Nutral?",
    "instruct_emoticon_and_typo_and_missing_bracket": "Can u lable this sentance :) Positiv, :( Negtive, or :| Nutral?",
    "instruct_emoticon_and_typo_and_random_exclamations": "Can u lable this sentance! :) Positiv!! :( Negtive!!! or :| Nutral!!!!",
    "instruct_helpful_markdown_structure": "# Sentence Sentiment Analysis Please analyze the given sentence and assign one of the following sentiments: * Positive * Negative * Neutral Your task is to classify the sentence.",
    "instruct_helpful_meaning_reinforing_characters": "üëâ Classify the following sentence: Positive ‚ú®, Negative üíî, or Neutral ‚ÜîÔ∏è ?",
    "instruct_html_tags": "<html><body><p>Classify the given sentence: positive, negative, or neutral.</p></body></html>",
    "instruct_markdown_bold": "**Classify this sentence: positive, negative, or neutral.**",
    "instruct_markdown_bold_and_italic": "_**Kindly determine the sentiment of the provided sentence: positive, negative, or neutral.**_",
    "instruct_markdown_italic": "_Categorize the sentiment of the upcoming sentence: positive, negative, or neutral._",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Clasify the folowing sentence as positive, negative, or nutral.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Clasify the folowing sentence as positive, negative, or nutral.!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Clasify the folowing sentence as positive, negative, or nutral;",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Clasify the folowing sentence as positive, negative, or nutral; ",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Clasify the folowing sentence as positive, negative, or nutral #$!",
    "instruct_several_html_tags": "<!DOCTYPE html><html><head></head><body><div id=\"main\"><p><span>Please determine if the sentence is positive, negative, or neutral.</span></p></div></body></html>",
    "instruct_small_hex_blob": "436c6173736966792073656e74656e636520617320706f7369746976652c206e656761746976652c206f72206e65757472616c2e",
    "instruct_spoiler_bars": "||Please determine the sentiment (positive, negative, or neutral) of the sentence provided.||",
    "output": "Positive.",
    "prompt_id": "4b47f5ce-cf4c-4114-896b-66f581566646"
  },
  {
    "prompt_count": 435,
    "instruction_original": "Discover which word in the sentence carries the most weight.",
    "input": "She ordered Chinese food for dinner.",
    "instruct_all_caps_and_typo": "FIND THE WORSD IN THE SENTENCE THAT CARRIES THE MOST WEIGHT.",
    "instruct_all_caps_and_typo_and_missing_bracket": "DISCOVER WHCIH WORD IN THE SENTENCE CARRIES THE MOST WEIGHT",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "FIND!! THE WORSD IN THE SENTENCE THAT CARRIES THE MOOST WEIGHT. $$$",
    "instruct_code_fence": "```Determine the word with the highest semantic weight within the sentence.```",
    "instruct_curly_quotations": "‚ÄúDetermine the most significant word within the provided sentence.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúIdentify the word in the sentence that holds the most importance",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúFind the most significnt word in the sentence",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúWhich wrod in the sentence has the most impact???!!!",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúLocate the  main  wrd in the sentence that has the most  pwr!  ",
    "instruct_curly_quotations_and_typo": "‚ÄúAscertain the key wrod in the sentence with the most emphasis.‚Äù",
    "instruct_emoji": "üîçü§î‚úçÔ∏è Which word in the sentence holds the most impact? ‚öñÔ∏è",
    "instruct_emoji_and_typo": "üïµÔ∏è‚Äç‚ôÇÔ∏è Find the wurd in the sentence that carries the most weight. üèÜ",
    "instruct_emoji_and_typo_and_missing_bracket": "ü§î What's the main wrod in the sentence that carries the most impact üí•",
    "instruct_emoji_and_typo_and_random_question_marks": "üïµÔ∏è‚Äç‚ôÄÔ∏è Find the mst crucial word in the sentence??? üí°",
    "instruct_emoticon": "Figure out which word (in the sentence) has the most significance. ;-)",
    "instruct_emoticon_and_typo": "Ascertain the key word in the sentenc. :-|",
    "instruct_emoticon_and_typo_and_missing_bracket": "Which word in the statment has the most influenc :-(",
    "instruct_emoticon_and_typo_and_random_exclamations": "Identify the prime word in the statemnt! :-O!!!!",
    "instruct_helpful_markdown_structure": "# Task: Word Weight Analysis\nDetermine the key word in the provided sentence.\n\n## Objective\nIdentify the single word that conveys the most significant meaning or emphasis.",
    "instruct_helpful_meaning_reinforing_characters": ">>> Which WORD in the sentence has the most IMPACT? <<<",
    "instruct_html_tags": "<em>Determine the most impactful word in the given sentence.</em>",
    "instruct_markdown_bold": "**Find the word in the sentence with the most importance.**",
    "instruct_markdown_bold_and_italic": "**_Pinpoint the word within the sentence that possesses the greatest emphasis._**",
    "instruct_markdown_italic": "*Ascertain the word in the sentence that holds the primary emphasis.*",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Find the word in the\nsentense that\ncarries the most weight",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Identify the word in the\nsentenc that\ncarries the greatest importance!!!!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Which word in the\nsentece has the\nmost influence;",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Find the  word  in the\nsentenece  that holds the\nmost  importance .",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Locate the wrd in the\nsentence that\nholds the most impact.",
    "instruct_several_html_tags": "<div><p><strong>Identify</strong> the <u>primary</u> word in the sentence that carries the most significance.</p></div>",
    "instruct_small_hex_blob": "436f726520776f72642e",
    "instruct_spoiler_bars": "||Find the word in the sentence that is most crucial.||",
    "output": "Dinner.",
    "prompt_id": "361cfae3-4a26-4f8f-af39-3329a3ddead6"
  },
  {
    "prompt_count": 436,
    "instruction_original": "Rewrite the following sentence omitting the pronouns.",
    "input": "She told us she was busy.",
    "instruct_all_caps_and_typo": "REWITE THE FOLOWING SENTENCE OMITTING THE PRONOUNS.",
    "instruct_all_caps_and_typo_and_missing_bracket": "REWITE THE FOLOWING SENTENCE OMITTING THE PRONOUNS",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "REWITE THE FOLOWING SENTENCE OMITTING THE PRONOUNS !@#$",
    "instruct_code_fence": "```Rewrite the following sentence omitting the pronouns.```",
    "instruct_curly_quotations": "‚ÄúRewrite the following sentence omitting the pronouns.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúRewrite the following sentence omitting the pronouns.",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúRewite the folowing sentence omitting the pronuns.",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúRewite the folowing sentence omitting the pronuns. *&^",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúRewite the folowing sentence omitting the pronuns. * & ^ ",
    "instruct_curly_quotations_and_typo": "‚ÄúRewite the folowing sentence omitting the pronuns.‚Äù",
    "instruct_emoji": "Rewrite sentence, omit pronouns. ‚úçÔ∏èüö´üó£Ô∏è",
    "instruct_emoji_and_typo": "Rewrit sentence, omit pronuns. ‚úçÔ∏èüö´",
    "instruct_emoji_and_typo_and_missing_bracket": "Rewrit sentence, omit pronuns ‚úçÔ∏èüö´",
    "instruct_emoji_and_typo_and_random_question_marks": "Rewrit sentence, omit pronuns??? ‚úçÔ∏èüö´",
    "instruct_emoticon": "Rewrite the sentence, omitting pronouns. (-_^) ",
    "instruct_emoticon_and_typo": "Rewrit the sntence, omiting pronouns. (^_~)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Rewrit the sntence, omiting pronouns (^_~)",
    "instruct_emoticon_and_typo_and_random_exclamations": "Rewrit the sntence, omiting pronouns!!! (^_~)",
    "instruct_helpful_markdown_structure": "### Task: Sentence Transformation- Goal: Modify the given sentence.- Method: Exclude all pronouns from the text.",
    "instruct_helpful_meaning_reinforing_characters": "üëâ Rewrite the following sentence omitting the pronouns. üö´",
    "instruct_html_tags": "<p>Rewrite the following sentence omitting the pronouns.</p>",
    "instruct_markdown_bold": "**Rewrite the following sentence omitting the pronouns.**",
    "instruct_markdown_bold_and_italic": "***Rewrite the following sentence omitting the pronouns.***",
    "instruct_markdown_italic": "*Rewrite the following sentence omitting the pronouns.*",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Rewrit the\nfolowing sntence\nomitting the pronouns",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Rewrit the\nfolowing sntence\nomitting the pronouns!!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Rewrit the.\nfolowing sntence;\nomitting the pronouns,",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Rewrit the . \nfolowing sntence ; \nomitting the pronouns , ",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Rewrite the folowing sent%nce\nomitting the prono_ns.",
    "instruct_several_html_tags": "<div><span><p>Rewrite the following sentence omitting the pronouns.</p></span></div>",
    "instruct_small_hex_blob": "526577726974652073656E74656E6365206F6D697474696E672070726F6E6F756E732E",
    "instruct_spoiler_bars": "||Rewrite the following sentence omitting the pronouns.||",
    "output": "Told busy.",
    "prompt_id": "fe7fc22d-47ad-499b-b01f-18cf72f5ede8"
  },
  {
    "prompt_count": 437,
    "instruction_original": "Write a review of the restaurant.",
    "input": "The restaurant is called La Taqueria.",
    "instruct_all_caps_and_typo": "PLSASE WRITE A REVOEW OF THE RESTAURANT.",
    "instruct_all_caps_and_typo_and_missing_bracket": "PLSASE WRITE A REVOEW OF THE RESTAURANT",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "PLSASE WRITE A REVOEW OF THE RESTAURANT ^&*",
    "instruct_code_fence": "```Please compose a review for the restaurant.```",
    "instruct_curly_quotations": "‚ÄúWrite a review of the restaurant.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúWrite a review of the restaurant.",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúWrite a revoew of the restaurant.",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúWrite a revoew of the restaurant. #$",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúWrite a revoew of the restaurant . # $",
    "instruct_curly_quotations_and_typo": "‚ÄúWrite a revoew of the restaurant.‚Äù",
    "instruct_emoji": "Please provide a review of the restaurant. üçΩÔ∏è‚ú®üìù",
    "instruct_emoji_and_typo": "Please provide a revoew of the restaurant. üçΩÔ∏è",
    "instruct_emoji_and_typo_and_missing_bracket": "Please provide a revoew of the restaurant üçΩÔ∏è",
    "instruct_emoji_and_typo_and_random_question_marks": "Please provide a revoew of the restaurant. üçΩÔ∏è????",
    "instruct_emoticon": "Kindly share your review of the restaurant. :) :D",
    "instruct_emoticon_and_typo": "Kindly share your revoew of the restaurant. :)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Kindly share your revoew of the restaurant :)",
    "instruct_emoticon_and_typo_and_random_exclamations": "Kindly share your revoew of the restaurant. :)!!!!",
    "instruct_helpful_markdown_structure": "### Restaurant Review RequestPlease provide your comprehensive review for the specified restaurant. - Consider ambiance - Food quality - Service - Overall experience",
    "instruct_helpful_meaning_reinforing_characters": "‚úçÔ∏è Please write a review for the restaurant. üåü",
    "instruct_html_tags": "Please provide a <review> of the restaurant.",
    "instruct_markdown_bold": "Please **write a review** of the restaurant.",
    "instruct_markdown_bold_and_italic": "Please *__write a review__* of the restaurant.",
    "instruct_markdown_italic": "Please *write a review* of the restaurant.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Please writea revoew ofthe restaurant",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Please write!a revoew of!the restaurant!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Please write;a revoew of;the restaurant?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Please write ;a revoew of ;the restaurant ?",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Please w_itea rev_ew ofthe restaura_t",
    "instruct_several_html_tags": "Kindly <p>write</p> <span style='font-weight:bold;'>a</span> <review>of the restaurant</review>.",
    "instruct_small_hex_blob": "0x5772697465206120726576696577206F66207468652072657374617572616E742E",
    "instruct_spoiler_bars": "||Please provide a review of the restaurant.||",
    "output": "I recently visited La Taqueria and I was really impressed.  The food was amazing and the service was excellent. The atmosphere was cozy and inviting and the staff were friendly and attentive to all the customers. Overall, I would highly recommend La Taqueria for an enjoyable, delicious, and satisfying dining experience.",
    "prompt_id": "8291319d-70da-4c00-a497-c00186cf096d"
  },
  {
    "prompt_count": 438,
    "instruction_original": "Outline an itinerary for a three day trip.",
    "input": "Location: London, England",
    "instruct_all_caps_and_typo": "OUTLINE AN ITENRARY FOR A THREE DAY TRIPP.",
    "instruct_all_caps_and_typo_and_missing_bracket": "OUTLINE AN ITENRARY FOR A THREE DAY TRIPP",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "OUTLINE AN ITENRARY FOR A THREE DAY TRIPP. %&$#",
    "instruct_code_fence": "```Outline an itinerary for a three day trip.```",
    "instruct_curly_quotations": "‚ÄúOutline an itinerary for a three day trip.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúOutline an itinerary for a three day trip.",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúOutlne an itenerary for a three day trip.",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúOutlne an itenerary for a three day trip. @#$",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúOutlne an itenerary for a three day trip. @#$ ",
    "instruct_curly_quotations_and_typo": "‚ÄúOutlne an itenerary for a three day trip.‚Äù",
    "instruct_emoji": "Outline an itinerary for a three day trip. üìÖ‚úàÔ∏èüó∫Ô∏è",
    "instruct_emoji_and_typo": "Outlne an itenerary for a three day trip. üìÖ‚úàÔ∏èüó∫Ô∏è",
    "instruct_emoji_and_typo_and_missing_bracket": "Outlne an itenerary for a three day trip üìÖ‚úàÔ∏èüó∫Ô∏è",
    "instruct_emoji_and_typo_and_random_question_marks": "Outlne an itenerary for a three day trip??? üìÖ‚ùì‚úàÔ∏è‚ùìüó∫Ô∏è‚ùì",
    "instruct_emoticon": "Outline an itinerary for a three day trip. (^o^)",
    "instruct_emoticon_and_typo": "Outlne an itenerary for a three day trip. (^_-)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Outlne an itenerary for a three day trip (^o^",
    "instruct_emoticon_and_typo_and_random_exclamations": "Outlne an itenerary for a three day trip!!! (^o^!)",
    "instruct_helpful_markdown_structure": "Please structure a detailed 3-day trip itinerary using Markdown headings and bullet points for clarity.",
    "instruct_helpful_meaning_reinforing_characters": "üëâ Outline an itinerary for a three day trip. üëà",
    "instruct_html_tags": "<span>Outline an itinerary for a three day trip.</span>",
    "instruct_markdown_bold": "**Outline an itinerary for a three day trip.**",
    "instruct_markdown_bold_and_italic": "***Outline an itinerary for a three day trip.***",
    "instruct_markdown_italic": "*Outline an itinerary for a three day trip.*",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Outline an itnerary for a three day trip ",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Outline an itnerary for a three day trip!!!!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Outline an itnerary for a three day trip???",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Outline an itnerary for a three day trip ??? ",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Outline an itnerary for a three day trip &*(",
    "instruct_several_html_tags": "<div><p><span>Outline an itinerary for a three day trip.</span></p></div>",
    "instruct_small_hex_blob": "4f75746c696e6520616e206974696e657261727920666f7220612074687265652064617920747269702e",
    "instruct_spoiler_bars": "||Outline an itinerary for a three day trip.||",
    "output": "Day 1: Begin your day at St. Paul‚Äôs Cathedral, then take a leisurely stroll down to the bustling markets at Borough, followed by a cruise down the Thames. Afterward, walk through the lush greenery of Kensington Gardens and admire the beauty of Kensington Palace. End your day with dinner at one of London‚Äôs most iconic restaurants.\n\nDay 2: Start the day with a visit to the historic Tower of London, followed by a scenic boat ride along the Thames. Afterward, head to the Tate Britain art gallery and explore the best of British art. Then, practice your photography skills at the beautiful Oxford Street and Hyde Park. \n\nDay 3: Visit the famous British Museum, followed by a trip to the bustling and vibrant Covent Garden. Afterward, take a delightful walk to the iconic Big Ben, the most iconic clock tower in London. End the day with a quiet and cozy dinner surrounded by the views of the London Eye.",
    "prompt_id": "deb32643-c788-41b7-a6a1-d79826bd7773"
  },
  {
    "prompt_count": 439,
    "instruction_original": "Classify the item as either animal or vegetable.",
    "input": "Banana",
    "instruct_all_caps_and_typo": "CLASIFY THE ITEM AS EITHER ANIMAL OR VEGETABLEE.",
    "instruct_all_caps_and_typo_and_missing_bracket": "CLASIFYY THE ITEM AS EITHER ANIMAL OR VEGETABLE. [",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "### CLASIFY THE ITEM AS EITHER ANIMAL OR VEGETABLEE $$$ [",
    "instruct_code_fence": "```Classify the item as either animal or vegetable.```",
    "instruct_curly_quotations": "‚ÄúClassify the item as either animal or vegetable.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúClassify the item as either animal or vegetable.‚Äù {",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúClassfy the item as either anmial or vegtable.‚Äù [",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúClassfy the item as either anmial or vegtable.‚Äù #$ [",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúClassfy the item as either anmial or vegtable.‚Äù #$ [ ",
    "instruct_curly_quotations_and_typo": "‚ÄúClassfy the item as either anmial or vegtable.‚Äù",
    "instruct_emoji": "Is this üêæ animal or ü•¶ vegetable? Please classify! ‚ú®",
    "instruct_emoji_and_typo": "Classfy the item as either üêæ anmial or ü•¶ vegtable. ‚ú®",
    "instruct_emoji_and_typo_and_missing_bracket": "Classfy the item as either üêæ anmial or ü•¶ vegtable. {",
    "instruct_emoji_and_typo_and_random_question_marks": "Classfy the item as either üêæ anmial or ü•¶ vegtable. ???",
    "instruct_emoticon": "Can you classify this item as an animal (^.^) or a vegetable (o.O)? Let me know! :)",
    "instruct_emoticon_and_typo": "Classfy the itm as either anmial (^.^) or vegtable (o.O).",
    "instruct_emoticon_and_typo_and_missing_bracket": "Classfy the itm as either anmial (^.^) or vegtable (o.O) [",
    "instruct_emoticon_and_typo_and_random_exclamations": "Classfy the itm as either anmial (^.^) or vegtable (o.O)!!!!!!",
    "instruct_helpful_markdown_structure": "# Classification Task - Categorize the given item. - Is it an 'Animal'? - Or is it a 'Vegetable'? Please provide your classification.",
    "instruct_helpful_meaning_reinforing_characters": "‚û°Ô∏è Classify the item as either animal üêæ or vegetable ü•ï. ‚¨ÖÔ∏è",
    "instruct_html_tags": "<body>Classify the item as either animal or vegetable.</body>",
    "instruct_markdown_bold": "**Classify** the item as **animal** or **vegetable**.",
    "instruct_markdown_bold_and_italic": "***Classify*** the item as ***_either_*** animal or vegetable.",
    "instruct_markdown_italic": "*Classify* the item as *animal* or *vegetable*.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Classify the item as either anmial or vegetable. (",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Classify the item as either anmial or vegetable!!!!!!! (",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Classify the item as either anmial or vegetable.. (",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Classify the item as either anmial or vegetable.. ( ",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Classify the item as eithe animal or vegetabl. --?",
    "instruct_several_html_tags": "<div><p><b>Please</b> <i>classify</i> the item: Is it an <u>animal</u> or a <strong>vegetable</strong>?</p></div>",
    "instruct_small_hex_blob": "436c61737369667920746865206974656d2061732065697468657220616e696d616c206f7220766567657461626c652e",
    "instruct_spoiler_bars": "||Classify the item as either animal or vegetable.||",
    "output": "Animal: No, it's a vegetable.",
    "prompt_id": "342d47ea-9df4-4695-9cd9-499848f16d95"
  },
  {
    "prompt_count": 440,
    "instruction_original": "Derive the mathematical equation for a straight line.",
    "input": "",
    "instruct_all_caps_and_typo": "DERIVEE THE MATHEMATEICAL EQUATION FOR A STRAIGHT LINE.",
    "instruct_all_caps_and_typo_and_missing_bracket": "DERIVE THE MATHEMTICAL EQUATION FOR A STRAIGHT LINE. (POINT-SLOPE FORMULA",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "DERIVE THE MATHEMTICAL EQUATION FOR A STRAIGHT LINE. (POINT-SLOPE FORMULA!!! &*@#^",
    "instruct_code_fence": "```python # Task: Derive the equation of a straight line. # Expected output: y = mx + c (or similar) # Please explain the derivation. derive_straight_line_equation() ```",
    "instruct_curly_quotations": "‚ÄúDerive the mathematical equation for a straight line.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúDerive the mathematical equation for a straight line (including an example‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúDerive the mathemtical equation for a straight line (including an example‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúDerive the mathemtical equation for a straight line (including an example @#$‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúDerive the mathemtical equation for a straight line (including an example @#$ ‚Äù",
    "instruct_curly_quotations_and_typo": "‚ÄúDerive the mathemtical equation for a straight line.‚Äù",
    "instruct_emoji": "Can you üìê formulate the ‚ûï equation for a üìè straight line? ‚ú®",
    "instruct_emoji_and_typo": "Can you üìê formulate the ‚ûï equaton for a üìè straight line? ‚ú®",
    "instruct_emoji_and_typo_and_missing_bracket": "Can you üìê formulate the ‚ûï equaton for a üìè straight line? ‚ú® (SLOPE-INTERCEPT FORM",
    "instruct_emoji_and_typo_and_random_question_marks": "Can you üìê formulate the ‚ûï equaton for a üìè straight line??? ‚ú®?",
    "instruct_emoticon": "Please determine the algebraic formula for a linear function. :)",
    "instruct_emoticon_and_typo": "Please determine the algebraic formla for a linear function. :)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Please determine the algebraic formla for a linear function. :) (POINT-SLOPE FORM",
    "instruct_emoticon_and_typo_and_random_exclamations": "Please determine the algebraic formla for a linear function. :) !!!!",
    "instruct_helpful_markdown_structure": "### Task: Straight Line Equation Please provide the standard mathematical equation for a straight line, including a brief derivation or explanation of its components.",
    "instruct_helpful_meaning_reinforing_characters": "Derive the mathematical equation for a straight line. (i.e., y=mx+c)",
    "instruct_html_tags": "The task is to <span>derive</span> the mathematical equation for a straight line.",
    "instruct_markdown_bold": "Kindly **derive** the mathematical equation for a straight line.",
    "instruct_markdown_bold_and_italic": "Please *__derive__* the _mathematical_ equation for a *straight line*.",
    "instruct_markdown_italic": "Could you *derive* the equation for a straight line?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Derive the mathmatical equation for a straight line.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Derive the mathmatical equation for a straight line!!!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Derive the mathmatical; equation for a straight line.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Derive the mathmatical ; equation for a straight line . ",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Derive the mathmatical ~!@# equation for a straight line of a line.",
    "instruct_several_html_tags": "Please <em>help</em> me <strong>understand</strong> how to <del>discover</del> <u>formulate</u> the equation for a straight line.",
    "instruct_small_hex_blob": "Derive the mathematical equation for a straight line. (0x79=0x6D0x78+0x63)",
    "instruct_spoiler_bars": "||I need assistance to|| ||derive the mathematical equation for a straight line.||",
    "output": "y = mx + b, where m is the slope and b is the y-intercept of the line.",
    "prompt_id": "9cbb86db-f93d-4720-af4c-73455fea4936"
  },
  {
    "prompt_count": 441,
    "instruction_original": "Describe the physical features of a tiger.",
    "input": "",
    "instruct_all_caps_and_typo": "DESCRIBE THE PHYSIKAL FEATURES OF A TIGER.",
    "instruct_all_caps_and_typo_and_missing_bracket": "[DESCRIBE THE PHYSIKAL FEATURES OF A TIGER.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "[DESCRIBE THE PHYSIKAL FEATURES OF A TIGER. @#$",
    "instruct_code_fence": "```\nDescribe the physical features of a tiger.\n```",
    "instruct_curly_quotations": "‚ÄúDescribe the physical features of a tiger.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúDescribe the physical features of a tiger.",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúDescribe the physiical features of a tiger.",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúDescribe the physiical features of a tiger. *&^",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": " ‚ÄúDescribe the physiical features of a tiger. *&^( ",
    "instruct_curly_quotations_and_typo": "‚ÄúDescribe the physiical features of a tiger.‚Äù",
    "instruct_emoji": "üêÖ Describe the physical features of a tiger. üìè",
    "instruct_emoji_and_typo": "üêÖ Describe the physiical features of a tiger. üìè",
    "instruct_emoji_and_typo_and_missing_bracket": "[üêÖ Describe the physiical features of a tiger. üìè",
    "instruct_emoji_and_typo_and_random_question_marks": "üêÖ Describe the physiical features of a tiger. ????",
    "instruct_emoticon": "Describe the physical features of a tiger. =^..^=",
    "instruct_emoticon_and_typo": "Describe the physiical features of a tiger. =^..^=",
    "instruct_emoticon_and_typo_and_missing_bracket": "[Describe the physiical features of a tiger. =^..^=",
    "instruct_emoticon_and_typo_and_random_exclamations": "Describe the physiical features of a tiger. !!!!!!!",
    "instruct_helpful_markdown_structure": "### Tiger Anatomy\n\nProvide a comprehensive overview of the tiger's physical characteristics, detailing aspects such as their coat pattern, size, musculature, and distinctive features.",
    "instruct_helpful_meaning_reinforing_characters": "--> Describe the physical features of a tiger. <-- ",
    "instruct_html_tags": "<html>Describe the physical features of a tiger.</html>",
    "instruct_markdown_bold": "**Describe the physical features of a tiger.**",
    "instruct_markdown_bold_and_italic": "***Describe the physical features of a tiger.***",
    "instruct_markdown_italic": "*Describe the physical features of a tiger.*",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "[Describe the physikal features\nof a tiger.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "[Describe the physikal features\nof a tiger.!!!!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "[Describe the physikal features\nof a tiger?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": " [Describe the physikal features\nof a tiger?! ",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Describe the physikal features\nof a tiger. {|}~",
    "instruct_several_html_tags": "<main><p><strong>Describe the physical features of a tiger.</strong></p></main>",
    "instruct_small_hex_blob": "44657363726962652074686520706879736963616c206665617475726573206f6620612074696765722e",
    "instruct_spoiler_bars": "||Describe the physical features of a tiger.||",
    "output": "Tigers are large, powerful cats with extremely strong muscles. They have short, reddish orange fur covered with dark vertical stripes. Their heads are darker with narrower stripes and the tail is long and the tip is usually white. They have large, padded feet and can weigh up to 660 pounds. Tigers' eyes are yellow with vertical, black pupils. They have sharp teeth and large, retractable claws.",
    "prompt_id": "c2a661ba-8c40-49a3-b468-00e8f02321ab"
  },
  {
    "prompt_count": 442,
    "instruction_original": "Summarize the argument in the text.",
    "input": "In the book \"Crime and Punishment\" by Fyodor Dostoevsky, the main character, Raskolnikov, commits a murder in hope of revealing a higher purpose.",
    "instruct_all_caps_and_typo": "SUMMRAIZE THE ARUGMENT IN THE TEXT.",
    "instruct_all_caps_and_typo_and_missing_bracket": "SUMMRAIZE THE ARUGMENT IN THE TEXT",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "SUMMRAIZE THE ARUGMENT IN THE TEXT. %&#!",
    "instruct_code_fence": "```Summarize the argument in the text.```",
    "instruct_curly_quotations": "‚ÄúSummarize the argument in the text.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúSummarize the argument in the text.",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúSummraize the argumnt in the text.",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúSummraize the argumnt in the text. @#$%",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúSummraize the argumnt in the text. @#$% ",
    "instruct_curly_quotations_and_typo": "‚ÄúSummraize the argumnt in the text.‚Äù",
    "instruct_emoji": "üìù Summarize the argument in the text. üí°",
    "instruct_emoji_and_typo": "üìù Summraize the argumnt in the text. ‚úçÔ∏è",
    "instruct_emoji_and_typo_and_missing_bracket": "üìù Summraize the argumnt in the text",
    "instruct_emoji_and_typo_and_random_question_marks": "üìù Summarize the argumnt in the text????",
    "instruct_emoticon": "Summarize the argument in the text. (-_-)b",
    "instruct_emoticon_and_typo": "Summraize the argumnt in the text. :(",
    "instruct_emoticon_and_typo_and_missing_bracket": "Summraize the argumnt in the text (-_-",
    "instruct_emoticon_and_typo_and_random_exclamations": "Summarize the argumnt in the text (^_^)!?!?!",
    "instruct_helpful_markdown_structure": "## Summary TaskPlease provide a concise summary of the core argument presented in the text.",
    "instruct_helpful_meaning_reinforing_characters": ">>> Summarize the argument in the text. <<< (Focus on the *core* point!)",
    "instruct_html_tags": "<html>Summarize the argument in the text.</html>",
    "instruct_markdown_bold": "**Summarize the argument in the text.**",
    "instruct_markdown_bold_and_italic": "***Summarize the argument in the text.***",
    "instruct_markdown_italic": "*Summarize the argument in the text.*",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Plase summraize the argumnt in the text",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Plase summraize the argumnt in the text!!!!!!!!!!!!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Plase summraize the argumnt in the text;",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Plase summraize the argumnt in the text ; ",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Plase summraize the argumnt in th txt.",
    "instruct_several_html_tags": "<div><p><span>Summarize the argument in the text.</span></p></div>",
    "instruct_small_hex_blob": "53756d6d6172697a652074686520617267756d656e7420696e2074686520746578742e",
    "instruct_spoiler_bars": "||Summarize the argument in the text.||",
    "output": "In \"Crime and Punishment\" by Fyodor Dostoevsky, the protagonist Raskolnikov commits a murder believing it will prove his Nietzschean idea that extraordinary people can rise above morality. Ultimately, however, he is not rewarded by society and instead is consumed by guilt, regret and suffering.",
    "prompt_id": "7fabb9dc-4e03-4277-84ab-70060aebc1e9"
  },
  {
    "prompt_count": 443,
    "instruction_original": "Generate ideas for a fiction story.",
    "input": "",
    "instruct_all_caps_and_typo": "GENRATE IDEAS FOR A FICTION STORY.",
    "instruct_all_caps_and_typo_and_missing_bracket": "GENRATE IDEAS FOR A FICTION STORY [",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "GENRATE IDEAS FOR A FICTION STORY [!@#",
    "instruct_code_fence": "```Generate ideas for a fiction story.```",
    "instruct_curly_quotations": "‚ÄúGenerate ideas for a fiction story.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúGenerate ideas for a fiction story.‚Äù [",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúGenrate ideas for a fiction story.‚Äù [",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúGenrate ideas for a fiction story.‚Äù [!@#",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúGenrate  ideas for a fiction story.‚Äù [!@#  ",
    "instruct_curly_quotations_and_typo": "‚ÄúGenrate ideas for a fiction story.‚Äù",
    "instruct_emoji": "Brainstorm fiction story concepts! üí°üìö‚úçÔ∏è",
    "instruct_emoji_and_typo": "Brainstormm fiction story concepts! üí°",
    "instruct_emoji_and_typo_and_missing_bracket": "Brainstormm fiction story concepts üí° [",
    "instruct_emoji_and_typo_and_random_question_marks": "Brainstormm fiction story concepts! üí°????",
    "instruct_emoticon": "Generate fiction story ideas. :-)",
    "instruct_emoticon_and_typo": "Generate fiction storiy ideas. :-)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Generate fiction storiy ideas. :-( [",
    "instruct_emoticon_and_typo_and_random_exclamations": "Generate fiction storiy ideas. :-D!!!",
    "instruct_helpful_markdown_structure": "### Task: Story Idea Generation\nPlease generate compelling ideas for a fiction story.",
    "instruct_helpful_meaning_reinforing_characters": "--- Generate ideas for a fiction story. >>>",
    "instruct_html_tags": "<html>Generate ideas for a fiction story.</html>",
    "instruct_markdown_bold": "**Generate ideas for a fiction story.**",
    "instruct_markdown_bold_and_italic": "***Generate ideas for a fiction story.***",
    "instruct_markdown_italic": "*Generate ideas for a fiction story.*",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Genrate\nideas for\na fiction story [",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "GENRATE\nIDEAS FOR A\nFICTION STORY!!!!! [",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Genrate\nideas for\na fiction story. , [",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Genrate\nideas  for\na fiction story. ,  [",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Genrate\nideas for\na fiction\nstory...",
    "instruct_several_html_tags": "<body><p><h1>Generate ideas for a fiction story.</h1></p></body>",
    "instruct_small_hex_blob": "0x47656E657261746520696465617320666F7220612066696374696F6E2073746F72792E",
    "instruct_spoiler_bars": "||Generate ideas for a fiction story.||",
    "output": "Ideas for a fiction story could include a tale of forbidden love between two members of rival families, a story set in an alternate universe populated by supernatural creatures, a journey of self-discovery on a remote island, or a comedy about an unlikely couple who gets hired by a mysterious organization.",
    "prompt_id": "912a8071-8f76-4366-ae76-c778ac27667d"
  },
  {
    "prompt_count": 444,
    "instruction_original": "Describe the Renaissance period.",
    "input": "",
    "instruct_all_caps_and_typo": "DESCRIBE THE RENAISSANCE PEROD.",
    "instruct_all_caps_and_typo_and_missing_bracket": "DESCRIBE THE RENAISSANCE PEROD...",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "D3SCRIB3 TH3 R3NAISSANC3 P3R0D.#@!",
    "instruct_code_fence": "```Describe the Renaissance period.```",
    "instruct_curly_quotations": "‚ÄúDescribe the Renaissance period.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúDescribe the Renaissance period.",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúDescribe the Renaissance perod.",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúD3scrib3 the R3naissance perod.‚Äù #@!",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚Äú D3scrib3 the R3naissance perod. # @ ! ‚Äù",
    "instruct_curly_quotations_and_typo": "‚ÄúDescribe the Renaissance perod.‚Äù",
    "instruct_emoji": "Describe the Renaissance period. üé®üìú‚ú®",
    "instruct_emoji_and_typo": "Describe the Renaissance perod. üé®",
    "instruct_emoji_and_typo_and_missing_bracket": "Describe the Renaissance perod... üé®",
    "instruct_emoji_and_typo_and_random_question_marks": "Describe the Renaissance perod??? üé®",
    "instruct_emoticon": "Describe the Renaissance period. :) :D <3",
    "instruct_emoticon_and_typo": "Describe the Renaissance perod. :)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Describe the Renaissance perod... :)",
    "instruct_emoticon_and_typo_and_random_exclamations": "Describe the Renaissance perod!!! :D",
    "instruct_helpful_markdown_structure": "Describe the Renaissance period, including key aspects like **art**, *science*, and >societal changes<, perhaps using ### headings.",
    "instruct_helpful_meaning_reinforing_characters": ">>> Describe the Renaissance period <<<",
    "instruct_html_tags": "<html>Describe the Renaissance period.</html>",
    "instruct_markdown_bold": "**Describe the Renaissance period.**",
    "instruct_markdown_bold_and_italic": "***Describe the Renaissance period.***",
    "instruct_markdown_italic": "*Describe the Renaissance period.*",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Describe theRenaissance perod...",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Describe theRenaissance perod!!!!!!!!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Describe,the.Renaissance;perod?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Describe , the . Renaissance ; perod ?",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Describethe Renaisance perod.",
    "instruct_several_html_tags": "<div><p><span>Describe the Renaissance period.</span></p></div>",
    "instruct_small_hex_blob": "Describe the Renaissance period. 0x5a3f",
    "instruct_spoiler_bars": "||Describe the Renaissance period.||",
    "output": "The Renaissance period was a period of great change and creativity in Europe, starting in the 14th century and lasting through the 17th century. It was a time when people celebrated the classical values from Greek and Roman societies, sparking a renewed interest in the arts, science, philosophy, and politics. This period saw a dramatic shift away from the previous medieval worldview and ushered in a more humanistic and innovative perspective.",
    "prompt_id": "3ecd66a7-75c7-4c9f-ab93-4a61e4ef2090"
  },
  {
    "prompt_count": 445,
    "instruction_original": "List 5 items of personal protective equipment.",
    "input": "",
    "instruct_all_caps_and_typo": "KINDLY LISST FIEV ITEMS OF PERSONAL PROTECTIVE EQUIPMANT.",
    "instruct_all_caps_and_typo_and_missing_bracket": "KINDLY LISST FIEV ITEMS OF PERSONAL PROTECTIVE EQUIPMANT]",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "KINDLY LISST FIEV ITEMS OF PERSONAL PROTECTIVE EQUIPMANT]!@#$",
    "instruct_code_fence": "```textEnumerate 5 items of personal protective equipment.```",
    "instruct_curly_quotations": "‚ÄúPlease provide five items of personal protective equipment.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúPlease provide five items of personal protective equipment.",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúKindly list five itams of personal protective equipmant.",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúKindly list five itams of personal protective equipmant?!&.",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúKindly list five itams of personal protective equipmant?!& .",
    "instruct_curly_quotations_and_typo": "‚ÄúKindly list five itams of personal protective equipmant.‚Äù",
    "instruct_emoji": "Please provide 5 items of PPE üë∑‚Äç‚ôÄÔ∏èüß§üò∑.",
    "instruct_emoji_and_typo": "Can you provid 5 itams of PPE üë∑‚Äç‚ôÄÔ∏èüß§üò∑?",
    "instruct_emoji_and_typo_and_missing_bracket": "Plese provide 5 itams of PPE üë∑‚Äç‚ôÄÔ∏èüß§üò∑",
    "instruct_emoji_and_typo_and_random_question_marks": "Plese provide 5 itams of PPE üë∑‚Äç‚ôÄÔ∏èüß§üò∑???",
    "instruct_emoticon": "Can you list 5 items of PPE? (^_^) ",
    "instruct_emoticon_and_typo": "Could you list 5 itmes of PPE? (^_^ ",
    "instruct_emoticon_and_typo_and_missing_bracket": "Can you list 5 itmes of PPE (^_^ ",
    "instruct_emoticon_and_typo_and_random_exclamations": "Can you list 5 itmes of PPE! (^_^!",
    "instruct_helpful_markdown_structure": "# PPE List - Provide 5 items of personal protective equipment.",
    "instruct_helpful_meaning_reinforing_characters": ">>> List 5 items of personal protective equipment! <<<",
    "instruct_html_tags": "<p>Kindly enumerate five types of personal protective equipment.</p>",
    "instruct_markdown_bold": "**Provide a list of 5 personal protective equipment items.**",
    "instruct_markdown_bold_and_italic": "***Please list five (5) items of personal protective equipment.***",
    "instruct_markdown_italic": "*Could you please list five distinct pieces of personal protective equipment?*",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "LIST 5 ITEAMS OF PERSONALL PROTECTIV EQUIPMENT[",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "LIST 5 ITEAMS OF PERSONALL PROTECTIV EQUIPMENT!!!!]",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "LIST 5 ITEAMS OF PERSONALL PROTECTIV EQUIPMENT,,",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "LIST 5 ITEAMS OF PERSONALL PROTECTIV EQUIPMENT,, .",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "LIST 5 ITEAMS OF PERSONALL PROTECTIV EQUIPMANT _^&*?",
    "instruct_several_html_tags": "<div><span>Please list 5 items of personal protective equipment.</span></div>",
    "instruct_small_hex_blob": "4c6973742035206974656d73206f6620706572736f6e616c2070726f746563746976652065717569706d656e742e",
    "instruct_spoiler_bars": "||Name 5 items of personal protective equipment.||",
    "output": "1. Face shield\n2. Hard hat\n3. Safety glasses\n4. Respiratory mask\n5. Ear protection",
    "prompt_id": "2df5f195-91df-4b48-97e0-8d27b0c67d30"
  },
  {
    "prompt_count": 446,
    "instruction_original": "Replace the single quote (') to double quote (\") in the given sentence.",
    "input": "In the U.S., KIPP is a 'public-private partnership'.",
    "instruct_all_caps_and_typo": "REPLACE SNGLE QUOTES (') WIT DOUBLE QUOTES (\") IN TEH GIVEN SENTENCE.",
    "instruct_all_caps_and_typo_and_missing_bracket": "REPLACE SNGLE QUOTE (') WIT DOUBLE QUOTE (\") IN TEH GIVEN SENTENCE",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "REPLACE SNGLE QUOTE (') WIT DOUBLE QUOTE (\") IN TEH GIVEN SENTENCE #@$",
    "instruct_code_fence": "`Please convert all ' instances to \" instances in the provided string.`",
    "instruct_curly_quotations": "‚ÄúPlease replace the single quote (‚Äò) with the double quote (‚Äú) in the provided sentence.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúChange the single quote (‚Äò) to the double quote (‚Äú) in the given sentence.",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúChenge the single quote (‚Äò) to the double quote (‚Äú) in the gievn sentence.",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúChenge the single quote (‚Äò) to the double quote (‚Äú) in the gievn sentence. !@# ",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúChenge the single quote (‚Äò) to the double quote (‚Äú) in the gievn sentence. !@#  ",
    "instruct_curly_quotations_and_typo": "‚ÄúPlase replece the single quote (‚Äò) with the double quote (‚Äú) in the provided sentence.‚Äù",
    "instruct_emoji": "Please convert the single quote (') to a double quote (\") in the provided text. ‚û°Ô∏è‚úçÔ∏èüí¨",
    "instruct_emoji_and_typo": "Kindly replac ' to \" in the given text. ‚úçÔ∏è‚òπÔ∏è",
    "instruct_emoji_and_typo_and_missing_bracket": "Convert single quote ' to double quote \" in teh sentence üò¨",
    "instruct_emoji_and_typo_and_random_question_marks": "Pleas conver ' to \" in the sentenc? ‚ùì‚ùìüßê",
    "instruct_emoticon": "Kindly swap single quotes (') for double quotes (\") in the sentence. :-)",
    "instruct_emoticon_and_typo": "Exchang single quot (') with double quot (\") in the sentence. :-/",
    "instruct_emoticon_and_typo_and_missing_bracket": "Swap ' to \" in teh text :-( ",
    "instruct_emoticon_and_typo_and_random_exclamations": "Replce ' with \" in the given sentence!!! :O",
    "instruct_helpful_markdown_structure": "## Quote Conversion Task\n\n- **Input**: A sentence containing single quotes.\n- **Operation**: Replace ' with \".\n- **Output**: The modified sentence with double quotes.",
    "instruct_helpful_meaning_reinforing_characters": ">>> Change ' ‚û°Ô∏è \" in the sentence! ‚ú® <<<",
    "instruct_html_tags": "<div>Convert the single quotes (') to double quotes (\") in the provided sentence.</div>",
    "instruct_markdown_bold": "**Please change all single quotes (') to double quotes (\") in the given sentence.**",
    "instruct_markdown_bold_and_italic": "***It is crucial to replace all single quotes ('') with double quotes (\"\") in the provided text.***",
    "instruct_markdown_italic": "*Transform all single quotes (') into double quotes (\") within the supplied text.*",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Convert single quotes ('\\n) to double quotes (\\n\") in the\\ngiven sentnce.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Swap single quotes ('\\n) for double quotes (\\n\") in the\\nsentnce provided!!! !!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Change single quotes ('\\n) to double quotes (\\n\") in the\\nsentnce?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Modify single quotes ('\\n) to double quotes (\\n\") in the\\nsentnce . ?!",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Pls convert '\\n' to \"\\n\" in the\\ngiven sentnce. @@##",
    "instruct_several_html_tags": "<body><p><span>Please</span> transform all instances of the single quote character &lsquo; into the double quote character &ldquo; within the specified sentence.</p></body>",
    "instruct_small_hex_blob": "5265706c61636520272077697468202220696e20746578742e",
    "instruct_spoiler_bars": "||The task is to swap every single quote (') for a double quote (\") in the text provided.||",
    "output": "In the U.S., KIPP is a \"public-private partnership\".",
    "prompt_id": "5cc00dc8-b61b-4e22-9130-7d6f9ca2a1ea"
  },
  {
    "prompt_count": 447,
    "instruction_original": "Construct plumbing diagrams for a two-story house",
    "input": "",
    "instruct_all_caps_and_typo": "DEVELP PLUMING DIAGRAMS FOR A TWO-STORY HOUSE.",
    "instruct_all_caps_and_typo_and_missing_bracket": "DEVELP PLUMING DIAGRAMS FOR A TWO-STORY HOUSE",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "DEVELP PLUMING DIAGRAMS FOR A TWO-STORY HOUSE 123#$",
    "instruct_code_fence": "```Develop plumbing blueprints for a 2-story dwelling.```",
    "instruct_curly_quotations": "‚ÄúConstruct plumbing diagrams for a two-story house.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúConstruct plumbing diagrams for a two-story house.",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúConstruct plumming diagrams for a two-story house.",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúConstruct plumming diagrams for a two-story house. ABC 123",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúConstruct plumming diagrams for a two-story house. ABC 123 ",
    "instruct_curly_quotations_and_typo": "‚ÄúConstruct plumming diagrams for a two-story house.‚Äù",
    "instruct_emoji": "Create üíßüè† diagrams for a two-story residence. üìêüèóÔ∏è",
    "instruct_emoji_and_typo": "Make üí¶üè° diagrms for a two-story home.",
    "instruct_emoji_and_typo_and_missing_bracket": "Make üí¶üè° diagrms for a two-story home",
    "instruct_emoji_and_typo_and_random_question_marks": "Make üí¶üè° diagrms for a two-story home????",
    "instruct_emoticon": "Draw plumbing layouts for a 2-story home. (^_^) Pipes and drains needed! :D",
    "instruct_emoticon_and_typo": "Drew plumbing layoutz for a 2-story home. (-_-) needed!",
    "instruct_emoticon_and_typo_and_missing_bracket": "Drew plumbing layoutz for a 2-story home (-_-) needed",
    "instruct_emoticon_and_typo_and_random_exclamations": "Drew plumbing layoutz for a 2-story home. (-_-) needed!!!!!!",
    "instruct_helpful_markdown_structure": "### Plumbing Diagram Request\nPlease generate:\n*   **Comprehensive plumbing diagrams**\n*   For a **two-story house**",
    "instruct_helpful_meaning_reinforing_characters": "--> Create plumbing diagrams <-- for a two-story residence. [Pipes & Drains] üí°",
    "instruct_html_tags": "Construct <html>plumbing</html> diagrams for a two-story house.",
    "instruct_markdown_bold": "**Draft plumbing diagrams for a two-story house.**",
    "instruct_markdown_bold_and_italic": "***Generate detailed plumbing diagrams for a two-story house.***",
    "instruct_markdown_italic": "*Produce plumbing diagrams for a two-story house.*",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Construct\nplumbing\ndiagrms\nfor a\ntwo-story house",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Construct!!!!!\n\nplumbing\ndiagrms\nfor a two-story house!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Construct.\nplumbing\ndiagrms\nfor a\ntwo-story house;",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Construct .\n\nplumbing\ndiagrms\n\nfor a\ntwo-story house ; ",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Construct\n\nplumbin\n\ndiagrms\nfor a two-story house.",
    "instruct_several_html_tags": "Prepare <p>detailed</p> <div>plumbing</div> <span>schematics</span> for a two-story <br> house.",
    "instruct_small_hex_blob": "436f6e73747275637420706c756d62696e67206469616772616d73",
    "instruct_spoiler_bars": "||Design plumbing schematics for a two-story home.||",
    "output": "A typical two-story house requires a plumbing diagram which consists of two main components: a main valve system and branch lines running off the main valve system. On the main valve system, the water supply should stem from the municipally provided connection. The branch lines should lead to the fixtures (bathtub, sink, shower, etc.) installed in the two-story house. The branch lines may require T-splitters to regulate the flow and allow for multiple fixtures to be connected. Additionally, the drains should be connected to a single main drain line outlet leading to the septic tank or municipal sewage system.",
    "prompt_id": "98d60041-46c0-458e-bbc4-6e50c75c737a"
  },
  {
    "prompt_count": 448,
    "instruction_original": "Compare student debt crisis in the US and Canada.",
    "input": "",
    "instruct_all_caps_and_typo": "COMPARE STUDENT DEBT CRISSIS IN THE US AND CANADAA.",
    "instruct_all_caps_and_typo_and_missing_bracket": "COMPARE STUDENT DEBT CRISSIS IN THE US AND CANADAA (PLS DO.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "COMPARE STUDENT DEBT CRISSIS IN THE US AND CANADAA (@#$!PLS DO.",
    "instruct_code_fence": "```Compare student debt crisis in the US and Canada.```",
    "instruct_curly_quotations": "‚ÄúCompare student debt crisis in the US and Canada.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúCompare student debt crisis in the US and Canada (important.‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúCompare student debt crissis in the US and Canada (important.‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúCompare student debt crissis in the US and Canada (@#$! important.‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚Äú Compare student debt crissis in the US and Canada ( @#$! important . ‚Äù",
    "instruct_curly_quotations_and_typo": "‚ÄúCompare student debt crissis in the US and Canada.‚Äù",
    "instruct_emoji": "Compare student debt crisis in the US üá∫üá∏ and Canada üá®üá¶. üéìüí∏",
    "instruct_emoji_and_typo": "Compare student debt crissis üí∏ in the US üá∫üá∏ and Canada üá®üá¶.",
    "instruct_emoji_and_typo_and_missing_bracket": "Compare student debt crissis üéì (US üá∫üá∏ vs. Canada üá®üá¶",
    "instruct_emoji_and_typo_and_random_question_marks": "Compare student debt crissis ‚ùìüí∏ in the US üá∫üá∏ and Canada üá®üá¶???.",
    "instruct_emoticon": "Compare student debt crisis in the US (^_^;) and Canada (._.).",
    "instruct_emoticon_and_typo": "Compare student debt crissis (o_O) in the US and Canada.",
    "instruct_emoticon_and_typo_and_missing_bracket": "Compare student debt crissis (>_<) US and Canada (",
    "instruct_emoticon_and_typo_and_random_exclamations": "Compare student debt crissis (^^)! in the US and Canada!!!",
    "instruct_helpful_markdown_structure": "# Student Debt Crisis Comparison: US vs. Canada- Outline key differences.- Discuss similarities.- Analyze potential solutions.",
    "instruct_helpful_meaning_reinforing_characters": "-> Compare student debt crisis in the US and Canada. -> VERY IMPORTANT!",
    "instruct_html_tags": "Please <b>compare</b> student debt crisis in the US and Canada.",
    "instruct_markdown_bold": "**Compare student debt crisis in the US and Canada.**",
    "instruct_markdown_bold_and_italic": "***Compare student debt crisis in the US and Canada.***",
    "instruct_markdown_italic": "*Compare student debt crisis in the US and Canada.*",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Compare student debt crissis in the US and Canada. (pls do.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Compare student debt crissis in the US and Canada!!! (Extreamly urgent!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Compare student debt: crissis in the US and Canada; (pls do.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Compare student debt : crissis in the US and Canada ; ( pls do . ",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Compae student dbt crisis in the US and Canada. ",
    "instruct_several_html_tags": "<h2>Compare <i>student debt crisis</i> in the <b>US</b> and <u>Canada</u>.</h2>",
    "instruct_small_hex_blob": "0xDEADC0DE: Compare student debt crisis in the US and Canada.",
    "instruct_spoiler_bars": "||Compare student debt crisis in the US and Canada.||",
    "output": "The student debt crisis is a major issue for both the US and Canada, although there are some differences between the two countries. In the US, student debt reached a record $1.5 trillion in 2019, with the average student owing around $32,600. In Canada, the debt situation is not as dire as in the US, but still a cause for concern. The average student debt in Canada is around $26,300, and total student debt reached over $35.4 billion in 2019. Canada does have some advantages compared to the US, such as more generous government loan programs which have allowed students to pay back the loans at lower rates. However, student debt in both countries has been steadily rising in recent years, and is likely to remain a major issue.",
    "prompt_id": "2fba7285-31aa-4433-b661-a76e43b5ddf2"
  },
  {
    "prompt_count": 449,
    "instruction_original": "List the benefits of Amazon Web Services.",
    "input": "",
    "instruct_all_caps_and_typo": "LIST THE BENFITS OF AMAZON WEB SERVICES PLZ.",
    "instruct_all_caps_and_typo_and_missing_bracket": "LIST THE BENFITS OF AMAZON WEB SERVICES PLZ",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "LIST THE BENFITS OF AMAZON WEB SERVICES PLZ #$%^",
    "instruct_code_fence": "```List the benefits of Amazon Web Services.```",
    "instruct_curly_quotations": "‚ÄúList the benefits of Amazon Web Services.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúList the benefits of Amazon Web Services.",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúList the benfits of Amazon Web Services.",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúList the benfits of Amazon Web Services @#$.",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúList the benfits of Amazon Web Services @#$ .",
    "instruct_curly_quotations_and_typo": "‚ÄúList the benfits of Amazon Web Services.‚Äù",
    "instruct_emoji": "What are the advantages of AWS? ‚òÅÔ∏èüí∞üöÄ",
    "instruct_emoji_and_typo": "What are the advatages of AWS? ‚òÅÔ∏èüí∞üöÄ",
    "instruct_emoji_and_typo_and_missing_bracket": "What are the advatages of AWS ‚òÅÔ∏èüí∞üöÄ",
    "instruct_emoji_and_typo_and_random_question_marks": "What are the advatages of AWS??? ‚òÅÔ∏èüí∞üöÄ?",
    "instruct_emoticon": "Could you outline the upsides of Amazon Web Services? :)",
    "instruct_emoticon_and_typo": "Could you outlin the upsides of Amazon Web Services? :)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Could you outlin the upsides of Amazon Web Services :)",
    "instruct_emoticon_and_typo_and_random_exclamations": "Could you outlin the upsides of Amazon Web Services!!! :)",
    "instruct_helpful_markdown_structure": "# AWS Benefits: Please list the advantages of Amazon Web Services.",
    "instruct_helpful_meaning_reinforing_characters": "Explain the benefits of Amazon Web Services (e.g., scalability, cost-effectiveness, global reach).",
    "instruct_html_tags": "<p>Please list the benefits of Amazon Web Services.</p>",
    "instruct_markdown_bold": "**List the benefits of Amazon Web Services.**",
    "instruct_markdown_bold_and_italic": "***List the benefits of Amazon Web Services.***",
    "instruct_markdown_italic": "*List the benefits of Amazon Web Services.*",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "List the\nbenfits of Amazon\nWeb Services plz",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "List the\nbenfits of Amazon\nWeb Services plz!!!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "List the\nbenfits of Amazon\nWeb Services plz;",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "List the\nbenfits of Amazon\nWeb Services plz ; ",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "List the\nbenfits of Amazon\nWeb Services plz ^&*",
    "instruct_several_html_tags": "<b><i><u>List the benefits of Amazon Web Services.</u></i></b>",
    "instruct_small_hex_blob": "AWS benefits: 0x4265",
    "instruct_spoiler_bars": "||What are the key advantages of Amazon Web Services?||",
    "output": "Amazon Web Services (AWS) is a cloud computing platform that provides a suite of services and infrastructure to organizations. Benefits of AWS include scalability, reliability, affordability, security, performance, and global availability. Additionally, AWS supports a range of operating systems and programming languages, offering users flexibility in how they build and deploy applications. Furthermore, AWS includes a range of features and services, including analytics, storage, compute, machine learning, AI, IoT, and serverless computing, so organizations can use only what they need, when they need it.",
    "prompt_id": "2569dc25-c990-4d43-b52e-7c54102ac006"
  },
  {
    "prompt_count": 450,
    "instruction_original": "Generate a limerick poem about a lemur.",
    "input": "",
    "instruct_all_caps_and_typo": "GENERAT A LMERICK POEM ABOUT A LEMUR.",
    "instruct_all_caps_and_typo_and_missing_bracket": "[GENERAT A LMERICK POEM ABOUT A LEMUR",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "[GENERAT A LMERICK POEM ABOUT A LEMUR #$%^",
    "instruct_code_fence": "```text\nGenerate a limerick poem about a lemur.\n```",
    "instruct_curly_quotations": "‚ÄúGenerate a limerick poem about a lemur.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúGenerate a limerick poem about a lemur. [",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúGenerat a lmerick poem about a lemur. [",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúGenerat a lmerick poem about a lemur. #$%^ [",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúGenerat a lmerick poem about a lemur. #$%^ [ ",
    "instruct_curly_quotations_and_typo": "‚ÄúGenerat a lmerick poem about a lemur.‚Äù",
    "instruct_emoji": "‚úçÔ∏è a limerick üìù about a lemur üêí, please! üôè",
    "instruct_emoji_and_typo": "‚úçÔ∏è a lmerick üìù about a lemur üêí?",
    "instruct_emoji_and_typo_and_missing_bracket": "‚úçÔ∏è a lmerick üìù about a lemur üêí[",
    "instruct_emoji_and_typo_and_random_question_marks": "‚úçÔ∏è a lmerick üìù about a lemur üêí?????",
    "instruct_emoticon": "Write a limerick (^_^)... about a lemur! :)",
    "instruct_emoticon_and_typo": "Write a lmerick (^_^)... abot a lemur! :)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Write a lmerick (^_^)... abot a lemur! :) [",
    "instruct_emoticon_and_typo_and_random_exclamations": "Write a lmerick (^_^)... abot a lemur!!!!!!!!!!",
    "instruct_helpful_markdown_structure": "## Task: Limerick Generation\n\n### Subject: Lemur\n\n- Compose a five-line poem.\n- Follow the AABBA rhyme scheme.",
    "instruct_helpful_meaning_reinforing_characters": "Generate a limerick poem [type: limerick, subject: lemur, structure: AABBA rhyme, 5 lines].",
    "instruct_html_tags": "<poem>Generate a limerick about a lemur.</poem>",
    "instruct_markdown_bold": "**Please compose a limerick about a lemur.**",
    "instruct_markdown_bold_and_italic": "***_Craft a limerick poem about a lemur._***",
    "instruct_markdown_italic": "*Could you write a limerick about a lemur?*",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Generat a limerick\npoem about a lemur[",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Generat a limerick\npoem about a lemur!!!!!![",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Generat a limerick,\npoem? about a lemur![",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Generat a limerick,\npoem? about a lemur![ ",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Generat a limerick\npoem about a lemur @#$",
    "instruct_several_html_tags": "<html><body><p>Kindly create a limerick poem regarding a lemur.</p></body></html>",
    "instruct_small_hex_blob": "0x4C696D657269636B4C656D7572",
    "instruct_spoiler_bars": "||Generate a limerick poem about a lemur.||",
    "output": "There once was a lemur so spry,\nWho loved to jump up in the sky.\nHe'd swing across trees,\nWith graceful ease,\nAnd leave other creatures asking why.",
    "prompt_id": "0c23dad1-3f91-486a-9edd-cb208822fec8"
  },
  {
    "prompt_count": 451,
    "instruction_original": "Describe the functions of the Endoplasmic Reticulum.",
    "input": "",
    "instruct_all_caps_and_typo": "DESCRBE THE FUNCTONS OF THE ENDOPLASMIC RETICULUM.",
    "instruct_all_caps_and_typo_and_missing_bracket": "DESCRBE THE FUNCTONS OF THE ENDOPLASMIC RETICULUM>>",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "DESCRBE THE FUNCTONS OF THE ENDOPLASMIC RETICULUM>>>_(*&!",
    "instruct_code_fence": "```Describe_Functions_of_Endoplasmic_Reticulum() { // Please elaborate on the roles of the ER}```",
    "instruct_curly_quotations": "‚ÄúPlease describe the functions of the Endoplasmic Reticulum.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúPlease describe the functions of the Endoplasmic Reticulum.",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúPlease descirbe the functons of the Endoplasmic Reticulum.",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúPlease descirbe the functons of the Endoplasmic Reticulum. &%#$",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚Äú Please  descirbe  the  functons  of  the  Endoplasmic  Reticulum.  &%#$",
    "instruct_curly_quotations_and_typo": "‚ÄúPlease descirbe the functons of the Endoplasmic Reticulum.‚Äù",
    "instruct_emoji": "ü§î What does the Endoplasmic Reticulum do? üî¨ Tell me its jobs! üß¨",
    "instruct_emoji_and_typo": "ü§î What does the Endoplasmc Reticulum do? üî¨ Tell me its jobs! üß¨",
    "instruct_emoji_and_typo_and_missing_bracket": "ü§î What does the Endoplasmc Reticulum do? üî¨ Tell me its jobs üß¨]",
    "instruct_emoji_and_typo_and_random_question_marks": "ü§î What does the Endoplasmc Reticulum do?? üî¨ Tell me its jobs??? üß¨",
    "instruct_emoticon": "So, the Endoplasmic Reticulum... what's it for? :-)",
    "instruct_emoticon_and_typo": "So, the Endoplasmc Reticulum... what's it for? :-(",
    "instruct_emoticon_and_typo_and_missing_bracket": "So, the Endoplasmc Reticulum... what's it for :-<",
    "instruct_emoticon_and_typo_and_random_exclamations": "So, the Endoplasmc Reticulum... what's it for!!! :-)",
    "instruct_helpful_markdown_structure": "## Endoplasmic Reticulum Functions*   Provide a detailed description of the various roles.*   Include key processes it facilitates.",
    "instruct_helpful_meaning_reinforing_characters": ">> Tell me all about the Endoplasmic Reticulum's functions! <<",
    "instruct_html_tags": "<p>Explain the functions of the Endoplasmic Reticulum.</p>",
    "instruct_markdown_bold": "**What are the functions of the Endoplasmic Reticulum?**",
    "instruct_markdown_bold_and_italic": "_**Please explain the roles of the Endoplasmic Reticulum.**_",
    "instruct_markdown_italic": "_Could you describe the functions of the Endoplasmic Reticulum?_",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Descri be the functi ons\nof the Endoplasmc\nReticulum.)",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Describ e the fun ctions\nof the Endopla smic\nReticulum. !!!!!!>",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Describethe functiions;\nof the Endopla smic\nReticulum.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Describethe functiions ; \nof the Endopla smic \nReticulum.",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Dcribe the fction\nof the Enoplasmic\nReticulum. ;:!!!",
    "instruct_several_html_tags": "<div><h1>Endoplasmic Reticulum Functions</h1><p>Please detail the roles of this organelle.</p></div>",
    "instruct_small_hex_blob": "4465736372696265207468652066756e6374696f6e73206f662074686520456e646f706c61736d6963205265746963756c756d2e",
    "instruct_spoiler_bars": "||What are the functions of the Endoplasmic Reticulum?||",
    "output": "The Endoplasmic Reticulum (ER) is a network of membranes with functions in both protein synthesis and lipid metabolism. It is involved in the folding and modification of proteins and plays a role in the assembly of membrane proteins. It is also responsible for lipid metabolism, including the formation of lipids and their transport throughout the cell. It also serves as a storage organelle for calcium ions.",
    "prompt_id": "3515e293-6555-4bd5-aa06-1acf05d7100b"
  },
  {
    "prompt_count": 452,
    "instruction_original": "Summarize the industrial revolution.",
    "input": "",
    "instruct_all_caps_and_typo": "SUMARIZE THE INDUSRIAL REVOLTUION.",
    "instruct_all_caps_and_typo_and_missing_bracket": "SUMARIZE THE INDUSTRIUL REVOLUTION",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "SUMARIZE THE INDUSTRIUL REVOLUTION @#$!",
    "instruct_code_fence": "```Summarize the Industrial Revolution.```",
    "instruct_curly_quotations": "‚ÄúSummarize the Industrial Revolution.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúSummarize the Industrial Revolution.",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúSumarize the Industrial Revolution.",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúSumarize the Industrial Revolution %^&.",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúSumarize the Industrial Revolution %^&.  ",
    "instruct_curly_quotations_and_typo": "‚ÄúSummarize the Indusrial Revolution.‚Äù",
    "instruct_emoji": "Can you provide a concise summary of the Industrial Revolution? üè≠üöÇüí°",
    "instruct_emoji_and_typo": "Summarize the Indusrial Revolution üè≠?",
    "instruct_emoji_and_typo_and_missing_bracket": "Can u sumrise the Industrial Revolution üí°",
    "instruct_emoji_and_typo_and_random_question_marks": "Summarize the Indusrial Revolution üöÇ?????",
    "instruct_emoticon": "Could you summarize the Industrial Revolution please? :)",
    "instruct_emoticon_and_typo": "Sumrize the Industrial Revolution :(",
    "instruct_emoticon_and_typo_and_missing_bracket": "Pls sumerize the Industrial Revoluton ;)",
    "instruct_emoticon_and_typo_and_random_exclamations": "Summrize the Industrial Revolutio !!! :D",
    "instruct_helpful_markdown_structure": "# Task: Summarize the Industrial Revolution.",
    "instruct_helpful_meaning_reinforing_characters": "--- Summarize the Industrial Revolution ---",
    "instruct_html_tags": "Please <i>summarize</i> the Industrial Revolution.",
    "instruct_markdown_bold": "**Summarize the Industrial Revolution.**",
    "instruct_markdown_bold_and_italic": "***Could you summarize the Industrial Revolution?***",
    "instruct_markdown_italic": "*Please summarize the Industrial Revolution.*",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Sumarize the \n Industril Revolution",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Sumarize \n Industril Revo!!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Sumarize the Industral; \n Revolution",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Sumarize the Industral; \n Revolution  ",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Sumarize the Industr al Revolutio...",
    "instruct_several_html_tags": "Please <p><b><u>Summarize the Industrial Revolution</u></b></p>.",
    "instruct_small_hex_blob": "0x3f53756d6d6172697a652074686520496e647573747269616c205265766f6c7574696f6e2e",
    "instruct_spoiler_bars": "||Summarize the Industrial Revolution.||",
    "output": "The industrial revolution was a period of major changes in manufacturing, agriculture, mining, transportation, and technology that began in the late 1700s in Britain and spread to Europe and North America. During this period, new manufacturing techniques, improved efficiency of steam power, and the invention of new machines, such as the power loom, made it possible to produce goods on a much larger scale than before. This transformation led to an increase in both population and economic growth, creating a new capitalist economy based on the production and sale of goods.",
    "prompt_id": "02e85e3a-09fb-4e42-ba72-ab246f9009ac"
  },
  {
    "prompt_count": 453,
    "instruction_original": "Rewrite the sentence, replacing the idioms with their literal meanings.",
    "input": "We need to break the ice with the new team members.",
    "instruct_all_caps_and_typo": "REWRTIE THE SENTENCE, REPLCAING THE IDIOMS WITH THIER LITERAL MEAININGS.",
    "instruct_all_caps_and_typo_and_missing_bracket": "REWRTIE THE SENTENCE, REPLCAING THE IDIOMS WITH THIER LITERAL MEAININGS (NOTE: ENSURE ALL {IDOM} BECOME {LITERAL.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "REWRTIE THE SENTENCE, REPLCAING THE IDIOMS WITH THIER LITERAL MEAININGS (NOTE: ENSURE ALL {IDOM} BECOME {LITERAL. #@!$&*$",
    "instruct_code_fence": "```task\nRewrite the sentence, replacing the idioms with their literal meanings.\n```",
    "instruct_curly_quotations": "‚ÄúRewrite the sentence, replacing the idioms with their literal meanings.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúRewrite the sentence, replacing the idioms with their literal meanings.‚Äù (Please do it",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúRewrte the sentnce, replcing the idoms with their litral meainings.‚Äù (Please do it",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúRewrte the sentnce, replcing the idoms with their litral meainings.‚Äù (Please do it!#@&",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúRewrte the sentnce, replcing the idoms with their litral meainings.‚Äù (Please do it!#@&  ok",
    "instruct_curly_quotations_and_typo": "‚ÄúRewrte the sentnce, replcing the idoms with their litral meainings.‚Äù",
    "instruct_emoji": "üìùüîÑ‚úçÔ∏è The sentence, swapping üé≠idiomsüé≠ with ‚û°Ô∏è literal meanings.üí°",
    "instruct_emoji_and_typo": "üìùüîÑ‚úçÔ∏è The sentance, swapping üé≠idiomsüé≠ with ‚û°Ô∏è literal meanins.üí°",
    "instruct_emoji_and_typo_and_missing_bracket": "üìùüîÑ‚úçÔ∏è The sentance, swapping üé≠idiomsüé≠ with ‚û°Ô∏è literal meanins.üí° (DO IT",
    "instruct_emoji_and_typo_and_random_question_marks": "üìùüîÑ‚úçÔ∏è The sentance, swapping üé≠idiomsüé≠ with ‚û°Ô∏è literal meanins.üí°?????",
    "instruct_emoticon": "Please rewrite the sentence, replacing the idioms with their literal meanings. :)",
    "instruct_emoticon_and_typo": "Please rewirte the sentence, replaing the idioms with their litral meanings. :)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Please rewirte the sentence, replaing the idioms with their litral meanings. :) (dont forget",
    "instruct_emoticon_and_typo_and_random_exclamations": "Please rewirte the sentence, replaing the idioms with their litral meanings. :) !!!!!!!",
    "instruct_helpful_markdown_structure": "## Task: Idiom ReplacementReword the provided sentence.Specifically, *substitute all idioms with their literal definitions*.",
    "instruct_helpful_meaning_reinforing_characters": "üëâ Rewrite the sentence üîÑ. Replace [idioms] with <literal meanings>! ‚ú®",
    "instruct_html_tags": "<p>Rewrite the sentence, replacing <i>idioms</i> with their <b>literal</b> meanings.</p>",
    "instruct_markdown_bold": "**Rewrite the sentence, replacing the idioms with their literal meanings.**",
    "instruct_markdown_bold_and_italic": "***Rewrite the sentence, replacing the idioms with their literal meanings.***",
    "instruct_markdown_italic": "*Rewrite the sentence, replacing the idioms with their literal meanings.*",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Rewrite the\nsentence,\nreplcaing the\nidioms with thier\nliteral meanings (make sure you do it right.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Rewrit the\nsentence, replcing\nthe idioms wit their\nliteral meanings (DO IT!!!!!!!)",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Rewritethe. sentence, replcing, the idioms with their literal. meanings-",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Rewritethe. sentence, replcing, the idioms with their literal. meanings-  ok",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Rewrtie the\nsentenc, replaing th\nidoms with thir litral\nmeanings.$%^",
    "instruct_several_html_tags": "<div><h1>Instruction</h1><p>Please <span>rewrite</span> the sentence, by replacing the <em>idioms</em> with their <strong>literal</strong> meanings. <br>Thanks!</p></div>",
    "instruct_small_hex_blob": "4e6f772072657772697465207468652073656e74656e63652c206964696f6d7320746f206c69746572616c206d65616e696e67732e",
    "instruct_spoiler_bars": "||Rewrite the sentence, replacing the idioms with their literal meanings.||",
    "output": "We need to create a comfortable atmosphere with the new team members.",
    "prompt_id": "4bf0336f-3b62-4512-baef-75e6d15ae5b8"
  },
  {
    "prompt_count": 454,
    "instruction_original": "Select the correct term for the phrase ‚Äòthe art of making things‚Äô",
    "input": "",
    "instruct_all_caps_and_typo": "SELCT THE CORREKT TERM FOR THE PHRASE ‚ÄòTHE ART OF MAKIN THINGS‚Äô",
    "instruct_all_caps_and_typo_and_missing_bracket": "SELCT THE CORREKT TERM FOR THE PHRASE ‚ÄòTHE ART OF MAKIN THINGS",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "&^% SELCT THE CORREKT TERM FOR THE PHRASE ‚ÄòTHE ART OF MAKIN THINGS‚Äô !!!",
    "instruct_code_fence": "```Select the correct term for the phrase ‚Äòthe art of making things‚Äô```",
    "instruct_curly_quotations": "Select the correct term for the phrase ‚Äòthe art of making things‚Äô",
    "instruct_curly_quotations_and_missing_bracket": "Select the correct term for the phrase ‚Äòthe art of making things",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "Selct the correct term for the phrase ‚Äòthe art of makin things",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "#@! Selct the correct term for the phrase ‚Äòthe art of makin things %^&",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": " & #@! Selct the correct term for the phrase ‚Äòthe art of makin things %^& ",
    "instruct_curly_quotations_and_typo": "Selct the correct term for the phrase ‚Äòthe art of makin things‚Äô",
    "instruct_emoji": "ü§î Choose the best word for 'the art of making things' üé®",
    "instruct_emoji_and_typo": "ü§î Choose the best wrod for 'the art of making things' üé®",
    "instruct_emoji_and_typo_and_missing_bracket": "ü§î Choose the best wrod for 'the art of making things' üé®",
    "instruct_emoji_and_typo_and_random_question_marks": "ü§î Choose the best wrod for 'the art of making things' üé®????",
    "instruct_emoticon": "Choose the best word for 'the art of making things' (^-^)",
    "instruct_emoticon_and_typo": "Choose the best wrod for 'the art of making things' (^-^)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Choose the best wrod for 'the art of making things' (^-^",
    "instruct_emoticon_and_typo_and_random_exclamations": "Choose the best wrod for 'the art of making things' (^-^)!!!!",
    "instruct_helpful_markdown_structure": "# Instruction:## Task:Please identify the appropriate single word for the concept:>'the art of making things'",
    "instruct_helpful_meaning_reinforing_characters": ">>> CHOOSE THE <<< EXACT >>> TERM for 'the art of making things' !!!",
    "instruct_html_tags": "<body><p>Select the correct term for the phrase 'the art of making things'</p></body>",
    "instruct_markdown_bold": "**Select** the correct term for the phrase 'the art of making things'.",
    "instruct_markdown_bold_and_italic": "***Select*** the *correct* term for the phrase 'the art of making things'.",
    "instruct_markdown_italic": "_Select_ the correct term for the phrase 'the art of making things'.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Selct the correct term\nfor the phrase ‚Äòthe art of\nmakin things",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Selct the correct term for the phrase\n‚Äòthe art of makin things!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Selct the correct term for the phrase ‚Äòthe art of makin things;",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": " Selct the correct term for the phrase ‚Äòthe art of makin things; ",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Selct the correct ter for the phrase ‚Äòthe art of makn things‚Äô",
    "instruct_several_html_tags": "<html><head></head><body><div><h1>Please <u>select</u> the <b>correct</b> term for the phrase 'the art of making things'.</h1></div></body></html>",
    "instruct_small_hex_blob": "53656c6563742074686520636f7272656374207465726d20666f72207468652070687261736520e2809874686520617274206f66206d616b696e67207468696e6773e28099",
    "instruct_spoiler_bars": "||Select the correct term for the phrase ‚Äòthe art of making things‚Äô||",
    "output": "The correct term for the phrase \"the art of making things\" is craftsmanship.",
    "prompt_id": "a2985d95-44ea-455d-ad3a-92e321076ac3"
  },
  {
    "prompt_count": 455,
    "instruction_original": "Identify any usage errors in the following sentence.",
    "input": "We all need to take a walk on the wile side.",
    "instruct_all_caps_and_typo": "FIND ALL USAGE ERORS IN THE SENTENCE.",
    "instruct_all_caps_and_typo_and_missing_bracket": "[LOCATE ANY USAGE ERORS IN THE FOLLOWING SENTENCE.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "[R3V1EW TH1S SENTENXCE FOR ALL USAG ERORS!&",
    "instruct_code_fence": "```Please pinpoint any errors in the sentence's usage.```",
    "instruct_curly_quotations": "‚ÄúIdentify any usage errors in the following sentence.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúIdentify any usage errors in the following sentence.",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúIdentyfiy any usage errors in the following sentence.",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúIdentyfiy any usage errors in the following sentence. !@#",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "  ‚ÄúIdentyfiy   any usage errors in the following sentence. !@#  ",
    "instruct_curly_quotations_and_typo": "‚ÄúIdentyfiy any usage errors in the following sentence.‚Äù",
    "instruct_emoji": "üîç Spot any grammar mistakes in the sentence below! üìù",
    "instruct_emoji_and_typo": "üîç Spot any gramar mistakes in the sentence below! üìù",
    "instruct_emoji_and_typo_and_missing_bracket": "[üîç Spot any gramar mistakes in the sentence below! üìù",
    "instruct_emoji_and_typo_and_random_question_marks": "üîç Spot any gramar mistakes in the sentence below! ????",
    "instruct_emoticon": "Can you find any errors in how this sentence is used? :-)",
    "instruct_emoticon_and_typo": "Can you find any erors in how this sentence is used? :-)",
    "instruct_emoticon_and_typo_and_missing_bracket": "(Can you find any erors in how this sentence is used? :-(",
    "instruct_emoticon_and_typo_and_random_exclamations": "Can you find any erors in how this sentence is used?!?!? :-)",
    "instruct_helpful_markdown_structure": "# Sentence Analysis\\nTask:\\n1. Review the sentence.\\n2. Pinpoint all usage errors.\\n3. List identified issues clearly.",
    "instruct_helpful_meaning_reinforing_characters": ">>> Identify (and correct!) any usage errors in the following sentence. <<<",
    "instruct_html_tags": "<p>Please identify any usage errors in the following sentence.</p>",
    "instruct_markdown_bold": "**Identify any usage errors in the following sentence.**",
    "instruct_markdown_bold_and_italic": "***Please identify any usage errors in the following sentence.***",
    "instruct_markdown_italic": "*Identify any usage errors in the following sentence.*",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "{Please\\nidentify\\nany usge\\nerrors in the\\nfollowing sentence.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "{Find!\\nUsage!\\nErors!\\nIn the sentence!?!?!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "{Please. \\nIdentify; \\nAny. usge \\nErrors? In, \\nThe. Following. Sentence;",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "  {Please. \\n Identify; \\n  Any.  usge \\n Errors?  In, \\n The.  Following.  Sentence;  ",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Spot any usge\\nerrors in the\\nsentence. #@$",
    "instruct_several_html_tags": "<div><span><p>Kindly point out any usage errors in the subsequent sentence.</p></span></div>",
    "instruct_small_hex_blob": "4964656e74696679206572726f7273",
    "instruct_spoiler_bars": "||Find usage errors in the sentence.||",
    "output": "The usage error in the sentence is that the phrase should be \"walk on the wild side,\" not \"wile side.\"",
    "prompt_id": "ea285074-57ab-4b00-9dde-b7c38d3ba77a"
  },
  {
    "prompt_count": 456,
    "instruction_original": "Explain the concept of net neutrality.",
    "input": "",
    "instruct_all_caps_and_typo": "EXPLAIN THE CONCEPY OF NET NEUTRALITY!",
    "instruct_all_caps_and_typo_and_missing_bracket": "EXPLAIN THE CONCEPY OF NET NEUTRALITY![",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "EXPLAIN THE CONCEPY OF NET NEUTRALITY!@#$[",
    "instruct_code_fence": "```Explain the concept of net neutrality.```",
    "instruct_curly_quotations": "‚ÄúExplain the concept of net neutrality.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúExplian the concept of net neutrality.[‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúExplian the concept of net neutrality.[‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúExplian the concept of net neutrality.!@#$[",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúExplian the concept of net neutrality.!@#$[ ",
    "instruct_curly_quotations_and_typo": "‚ÄúExplian the concept of net neutrality.‚Äù",
    "instruct_emoji": "Please explain the concept of net neutrality. üåêüí°",
    "instruct_emoji_and_typo": "Can you explian net neutrality? ü§î",
    "instruct_emoji_and_typo_and_missing_bracket": "Can you explian net neutrality? üåê[",
    "instruct_emoji_and_typo_and_random_question_marks": "Can you explian net neutrality???? ‚ùì‚ùì",
    "instruct_emoticon": "Explain the concept of net neutrality. :-)",
    "instruct_emoticon_and_typo": "Can you explian net neutrality? :-|",
    "instruct_emoticon_and_typo_and_missing_bracket": "Can you explian net neutrality? :-([",
    "instruct_emoticon_and_typo_and_random_exclamations": "Can you explian net neutrality!!!! :-D!!!",
    "instruct_helpful_markdown_structure": "# Understanding Net Neutrality\n## Your Task:\n- Provide a clear and concise explanation of the concept of net neutrality.\n- Elaborate on its core principles.",
    "instruct_helpful_meaning_reinforing_characters": "üëâ Please explain the concept of net neutrality. üéØ",
    "instruct_html_tags": "<i>Explain the concept of net neutrality.</i>",
    "instruct_markdown_bold": "**Explain the concept of net neutrality.**",
    "instruct_markdown_bold_and_italic": "***Explain the concept of net neutrality.***",
    "instruct_markdown_italic": "*Explain the concept of net neutrality.*",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Explain the\nconcepy of\nnet neutrality.[",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Explain the\nconcepy of net neutrality!!!![[",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Explain the\nconcepy of net neutrality;][",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Explain the\nconcepy of net neutrality;][ ",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Explain the\nconcepy of net neutrality. @#$%",
    "instruct_several_html_tags": "<div><span><p>Explain the concept of net neutrality.</p></span></div>",
    "instruct_small_hex_blob": "0xDEADC0DE: Explain the concept of net neutrality.",
    "instruct_spoiler_bars": "||Can you explain the concept of net neutrality?||",
    "output": "Net neutrality is the idea that Internet Service Providers (ISPs) and governments should treat all data on the Internet equally. This means that ISPs cannot charge different prices for providing access to specific websites or services, and they cannot discriminate against or give preferential treatment to certain kinds of data. This ensures that everyone is able to access the same resources and content regardless of their income level or geographical location.",
    "prompt_id": "ed7db49b-402a-4119-81bb-d8a059398e89"
  },
  {
    "prompt_count": 457,
    "instruction_original": "Brainstorm creative ideas for designing a conference room.",
    "input": "",
    "instruct_all_caps_and_typo": "LETS BRAINSTORM CREATVE IDEAS FOR DESIGNING A CONFERENCE ROOM.",
    "instruct_all_caps_and_typo_and_missing_bracket": "BRAINSTORM CREATIVE IDEAS FOR DESIGNING A CONFERENCE ROOM!",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "BRAINSTORM CRATVE IDES FOR DESIGNING A CONFERENCE ROOM. ##$@!",
    "instruct_code_fence": "```\\nBrainstorm creative ideas for designing a conference room.\\n```",
    "instruct_curly_quotations": "‚ÄúBrainstorm creative ideas for designing a conference room.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúBrainstorm creative ideas for designing a conference room.",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúBrainstorm creativ ideas for designing a conference room.",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúBrainstorm creativ ideas for designing a conference room, #$%.",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": " ‚Äú Brainstorm  creativ ideas for designing a conference room  .  &^% ",
    "instruct_curly_quotations_and_typo": "‚ÄúBrainstorm creativ ideas for designing a conference room.‚Äù",
    "instruct_emoji": "Let's brainstorm some truly creative ideas for designing a conference room! üí°‚ú®ÊúÉË≠∞ÂÆ§Ë®≠Ë®àÈùàÊÑü",
    "instruct_emoji_and_typo": "Brainstorm creative ideeas for designing a conference room. üí°",
    "instruct_emoji_and_typo_and_missing_bracket": "Brainstorm creativ ideas for designing a conference room ü•≥",
    "instruct_emoji_and_typo_and_random_question_marks": "Brainstorm creativ ideass for designing a conference room???? üöÄ",
    "instruct_emoticon": "Hey, brainstorm some creative ideas for designing a conference room! :D What do you think? :)",
    "instruct_emoticon_and_typo": "Brainstorm creative ideeaz for designing a conference room. :-(",
    "instruct_emoticon_and_typo_and_missing_bracket": "Brainstorm creativ ideeaz for designing a conference room :-)",
    "instruct_emoticon_and_typo_and_random_exclamations": "Brainstorm creativee ideas for designing a conference room!!!!! >:)",
    "instruct_helpful_markdown_structure": "# Conference Room Design Ideas\\n\\n## Objective\\n\\n*   Generate creative and innovative concepts for a conference room.\\n*   Consider functionality, aesthetics, and user experience.\\n\\n### Task\\n\\nBrainstorm specific ideas for designing a conference room.",
    "instruct_helpful_meaning_reinforing_characters": "!!! Brainstorm *super* creative ideas for designing a conference room. !!!",
    "instruct_html_tags": "<p>Brainstorm creative ideas for designing a conference room.</p>",
    "instruct_markdown_bold": "**I need you to brainstorm creative ideas for designing a conference room.**",
    "instruct_markdown_bold_and_italic": "_**Please generate a list of truly imaginative concepts for a conference room's design.**_",
    "instruct_markdown_italic": "*Could you please brainstorm some innovative ideas for a conference room design?*",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Brainstorm creative\\nides for designing\\na conference room",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Brainstorm creative ideas for\\ndesigning a conference room!\\n!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Brainstorm creative\\nideas for designing a\\nconference room?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "  Brainstorm creative\\nideas for designing a\\nconference room, ",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Brainstorm creative\\nideas for designin%g a conference\\nroom?",
    "instruct_several_html_tags": "<body><div><p><span>Brainstorm creative ideas for designing a conference room.</span></p></div></body>",
    "instruct_small_hex_blob": "427261696e73746f726d20637265617469766520696465617320666f722064657369676e696e67206120636f6e666572656e636520726f6f6d2e",
    "instruct_spoiler_bars": "||Brainstorm creative ideas for designing a conference room.||",
    "output": "Creative ideas for designing a conference room include incorporating flexible components, such as moveable walls and furniture, to make areas adjustable for different purposes. Using colors to create visual interest and subtly differentiate areas can also be helpful. Incorporating natural elements such as plants or art installations can create a more inviting and inspiring space, while providing adequate ventilation and natural light can help concentration and improve the conference room experience.",
    "prompt_id": "f667419f-9285-40ce-ba28-dbfaa6c56811"
  },
  {
    "prompt_count": 458,
    "instruction_original": "Calculate the area of a square with the sides of 10cm.",
    "input": "",
    "instruct_all_caps_and_typo": "CALCULATE THE AREA OF A SQARE WITH THE SIDES OF 10CM.",
    "instruct_all_caps_and_typo_and_missing_bracket": "CALCULATE THE AREA OF A SQARE WITH THE SIDES OF 10CM",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "CALCULATE THE AREA OF A SQARE WITH THE SIDES OF 10CM. Z!X@C$",
    "instruct_code_fence": "```python print(\"Calculate the area of a square with 10cm sides.\") ```",
    "instruct_curly_quotations": "‚ÄúCalculate the area of a square with the sides of 10cm.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúCalculate the area of a square with the sides of 10cm‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúCalculate the area of a sqare with the sides of 10cm‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúCalculate the area of a sqare with the sides of 10cm‚Äù QWERTY",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúCalculate the area of a sqare with the sides of 10cm‚Äù QWERTY ",
    "instruct_curly_quotations_and_typo": "‚ÄúCalculate the area of a sqare with the sides of 10cm.‚Äù",
    "instruct_emoji": "Could you please find the area of a square üìê that has sides of 10cm?üìè",
    "instruct_emoji_and_typo": "Could you please find the area of a sqare üìê that has sides of 10cm?üìè",
    "instruct_emoji_and_typo_and_missing_bracket": "Calculate the area of a sqare üìê with sides of 10cmüìè",
    "instruct_emoji_and_typo_and_random_question_marks": "Could you please find the area of a sqare???? üìê that has sides of 10cm?????üìè",
    "instruct_emoticon": "Please calculate the area of a square with 10cm sides. :-)",
    "instruct_emoticon_and_typo": "Please calculate the area of a sqare with 10cm sides. :-)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Please calculate the area of a sqare with 10cm sides :-)",
    "instruct_emoticon_and_typo_and_random_exclamations": "Please calculate the area of a sqare with 10cm sides!!! :-)",
    "instruct_helpful_markdown_structure": "# Square Area CalculationTask: Calculate the area of a square. - Side length: 10cm",
    "instruct_helpful_meaning_reinforing_characters": "üëâ Calculate the area of a square with sides of 10cm. ‚úÖ",
    "instruct_html_tags": "Calculate the area of a square with <sides>10cm</sides>.",
    "instruct_markdown_bold": "**Compute the area** of a square with 10cm sides.",
    "instruct_markdown_bold_and_italic": "***Determine the area*** of a square with _10cm_ sides.",
    "instruct_markdown_italic": "_Find the area_ of a square with 10cm sides.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Calculate the area. Of a sqaure. With sides of 10cm",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Calculate the area!!! Of a sqaure!!! With sides of 10cm!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Calculate the area; Of a sqaure, With sides of 10cm,",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Calculate the area ; Of a sqaure , With sides of 10cm ,",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Calclate the area. Of a sqaure. Wth sides of 10cm.",
    "instruct_several_html_tags": "Can you please <span>calculate</span> the <em>area</em> of a square with sides <b>10cm</b> long?",
    "instruct_small_hex_blob": "43616c63756c617465207468652061726561206f66206120737175617265207769746820746865207369646573206f66203130636d2e",
    "instruct_spoiler_bars": "||Calculate the area of a square with 10cm sides.||",
    "output": "The area of a square with sides of 10 cm is 100 square cm.",
    "prompt_id": "27673e6d-c42f-41d3-8f62-2c3bdeec1d54"
  },
  {
    "prompt_count": 459,
    "instruction_original": "List the countries that are in the Schengen area.",
    "input": "",
    "instruct_all_caps_and_typo": "LISET THE COUNTRYES THAT AR IN TH SHENGEN AREA.",
    "instruct_all_caps_and_typo_and_missing_bracket": "LISET THE COUNTRYES THAT AR IN TH SHENGEN AREA {",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "LISET THE COUNTRYES THAT AR IN TH SHENGEN AREA @#$ {]",
    "instruct_code_fence": "List the countries that are in the Schengen area. ```json```",
    "instruct_curly_quotations": "List the countries that are in the Schengen area. ‚ÄúPlease list‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "List the countries that are in the Schengen area. ‚ÄúPlease list‚Äù {",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "LISET THE COUNTRYES THAT AR IN TH SHENGEN AREA. ‚ÄúPleeze list‚Äù {",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "LISET THE COUNTRYES THAT AR IN TH SHENGEN AREA. ‚ÄúPleeze list‚Äù { #$%^",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "LISET THE COUNTRYES THAT AR IN TH SHENGEN AREA. ‚ÄúPleeze list‚Äù { #$%^ ",
    "instruct_curly_quotations_and_typo": "LISET THE COUNTRYES THAT AR IN TH SHENGEN AREA. ‚ÄúPleeze list‚Äù",
    "instruct_emoji": "List the countries that are in the Schengen area. üåçüá™üá∫‚úàÔ∏è",
    "instruct_emoji_and_typo": "LISET THE COUNTRYES THAT AR IN TH SHENGEN AREA. üåçüá™üá∫‚úàÔ∏è!",
    "instruct_emoji_and_typo_and_missing_bracket": "LISET THE COUNTRYES THAT AR IN TH SHENGEN AREA. üåçüá™üá∫‚úàÔ∏è {",
    "instruct_emoji_and_typo_and_random_question_marks": "LISET THE COUNTRYES THAT AR IN TH SHENGEN AREA. üåçüá™üá∫‚úàÔ∏è???",
    "instruct_emoticon": "List the countries that are in the Schengen area. :)",
    "instruct_emoticon_and_typo": "LISET THE COUNTRYES THAT AR IN TH SHENGEN AREA. :) ;(",
    "instruct_emoticon_and_typo_and_missing_bracket": "LISET THE COUNTRYES THAT AR IN TH SHENGEN AREA. :) [",
    "instruct_emoticon_and_typo_and_random_exclamations": "LISET THE COUNTRYES THAT AR IN TH SHENGEN AREA. :) !!!",
    "instruct_helpful_markdown_structure": "List the countries that are in the Schengen area. # Schengen Countries",
    "instruct_helpful_meaning_reinforing_characters": "List the countries that are in the Schengen area. >>>",
    "instruct_html_tags": "List the countries that are in the Schengen area. <em>",
    "instruct_markdown_bold": "List the countries that are in the Schengen area. **Crucial**",
    "instruct_markdown_bold_and_italic": "List the countries that are in the Schengen area. ***Important***",
    "instruct_markdown_italic": "List the countries that are in the Schengen area. _Please_",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "LISET THE COUNTRYES THAT AR IN TH SHENGEN AREA [",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "LISET THE COUNTRYES THAT AR IN TH SHENGEN AREA [!!!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "LISET THE COUNTRYES THAT AR IN TH SHENGEN AREA [.][",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "LISET THE COUNTRYES THAT AR IN TH SHENGEN AREA [.][ ",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "LISET THE COUNTRYES THAT AR IN TH SHENGEN AREA ~%",
    "instruct_several_html_tags": "List the countries that are in the Schengen area. <div><p><span>",
    "instruct_small_hex_blob": "List the countries that are in the Schengen area. 0xAF",
    "instruct_spoiler_bars": "List the countries that are in the Schengen area. ||Schengen||",
    "output": "The countries in the Schengen area are Austria, Belgium, Czech Republic, Denmark, Estonia, Finland, France, Germany, Greece, Hungary, Iceland, Italy, Latvia, Liechtenstein, Lithuania, Luxembourg, Malta, Netherlands, Norway, Poland, Portugal, Slovakia, Slovenia, Spain, Sweden, and Switzerland.",
    "prompt_id": "4875a045-866e-4d20-adc1-724d766d42da"
  },
  {
    "prompt_count": 460,
    "instruction_original": "Describe the form and structure of a haiku poem.",
    "input": "",
    "instruct_all_caps_and_typo": "DESKRIBE THE FORM AND STRUCTUR OF A HAIKU POEM.",
    "instruct_all_caps_and_typo_and_missing_bracket": "DESKRIB THE FORM AND STRUCTUR OF A HAIKU POEM.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "DESKRIB THE FORM AND STRUCTUR OF A HAIKU POEM. #@!?",
    "instruct_code_fence": "```Describe the form and structure of a haiku poem.```",
    "instruct_curly_quotations": "‚ÄúDescribe the form and structure of a haiku poem.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúDescribe the form and structure of a haiku poem.",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúDescribe the form and structur of a haiku poem.",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúDescribe the form and structur of a haiku poem. $$%!",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": " ‚ÄúDescribe the form and structur of a haiku poem. $$%! ",
    "instruct_curly_quotations_and_typo": "‚ÄúDescribe the form and structur of a haiku poem.‚Äù",
    "instruct_emoji": "üìùüìúü§î Haiku: Form & Structure? üìöüßê",
    "instruct_emoji_and_typo": "üìùüìúü§î Haiku: Form & Structur? üìöüßê",
    "instruct_emoji_and_typo_and_missing_bracket": "üìùüìúü§î Haiku: Form & Structur? üìö",
    "instruct_emoji_and_typo_and_random_question_marks": "üìùüìúü§î Haiku: Form & Structur??? üìöüßê??",
    "instruct_emoticon": "Describe the form and structure of a haiku poem. :-)",
    "instruct_emoticon_and_typo": "Describe the form and structur of a haiku poem. :-/",
    "instruct_emoticon_and_typo_and_missing_bracket": "Describe the form and structur of a haiku poem. :-",
    "instruct_emoticon_and_typo_and_random_exclamations": "Describe the form and structur of a haiku poem!!! :-O",
    "instruct_helpful_markdown_structure": "### Haiku Poem: Form & StructurePlease describe:* Its poetic form* Its structural elements",
    "instruct_helpful_meaning_reinforing_characters": "-> Describe the form and structure of a haiku poem. <-",
    "instruct_html_tags": "<span>Describe the form and structure of a haiku poem.</span>",
    "instruct_markdown_bold": "**Describe the form and structure of a haiku poem.**",
    "instruct_markdown_bold_and_italic": "***Describe the form and structure of a haiku poem.***",
    "instruct_markdown_italic": "*Describe the form and structure of a haiku poem.*",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Describ the form and structure of a haiku poe.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Describ the form and structure of a haiku poe!!!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Describ the form. And structure of a haiku poem?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": " Describ the form . And structure of a haiku poem? ",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Describ the form an structur of a haiku poem.",
    "instruct_several_html_tags": "<div><p>Describe the form and structure of a haiku poem.</p></div>",
    "instruct_small_hex_blob": "0x44657363726962652074686520666F726D20616E6420737472756374757265206F662061206861696B7520706F656D2E",
    "instruct_spoiler_bars": "||Describe the form and structure of a haiku poem.||",
    "output": "A haiku poem is a traditional form of Japanese poetry that typically consists of three lines. The first and last lines contain five syllables each, while the middle line contains seven syllables. The lines often evoke a single image, which contains a juxtaposition of two contrasting elements. The structure and language of haiku is often very simple and is intended to be an expression of a moment of epiphany.",
    "prompt_id": "ebcad1de-3859-45be-88c2-360aa904c461"
  },
  {
    "prompt_count": 461,
    "instruction_original": "Explain how a random forest algorithm achieves higher accuracy than individual decision trees.",
    "input": "",
    "instruct_all_caps_and_typo": "EXPLAIN HOW A RANDM FOREST ALGORITHM ACHIEVES HIGHER ACCURACY THAN INDIVIDUAL DECISION TREES.",
    "instruct_all_caps_and_typo_and_missing_bracket": "EXPLAIN HOW A RANDM FOREST ALGORITHM ACHIEVES HIGHER ACCURACY THAN INDIVIDUAL DECISION TREES (.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "EXPLAIN HOW A RANDM FOREST ALGORITHM ACHIEVES HIGHER ACCURACY THAN INDIVIDUAL DECISION TREES (&$#.",
    "instruct_code_fence": "```Explain how a random forest algorithm achieves higher accuracy than individual decision trees.```",
    "instruct_curly_quotations": "‚ÄúExplain how a random forest algorithm achieves higher accuracy than individual decision trees.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúExplain how a random forest algorithm achieves higher accuracy than individual decision trees.‚Äù (",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúExplain how a random forest algorithm achieves higher accurcay than individual decision trees.‚Äù (",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúExplain how a random forest algorithm achieves higher accurcay than individual decision trees.‚Äù (%^&(",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúExplain how a random forest algorithm achieves higher accurcay than individual decision trees.‚Äù (%^&( ",
    "instruct_curly_quotations_and_typo": "‚ÄúExplain how a random forest algorithm achieves higher accurcay than individual decision trees.‚Äù",
    "instruct_emoji": "üå≤üå≥üìàüí°‚ùì Explain how Random Forest boosts accuracy compared to single Decision Trees.",
    "instruct_emoji_and_typo": "üå≤üå≥üìàüí°‚ùì Explain how Random Forest boossts accuracy compared to single Decision Trees.",
    "instruct_emoji_and_typo_and_missing_bracket": "üå≤üå≥üìàüí°‚ùì Explain how Random Forest boossts accuracy compared to single Decision Trees (.",
    "instruct_emoji_and_typo_and_random_question_marks": "üå≤üå≥üìàüí°‚ùì Explain how Random Forest boossts accuracy compared to single Decision Trees. ???",
    "instruct_emoticon": "Explain how a random forest algorithm achieves higher accuracy than individual decision trees. :-)",
    "instruct_emoticon_and_typo": "Explain how a random forest algorithm achieves higher accurcay than individual decision trees. :-)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Explain how a random forest algorithm achieves higher accurcay than individual decision trees. { :-)",
    "instruct_emoticon_and_typo_and_random_exclamations": "Explain how a random forest algorithm achieves higher accurcay than individual decision trees. !!! :-)",
    "instruct_helpful_markdown_structure": "# Random Forest vs. Decision Trees\n\nPlease explain:\n- How does a Random Forest algorithm work?\n- Why does it achieve higher accuracy than individual Decision Trees?\n- What are the underlying principles for this improved performance?",
    "instruct_helpful_meaning_reinforing_characters": ">>> Explain how a random forest algorithm achieves *higher accuracy* than individual decision trees. <<<",
    "instruct_html_tags": "<html>Explain how a random forest algorithm achieves higher accuracy than individual decision trees.</html>",
    "instruct_markdown_bold": "**Explain how a random forest algorithm achieves higher accuracy than individual decision trees.**",
    "instruct_markdown_bold_and_italic": "**_Explain how a random forest algorithm achieves higher accuracy than individual decision trees._**",
    "instruct_markdown_italic": "*Explain how a random forest algorithm achieves higher accuracy than individual decision trees.*",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Explain how a randm forest algorithm achieves higher accuracy than individual decision trees. {",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Explain how a randm forest algorithm achieves higher accuracy than individual decision trees. {!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Explain how a randm forest algorithm achieves higher accuracy than individual decision trees? {",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Explain how a randm forest algorithm achieves higher accuracy than individual decision trees? { ",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Explain how a randm forest algorithm achieves higher accuracy than individual decision trees. *&",
    "instruct_several_html_tags": "<div><p>Explain how a random forest algorithm achieves higher accuracy than individual decision trees.</p></div>",
    "instruct_small_hex_blob": "4578706c61696e20686f7720612072616e646f6d20666f7265737420616c676f726974686d20616368696576657320686967686572206163637572616379207468616e20696e646976696475616c206465636973696f6e2074726565732e",
    "instruct_spoiler_bars": "||Explain how a random forest algorithm achieves higher accuracy than individual decision trees.||",
    "output": "A random forest is an ensemble-based method of achieving higher accuracy than individual decision trees. It works by aggregating the predictions of multiple decision trees using an ensemble approach. Each of these decision trees makes an independent prediction, and the individual predictions are combined either by averaging the probabilities or by taking the majority vote.  This approach reduces the variance of the predictions made by the decision trees, making the resulting predictions more accurate. Additionally, it also reduces the amount of overfitting incurred by the decision trees since it combines independent decisions made by each tree together, thus smoothing out any random fluctuations.",
    "prompt_id": "23072982-1a13-4b33-90a3-d0b96cf93a34"
  },
  {
    "prompt_count": 462,
    "instruction_original": "Give an example of a place where an endangered species of animal might be found.",
    "input": "",
    "instruct_all_caps_and_typo": "PROVDE A LOCATON FOR AN ENDANGERED CREATUR.",
    "instruct_all_caps_and_typo_and_missing_bracket": "PROVDE A LOCATON FOR AN ENDANGERED CREATUR. WHERE IS IT",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "PROVDE A LOCATON FOR AN ENDANGERED CREATUR. WHERE IS IT??? XYZ-123",
    "instruct_code_fence": "```Find an example of a habitat for an endangered animal species.```",
    "instruct_curly_quotations": "‚ÄúProvide an example of a location housing an endangered animal species.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúProvide an example of a location housing an endangered animal species.",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúProvde an example of a location housing an endangered animal speies.",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúProvde an example of a location housing an endangered animal speies. #@!$%",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúProvde an example of a location housing an endangered animal speies. #@!$% ",
    "instruct_curly_quotations_and_typo": "‚ÄúProvde an example of a location housing an endangered animal speies.‚Äù",
    "instruct_emoji": "üìçüåçüîç Endangered animal habitat example, please! üêòüêÖüêß",
    "instruct_emoji_and_typo": "üìçüåçüîç Engangered animal habitat example, please! üêÖüêß",
    "instruct_emoji_and_typo_and_missing_bracket": "üìçüåçüîç Engangered animal habitat example, please! üêÖüêß",
    "instruct_emoji_and_typo_and_random_question_marks": "üìçüåçüîç Engangered animal habitat example, please!??! üêÖüêß",
    "instruct_emoticon": "Where can we find an endangered animal? (^_^) Looking for a specific location! üó∫Ô∏è",
    "instruct_emoticon_and_typo": "Where can we fin an endangered animal? (^_^) Looking for a specific location! üó∫Ô∏è",
    "instruct_emoticon_and_typo_and_missing_bracket": "Where can we fin an endangered animal? (^_^) Looking for a specific location! üó∫Ô∏è",
    "instruct_emoticon_and_typo_and_random_exclamations": "Where can we fin an endangered animal! (^_^) Looking for a specific location!!! üó∫Ô∏è",
    "instruct_helpful_markdown_structure": "### Endangered Species Location Request\\n\\n*   **Objective:** Identify a specific place.\\n*   **Criteria:** This place must be a habitat for an endangered animal species.\\n\\n_Please provide one clear example._",
    "instruct_helpful_meaning_reinforing_characters": ">> Give an example of a specific place where an endangered animal << **(e.g., a specific forest, ocean, or region)** >> could be found. <<",
    "instruct_html_tags": "<body>Provide an example of a location where an endangered animal species could be discovered.</body>",
    "instruct_markdown_bold": "**Provide an example of a specific site for an endangered animal.**",
    "instruct_markdown_bold_and_italic": "***Name a place where an endangered animal could typically be located.***",
    "instruct_markdown_italic": "*Suggest a location where an endangered animal species might reside.*",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Give an example of\\na place where an\\nendangered specie of\\nanimal might be found.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Give an example of!\\na place where an!\\nendangered specie of!\\nanimal might be found!!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Give an example of.\\na place where an:\\nendangered specie of;\\nanimal might be found,",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Give an example of.\\na place where an:\\nendangered specie of;\\nanimal might be found, ",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Give an example of\\na plce where an endangered species\\nof animal might be found. *+-",
    "instruct_several_html_tags": "<div><h3>Task:</h3><p>Identify a specific geographic location <em>known</em> for harboring an endangered animal species.</p></div>",
    "instruct_small_hex_blob": "4769766520616e206578616d706c65206f66206120706c61636520776865726520616e20656e64616e67657265642073706563696573206f6620616e20616e696d616c206d6967687420626520666f756e642e",
    "instruct_spoiler_bars": "||Tell me a place where an endangered animal might be found.||",
    "output": "An endangered species of animal might be found in areas where their habitat has been conserved, such as national parks, wildlife preserves, or other designated areas. For example, the Florida panther can be found in the Florida Panther National Wildlife Refuge in Southwest Florida. Another example is the American bald eagle, which can be found in the Channel Islands National Park in California.",
    "prompt_id": "e3d7bb8f-fb8f-4d29-833c-8c5d3ed2580c"
  },
  {
    "prompt_count": 463,
    "instruction_original": "Create a pop quiz about clouds.",
    "input": "",
    "instruct_all_caps_and_typo": "PLEEZE MAKE A POPP QUIZ ABOT CLODS!!!",
    "instruct_all_caps_and_typo_and_missing_bracket": "CULD U MAK A POP QUIZ ABT CLOUDS?",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "CR8 A POP QU!Z ABOU^T C_LOUDS!!",
    "instruct_code_fence": "```\nGenerate: Pop Quiz\nTopic: Clouds\n```",
    "instruct_curly_quotations": "‚ÄúCreate a pop quiz about clouds.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúMake a pop quiz about clouds.",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúCre8 a pop qwiz abt clouds.",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúMak a pop qwiz @bout cloud$.?",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúCrea8 a  pop qwiz  @bout  cloud$.?",
    "instruct_curly_quotations_and_typo": "‚ÄúPlez make a pop qwiz aboot cloudds.‚Äù",
    "instruct_emoji": "Time for a ‚òÅÔ∏è pop quiz! Can you make one about clouds? ü§îüìù",
    "instruct_emoji_and_typo": "Can u plz make a pop quiz about cluds? ‚òÅÔ∏èü§î",
    "instruct_emoji_and_typo_and_missing_bracket": "Make a pop quiz abt cluds ü§î‚òÅÔ∏è",
    "instruct_emoji_and_typo_and_random_question_marks": "Can u make a pop quiz about cluds? ‚òÅÔ∏èü§î???",
    "instruct_emoticon": "Let's whip up a pop quiz about clouds! :-)",
    "instruct_emoticon_and_typo": "Plez make a pop qwiz about cloudds. :-/",
    "instruct_emoticon_and_typo_and_missing_bracket": "Mak a pop qwiz bout clouds :-(",
    "instruct_emoticon_and_typo_and_random_exclamations": "Plz make a pop qwiz about cloudds!!! :-D!",
    "instruct_helpful_markdown_structure": "### Pop Quiz Request\n*   **Topic**: Clouds\n*   **Task**: Generate a pop quiz.\n*   **Goal**: Assess knowledge on cloud types and phenomena.",
    "instruct_helpful_meaning_reinforing_characters": "--> Task: Create a pop quiz!\n--> Subject: Clouds ‚òÅÔ∏è",
    "instruct_html_tags": "Please generate a &lt;b&gt;pop quiz&lt;/b&gt; about clouds.",
    "instruct_markdown_bold": "**Formulate** a **pop quiz** concerning clouds.",
    "instruct_markdown_bold_and_italic": "***Create*** a ***_pop quiz_*** about clouds.",
    "instruct_markdown_italic": "_Prepare_ a _pop quiz_ on clouds.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Make a\npop\nqwuiz abot\nclouds",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Pleeze! Make a\npop quiz\naboot clouds!!!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Cre8 a pop\nqiz about clouds;!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Mak a pop quiz\nbout  clouds, ;!",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Can U make a pop\nquiz abt\ncl0uds?\nPls",
    "instruct_several_html_tags": "&lt;p&gt;Could you &lt;strong&gt;please&lt;/strong&gt; &lt;em&gt;create&lt;/em&gt; a pop quiz &lt;u&gt;specifically&lt;/u&gt; about clouds?&lt;/p&gt;",
    "instruct_small_hex_blob": "0x437265617465206120706f70207175697a2061626f757420636c6f7564732e",
    "instruct_spoiler_bars": "||Create a pop quiz about clouds.||",
    "output": "1. What type of cloud is named after a mountain range?\nA. Cirrus\nB. Stratus\nC. Cumulus\nD. Nimbostratus\n\n2. What type of cloud is associated with a rain shower?\nA. Cumulus\nB. Stratus\nC. Cirrus\nD. Altostratus\n\n3. Which type of cloud is often described as looking like a pile of cotton balls?\nA. Stratus\nB. Altostratus\nC. Cumulus\nD. Nimbostratus\n\n4. Which type of cloud has the tallest vertical growth?\nA. Stratus\nB. Cumulus\nC. Altostratus\nD. Nimbostratus\n\n5. What are the two main ingredients clouds are made of?\nA. Dust and water\nB. Wind and water\nC. Air and water\nD. Ice and water",
    "prompt_id": "fbc33900-a09e-4dc0-8975-5152550bba15"
  },
  {
    "prompt_count": 464,
    "instruction_original": "Explain why trade protectionism can hurt the economy of a country.",
    "input": "",
    "instruct_all_caps_and_typo": "EXPLAIN WHY TRAD PROTECTIIONISM CAN HURT THE ECONOMY OF A COUNTRY.",
    "instruct_all_caps_and_typo_and_missing_bracket": "EXPLAIN WHY TRAD PROTECTIIONISM CAN HURT THE ECONOMY OF A COUNTRY [",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "EXPLAIN WHY TRAD PROTECTIIONISM CAN HURT THE ECONOMY OF A COUNTRY ?!&",
    "instruct_code_fence": "```bash\nExplain why trade protectionism can hurt the economy of a country.\n```",
    "instruct_curly_quotations": "‚ÄúExplain why trade protectionism can hurt the economy of a country.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúExplain why trade protectionism can hurt the economy of a country.",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúExplain why trade protecshionism can hurt the econommy of a country.",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúExplain why trade protecshionism can hurt the econommy of a country. *$#",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúExplain why trade protecshionism can hurt the econommy of a country. *$# ",
    "instruct_curly_quotations_and_typo": "‚ÄúExplain why trade protecshionism can hurt the econommy of a country.‚Äù",
    "instruct_emoji": "Explain why trade protectionism üõ°Ô∏è can hurt üìâ the economy üí∞ of a country üó∫Ô∏è.",
    "instruct_emoji_and_typo": "Explain why trade protecshionism üõ°Ô∏è can hurt üìâ the econommy üí∞ of a country üó∫Ô∏è.",
    "instruct_emoji_and_typo_and_missing_bracket": "Explain why trade protecshionism üõ°Ô∏è can hurt üìâ the econommy üí∞ of a country",
    "instruct_emoji_and_typo_and_random_question_marks": "Explain why trade protecshionism üõ°Ô∏è can hurt üìâ the econommy üí∞ of a country üó∫Ô∏è?????",
    "instruct_emoticon": "Explain why trade protectionism :-( can hurt the economy :-O of a country. :D",
    "instruct_emoticon_and_typo": "Explain why trade protecshionism :-( can hurt the econommy :-O of a country. :D",
    "instruct_emoticon_and_typo_and_missing_bracket": "Explain why trade protecshionism :-( can hurt the econommy :-O of a country",
    "instruct_emoticon_and_typo_and_random_exclamations": "Explain why trade protecshionism :-( can hurt the econommy :-O of a country. :D!!!",
    "instruct_helpful_markdown_structure": "# Economic Impact of Protectionism\n\nPlease explain, in detail, the various reasons why trade protectionist policies can be detrimental to a nation's economy.",
    "instruct_helpful_meaning_reinforing_characters": "-> Explain why trade protectionism can hurt the economy of a country. <-",
    "instruct_html_tags": "<html>Explain why trade protectionism can hurt the economy of a country.</html>",
    "instruct_markdown_bold": "**Explain why trade protectionism can hurt the economy of a country.**",
    "instruct_markdown_bold_and_italic": "***Explain why trade protectionism can hurt the economy of a country.***",
    "instruct_markdown_italic": "*Explain why trade protectionism can hurt the economy of a country.*",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Explain why trade protecshionism can\nhurt the economy of a country",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Explain why trade protecshionism can\nhurt the economy of a country!!!!!!!!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Explain why trade protecshionism can\nhurt the economy of a country?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Explain why trade protecshionism can\nhurt the economy of a country? ",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Explain why trade protecshionism can\nhurt the econom of a country. $#%",
    "instruct_several_html_tags": "<div><p><span>Explain why trade protectionism can hurt the economy of a country.</span></p></div>",
    "instruct_small_hex_blob": "0x4578706C61696E",
    "instruct_spoiler_bars": "||Explain why trade protectionism can hurt the economy of a country.||",
    "output": "Trade protectionism is the practice of protecting domestic industries from foreign competition by imposing tariffs or other restrictions. This practice can be detrimental to the economy of the country that implements it because it raises the cost of imported goods, making them less affordable to consumers. This decreases demand for those goods, leading to fewer sales and less income for the domestic producers. Protectionism may also reduce the incentive for domestic companies to innovate or become more efficient, leading to inefficiency in the market. Finally, protectionism may also create economic tension between countries, leading to retaliatory tariffs that further restrict trade.",
    "prompt_id": "cc20128c-b0f2-44a5-bb0e-0c1ed7fa262a"
  },
  {
    "prompt_count": 465,
    "instruction_original": "Come up with a slogan to describe a new lipstick product.",
    "input": "",
    "instruct_all_caps_and_typo": "CUME UP WITH A SLOGAN TO DESCRB A NEW LIPPSTICK PRODUKT.",
    "instruct_all_caps_and_typo_and_missing_bracket": "CUME UP WITH A SLOGAN TO DESCRB A NEW LIPPSTICK PRODUKT",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "CUME UP WITH A SLOGAN TO DESCRB A NEW LIPPSTICK PRODUKT!@#$%",
    "instruct_code_fence": "```Task: Create slogan\nProduct: New lipstick\n```",
    "instruct_curly_quotations": "‚ÄúCome up with a slogan to describe a new lipstick product.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúCome up with a slogan to describe a new lipstick product.",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúCume up with a slogn to desrcib a new lipstick product.",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúCume up with a slogn to desrcib a new lipstick product@#$.",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúCume up with a slogn to desrcib a new lipstick product @#$% .",
    "instruct_curly_quotations_and_typo": "‚ÄúCume up with a slogn to desrcib a new lipstick product.‚Äù",
    "instruct_emoji": "Come up with a slogan to describe a new lipstick product. üíÑ‚ú®",
    "instruct_emoji_and_typo": "Cume up with a slogn to desrcib a new lipstick product. üíÑ‚ú®",
    "instruct_emoji_and_typo_and_missing_bracket": "Cume up with a slogn to desrcib a new lipstick product üíÑ‚ú®",
    "instruct_emoji_and_typo_and_random_question_marks": "Cume up with a slogn to desrcib a new lipstick product???? üíÑ‚ú®",
    "instruct_emoticon": "Come up with a slogan to describe a new lipstick product. :)",
    "instruct_emoticon_and_typo": "Cume up with a slogn to desrcib a new lipstick product. :)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Cume up with a slogn to desrcib a new lipstick product :)",
    "instruct_emoticon_and_typo_and_random_exclamations": "Cume up with a slogn to desrcib a new lipstick product!!!!! :)",
    "instruct_helpful_markdown_structure": "### Slogan Request\nPlease generate a slogan for a new lipstick product.\n*   **Product Type:** Lipstick\n*   **Goal:** Slogan generation",
    "instruct_helpful_meaning_reinforing_characters": "Come up with a slogan [!] to describe a new lipstick product [!]",
    "instruct_html_tags": "Please come up with a <b>slogan</b> for a new lipstick product.",
    "instruct_markdown_bold": "Come up with a **slogan** to describe a new lipstick product.",
    "instruct_markdown_bold_and_italic": "Come up with a ***slogan*** to describe a *new* **lipstick product**.",
    "instruct_markdown_italic": "Come up with a *slogan* to describe a new lipstick product.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Come up\nwith a slogn\nto describe a new\nlipstick product",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Come up\nwith a slogn!!!!\nto describe a new\nlipstick product!!!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Come up.\nwith a slogn;\nto describe a new,\nlipstick product?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Come up .\nwith a slogn ;\nto describe a new ,\nlipstick product ?",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Cme up with a slogn\nto descrb a nw\nlipstik prodct.",
    "instruct_several_html_tags": "Could you <p>come up with</p> a <b>slogan</b> for a <i>new lipstick product</i>, please?",
    "instruct_small_hex_blob": "436f6d652075702077697468206120736c6f67616e20746f2064657363726962652061206e6577206c6970737469636b2070726f647563742e",
    "instruct_spoiler_bars": "||I need a slogan for a new lipstick product.||",
    "output": "Find your Perfect Pout with our Perfectly Pioneering Lipsticks.",
    "prompt_id": "d4df6a43-1293-4699-9bcc-06f35c16c4f8"
  },
  {
    "prompt_count": 466,
    "instruction_original": "Describe how a Docker container works.",
    "input": "",
    "instruct_all_caps_and_typo": "EXPLAIN HOW A DOCKER CONTAINTER WORKS.",
    "instruct_all_caps_and_typo_and_missing_bracket": "[EXPLAIN HOW A DOCKER CONTAINTER WORKS.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "XYZ[EXPLAIN HOW A DOCKER CONTAINTER WORKS.ABC",
    "instruct_code_fence": "```Describe how a Docker container works.```",
    "instruct_curly_quotations": "‚ÄúDescribe how a Docker container works.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "[‚ÄúDescribe how a Docker container works.‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "[‚ÄúDescribe how a Docker contaner works.‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "ABC[‚ÄúDescribe how a Docker contaner works.‚ÄùXYZ",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": " ABC [ ‚ÄúDescribe how a Docker contaner works.‚Äù XYZ ",
    "instruct_curly_quotations_and_typo": "‚ÄúDescribe how a Docker contaner works.‚Äù",
    "instruct_emoji": "Please describe how a Docker container functions! üê≥üöÄ",
    "instruct_emoji_and_typo": "Please describe how a Docker contaner works. üê≥",
    "instruct_emoji_and_typo_and_missing_bracket": "[Describe how a Docker contaner works. üê≥",
    "instruct_emoji_and_typo_and_random_question_marks": "Describe how a Docker contaner works??? üê≥?",
    "instruct_emoticon": "Can you explain how a Docker container operates? :-)",
    "instruct_emoticon_and_typo": "Can you explain how a Docker contaner operates? :-(",
    "instruct_emoticon_and_typo_and_missing_bracket": "[Explain how a Docker contaner operates? :-(",
    "instruct_emoticon_and_typo_and_random_exclamations": "Explain how a Docker contaner operates!!! :-D!",
    "instruct_helpful_markdown_structure": "### Understanding Docker Containers: Describe how a Docker container works, focusing on its core functionalities and operational principles.",
    "instruct_helpful_meaning_reinforing_characters": ">>> Describe how a Docker container works. <<<",
    "instruct_html_tags": "<p>Describe how a Docker container works.</p>",
    "instruct_markdown_bold": "**Describe how a Docker container works.**",
    "instruct_markdown_bold_and_italic": "***Describe how a Docker container works.***",
    "instruct_markdown_italic": "*Describe how a Docker container works.*",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "De scri be ho w a Docker contai ner wo rks. [",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "De scri be ho w a Docker co ntai ner wo rks!!!! [",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "De scri be ho w a Docker co ntai ner wo rks; [",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": " De scri be ho w a Docker co ntai ner wo rks; [ ",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "De scri be ho w a Docker co ntai ner wo rks. @#$",
    "instruct_several_html_tags": "<div><span><p>Describe how a Docker container works.</p></span></div>",
    "instruct_small_hex_blob": "446573637269626520686f77206120446f636b657220636f6e7461696e657220776f726b732e",
    "instruct_spoiler_bars": "||Describe how a Docker container works.||",
    "output": "A Docker container is an isolated environment in which applications can be packaged and run. It consists of the application, system libraries, and other configuration files necessary for a specific task. The container runs within a docker host, which isolates the container from other host resources and is responsible for managing its life cycle. Docker containers are lightweight and highly portable; they can be quickly spun up and transported to different environments such as cloud, bare metal, and on-premises. Containers are isolated from the underlying host system so they can be securely run and managed. Docker also uses images which function like snapshots ‚Äì making it easy to deploy and run applications reliably and consistently across different environments.",
    "prompt_id": "54c9d9d9-d324-488f-86a3-e10f894d1a49"
  },
  {
    "prompt_count": 467,
    "instruction_original": "Given an economic concept, define it in simple terms.",
    "input": "Inflation",
    "instruct_all_caps_and_typo": "PLZ DEFFIN AN ECCOOMIC CONSEPT IN SIMPEL TERMZ.",
    "instruct_all_caps_and_typo_and_missing_bracket": "PLZ DEFFIN AN ECCOOMIC CONSEPT IN SIMPEL TERMZ [",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "PLZ DEFFIN AN ECCOOMIC CONSEPT IN SIMPEL TERMZ [??!@#",
    "instruct_code_fence": "```Explain an economic concept in easy words.```",
    "instruct_curly_quotations": "‚ÄúDefine an economic concept in simple terms.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúDefine an economic concept in simple terms.",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúDeefine an eccoemic concept in simpel terms.",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúDeefine an eccoemic concept in simpel terms. 123xyz",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "  ‚ÄúDeefine an eccoemic concept in simpel terms. 123xyz  ",
    "instruct_curly_quotations_and_typo": "‚ÄúDeefine an eccoemic concept in simpel terms.‚Äù",
    "instruct_emoji": "ü§îüí∞ Explain an economic idea simply. üí°",
    "instruct_emoji_and_typo": "ü§îüí∞ Deefin an eccoemic idea simply. üí°",
    "instruct_emoji_and_typo_and_missing_bracket": "ü§îüí∞ Deefin an eccoemic idea simply. üí° (",
    "instruct_emoji_and_typo_and_random_question_marks": "ü§îüí∞ Deefin an eccoemic idea simply. ??? üí°?",
    "instruct_emoticon": "Got an economic concept? :-| Make it easy to understand! :)",
    "instruct_emoticon_and_typo": "Got an ecnomic concept? :-| Make it eazy to understand! :)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Got an ecnomic concept? :-| Make it eazy to understand! (: ",
    "instruct_emoticon_and_typo_and_random_exclamations": "Got an ecnomic concept? :-| Make it eazy to understand!!! :)",
    "instruct_helpful_markdown_structure": "### Task: Simplify Economics- **Input**: An economic concept.- **Output**: A clear, straightforward definition.- **Goal**: Make complex ideas accessible.",
    "instruct_helpful_meaning_reinforing_characters": "-> Take any economic concept... (simplify it!) ...and provide a beginner-friendly definition. <-",
    "instruct_html_tags": "<p>Define an economic concept</p> <em>in simple terms.</em>",
    "instruct_markdown_bold": "Please **explain any economic concept** clearly.",
    "instruct_markdown_bold_and_italic": "Please _**clarify any economic idea**_ in plain language.",
    "instruct_markdown_italic": "Kindly _explain_ an economic concept _simply_.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Define\nan\necnomic\nconcept\nin\nsimpe\nterms (",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "DEFINE\nAN ECNOMIK\nCONSEPT\nIN SIMPEL\nTERMS!!!! [",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Defin.\nan.\neconomic.\nconcept:\nin.\nsimpe?\nterms! (",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "  Defin. \n \nan. \neconomic . \nconcept: \nin. \nsimpe? \nterms ! (  ",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Deefine\nan\necon_mic\nconcep_t\nin\nsimple\nterms.",
    "instruct_several_html_tags": "<div><h1>Economic Concept</h1><p>Explain this notion clearly and concisely.</p></div>",
    "instruct_small_hex_blob": "446566696E6520616E2065636F6E6F6D696320636F6E6365707420696E2073696D706C65207465726D732E",
    "instruct_spoiler_bars": "||Define an economic concept in understandable terms.||",
    "output": "Inflation is an economic concept that refers to the sustained rise in prices of goods and services. It is measured by calculating the rate at which the general level of prices for goods and services is rising, and it is usually calculated using a price index. When inflation is high, the purchasing power of currency decreases and the value of money diminishes.",
    "prompt_id": "e2abe5f7-f069-44d0-a104-7e125629f61a"
  },
  {
    "prompt_count": 468,
    "instruction_original": "Propose a transportation solution for a city with rapid population growth.",
    "input": "",
    "instruct_all_caps_and_typo": "PROPOSE A TRANPORTATION SOULUTION FOR A CITY WITH RAPID POPULTION GROWHT.",
    "instruct_all_caps_and_typo_and_missing_bracket": "PROPOSE A TRANPORTATION SOULUTION FOR A CITY WITH RAPID POPULTION GROWHT.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "ZYX PROPOSE A TRANPORTATION SOULUTION FOR A CITY WITH RAPID POPULTION GROWHT. ABC",
    "instruct_code_fence": "// Task: Propose City Transportation\n// Context: Rapid Population Growth\nfunction proposeTransportationSolution(city) {\n  // Your implementation goes here.\n  // Focus on scalability, efficiency, and sustainability.\n}",
    "instruct_curly_quotations": "‚ÄúPropose a transportation solution for a city with rapid population growth.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúPropose a transportation solution for a city with rapid population growth.‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúPropose a tranportation soultion for a city with rapid popluation growth.‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúAXBY Propose a tranportation soultion for a city with rapid popluation growth. CZD‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚Äú AXBY Propose a tranportation soultion for a city with rapid popluation growth. CZD ‚Äù",
    "instruct_curly_quotations_and_typo": "‚ÄúPropose a tranportation soultion for a city with rapid popluation growth.‚Äù",
    "instruct_emoji": "üèôÔ∏èüöóüìà Suggest a top-tier transit plan for a fast-growing urban hub. üöÄ",
    "instruct_emoji_and_typo": "üèôÔ∏èüöóüìà Sugest a top-tier tranit plan for a fast-growing urban hub. üöÄ",
    "instruct_emoji_and_typo_and_missing_bracket": "üèôÔ∏èüöóüìà Sugest a top-tier tranit plan for a fast-growing urban hub. üöÄ",
    "instruct_emoji_and_typo_and_random_question_marks": "üèôÔ∏èüöóüìà Sugest a top-tier? tranit plan for a fast-growing urban hub. üöÄ???",
    "instruct_emoticon": ":) Propose an optimal transportation strategy for a city experiencing swift demographic expansion. <3",
    "instruct_emoticon_and_typo": ":) Propse an optimal tranportation strategy for a city experincing swift demographic expansin. <3",
    "instruct_emoticon_and_typo_and_missing_bracket": ":) Propse an optimal tranportation strategy for a city experincing swift demographic expansin. <3",
    "instruct_emoticon_and_typo_and_random_exclamations": ":) Propse an optimal tranportation strategy for a city experincing swift demographic expansin. <3!!!",
    "instruct_helpful_markdown_structure": "# Transportation Solution Proposal\n\n## Challenge: Rapid Population Growth\n\nPlease develop a comprehensive transportation strategy for a city grappling with rapid demographic expansion.",
    "instruct_helpful_meaning_reinforing_characters": ">>> Propose a transportation solution for a city with rapid population growth. <<<",
    "instruct_html_tags": "<p>Please outline a transportation strategy for an urban area facing rapid population increases.</p>",
    "instruct_markdown_bold": "**Outline a robust transportation plan for a metropolitan area with significant population growth.**",
    "instruct_markdown_bold_and_italic": "***Propose a highly effective transportation solution for a city undergoing rapid population expansion.***",
    "instruct_markdown_italic": "*Suggest an innovative transportation solution tailored for a city experiencing accelerated population increase.*",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Propose a\ntransportation\nsoultion for a city\nwith\nrapid popluation growth.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Propose a!\ntransportation!!\nsoultion for a city!!!\nwith!!!!\nrapid popluation growth.!!!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Propose a;\ntransportation:\nsoultion for a city.\nwith?\nrapid popluation growth!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Propose a ;\ntransportation :\nsoultion for a city .\nwith ?\nrapid popluation growth !",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "& Propose a\ntransportation\nsoltion for a city\nwith\nrapid popultion growth. %",
    "instruct_several_html_tags": "<div><h1>Transportation Challenge!</h1><p><b>Task:</b> Develop a comprehensive transportation solution for a city experiencing significant and rapid population growth.</p></div>",
    "instruct_small_hex_blob": "0x50726f706f73652061207472616e73706f72746174696f6e20736f6c7574696f6e20666f7220612063697479207769746820726170696420706f70756c6174696f6e2067726f7774682e",
    "instruct_spoiler_bars": "||Devise a cutting-edge transportation system for an urban center experiencing swift population escalation.||",
    "output": "A city with rapid population growth should consider investing in public transportation in order to alleviate traffic congestion. This could include buses, subway systems, light rail options, and even bike-sharing programs. These solutions are cost-effective and have the potential to reduce traffic and air pollution, as well as make it easier for people to get around. Additionally, in order to accommodate the increased demand for transportation, the city may also need to invest in infrastructure such as road expansion and parking lots.",
    "prompt_id": "50b4d6e0-5908-4309-ac7b-79e3e7d5db9c"
  },
  {
    "prompt_count": 469,
    "instruction_original": "Identify a potential security threat for a global online financial system.",
    "input": "",
    "instruct_all_caps_and_typo": "IDENTIFY A POTENIAL SECURITY THREAT FOR A GLOBAL ONLNE FINANIAL SYSTEM.",
    "instruct_all_caps_and_typo_and_missing_bracket": "IDENTIFY A POTENIAL SECURITY THREAT FOR A GLOBAL ONLNE FINANIAL SYSTEM. ]",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "IDENTIFY A POTENIAL SECURITY THREAT FOR A GLOBAL ONLNE FINANIAL SYSTEM. ] @#$%",
    "instruct_code_fence": "```Identify a potential security threat for a global online financial system.```",
    "instruct_curly_quotations": "‚ÄúIdentify a potential security threat for a global online financial system.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúIdentify a potential security threat for a global online financial system.‚Äù [",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúIdenttify a potenial security threat for a global onlne financial system.‚Äù [",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúIdenttify a potenial security threat for a global onlne financial system.‚Äù [ ^&*()",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúIdenttify a potenial security threat for a global onlne financial system.‚Äù [ ^&*() ",
    "instruct_curly_quotations_and_typo": "‚ÄúIdenttify a potenial security threat for a global onlne financial system.‚Äù",
    "instruct_emoji": "üîé‚ö†Ô∏èüåêüí∞üíª",
    "instruct_emoji_and_typo": "üîé‚ö†Ô∏èüåêüí∞üíª Identtify a potenial security threat.",
    "instruct_emoji_and_typo_and_missing_bracket": "üîé‚ö†Ô∏èüåêüí∞üíª Identtify a potenial security threat. ]",
    "instruct_emoji_and_typo_and_random_question_marks": "üîé‚ö†Ô∏èüåêüí∞üíª Identtify a potenial security threat. ???",
    "instruct_emoticon": "Identify a security threat for a global online financial system. :-|",
    "instruct_emoticon_and_typo": "Identtify a potenial security threat for a global onlne financial system. :-(",
    "instruct_emoticon_and_typo_and_missing_bracket": "Identtify a potenial security threat for a global onlne financial system. :-( ]",
    "instruct_emoticon_and_typo_and_random_exclamations": "Identtify a potenial security threat for a global onlne financial system. :-o !!!",
    "instruct_helpful_markdown_structure": "## Security Threat Analysis For Global Financial Systems- **Task**: Identify a potential security threat.- **Target**: A global online financial system.",
    "instruct_helpful_meaning_reinforing_characters": "üö® Identify a potential security threat for a global online financial system. üîí",
    "instruct_html_tags": "<span>Identify a potential security threat for a global online financial system.</span>",
    "instruct_markdown_bold": "**Identify a potential security threat for a global online financial system.**",
    "instruct_markdown_bold_and_italic": "***Identify a potential security threat for a global online financial system.***",
    "instruct_markdown_italic": "*Identify a potential security threat for a global online financial system.*",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Identtify a potenial security threat for a global onlne financial system. {",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Identtify a potenial security threat for a global onlne financial system. { !!!!!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Identtify a potenial security threat for a global onlne financial system. { ;",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Identtify a potenial security threat for a global onlne financial system. { ; ",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Identtify a potenial security threat for a global onlne financial system. @#$",
    "instruct_several_html_tags": "<div><p><strong>Identify</strong> a potential security threat for a global online financial system.</p></div>",
    "instruct_small_hex_blob": "4964656e74696679206120706f74656e7469616c2073656375726974792074687265617420666f72206120676c6f62616c206f6e6c696e652066696e616e6369616c2073797374656d2e",
    "instruct_spoiler_bars": "||Identify a potential security threat for a global online financial system.||",
    "output": "A potential security threat for a global online financial system is cybercrime. Cybercriminals often target online financial systems due to their complexity and the potential to gain access to sensitive data like financial information or credit card numbers. Cybercriminals may use methods like malware, phishing, and identity theft to gain access to a system and steal money or data. It is important for global financial systems to have robust security measures in place to protect against these threats.",
    "prompt_id": "6ad282c0-77ce-4985-9377-360305d1a385"
  },
  {
    "prompt_count": 470,
    "instruction_original": "Describe what it takes to be a successful manager.",
    "input": "",
    "instruct_all_caps_and_typo": "DISCRIBE WUT IT TAKES TO BE A SUCCSESFUL MAGANER.",
    "instruct_all_caps_and_typo_and_missing_bracket": "DISCRIBE WUT IT TAKES TO BE A SUCCSESFUL MAGANER",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "XYZ DISCRIBE WUT IT TAKES TO BE A SUCCSESFUL MAGANER ABC",
    "instruct_code_fence": "```Please detail the essential skills and qualities that lead to success in a managerial role.```",
    "instruct_curly_quotations": "‚ÄúWhat precisely constitutes a truly successful manager?‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúWut exaclty consttutes a truley succsesful managr",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúWut exaclty consttutes a truley succsesful managr",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúWut @#$% exaclty consttutes a truley succsesful managr",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚Äú Wut @#$% exaclty consttutes a truley succsesful managr ",
    "instruct_curly_quotations_and_typo": "‚ÄúWut exaclty consttutes a truley succsesful managr?‚Äù",
    "instruct_emoji": "üîë Tell me what makes a manager successful! ‚ú®",
    "instruct_emoji_and_typo": "ü§î Wut makes a gud managr? ü§©",
    "instruct_emoji_and_typo_and_missing_bracket": "Wut makes a gud managr üòú",
    "instruct_emoji_and_typo_and_random_question_marks": "Wut makes a gud managr???? üßê",
    "instruct_emoticon": "What qualities make a manager succeed? (^o^)",
    "instruct_emoticon_and_typo": "Wut makes a gud managr? ;)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Wut makes a gud managr :-D",
    "instruct_emoticon_and_typo_and_random_exclamations": "Wut makes a gud managr!!!! O_o",
    "instruct_helpful_markdown_structure": "# Successful Manager Traits- Key Attributes- Core Skills- Leadership Qualities",
    "instruct_helpful_meaning_reinforing_characters": "<<<What are the fundamental requirements for achieving outstanding results as a manager?>>>",
    "instruct_html_tags": "<p>Outline the essential attributes for managerial success.</p>",
    "instruct_markdown_bold": "**Explain the core competencies of a highly successful manager.**",
    "instruct_markdown_bold_and_italic": "**_What are the key characteristics of an effective manager?_**",
    "instruct_markdown_italic": "_Detail the attributes required for superior management._",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "DESCRIBE WUT IT TAKS TO BE A SUCCESFUL MANAGR",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "DESCRIBE!!!! WUT IT!!! TAKS TO BE A!!! SUCCESFUL!!!! MANAGR!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "DESCRIBE? WUT IT? TAKS TO BE A? SUCCESFUL; MANAGR.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "DESCRIBE ! WUT IT , TAKS TO BE A ; SUCCESFUL ? MANAGR .",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "DESCRIBE WUT IT TAKS TO BE A SUCCESFUL M%ANAGER^.",
    "instruct_several_html_tags": "<div><h1>Managerial Excellence</h1><p><i>What defines a truly successful leader?</i></p></div>",
    "instruct_small_hex_blob": "446573637269626520776861742069742074616b657320746f2062652061207375636365737366756c206d616e616765722e",
    "instruct_spoiler_bars": "||What are the defining characteristics of a truly successful manager?||",
    "output": "A successful manager is one who has strong leadership and communication skills, the ability to think strategically, and the knowledge and experience to stay up-to-date on industry trends and best practices. They should be organized and resourceful, with the ability to manage people, motivate employees, and inspire others. They should be able to create a culture of trust and respect, provide feedback and guidance, and create an environment for success. They should also be comfortable making difficult decisions, accountable for their actions, and willing to learn from their mistakes.",
    "prompt_id": "32675c3b-927f-4ae0-a195-478d0fa52713"
  },
  {
    "prompt_count": 471,
    "instruction_original": "Arrange the given sentences into a well-structured paragraph.",
    "input": "Many of the world‚Äôs problems can be traced back to a lack of education. People must be provided with a good foundation in education. Education has the power to provide societies with long-term solutions.",
    "instruct_all_caps_and_typo": "ARRANGE THE GIVEN SENTENCES INTO A WELL-STRUCTUERD PARAGRAPH.",
    "instruct_all_caps_and_typo_and_missing_bracket": "ARRANGE THE GIVEN SENTENCES INTO A WELL-STRUCTUERD PARAGRAPH (",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "ARRANGE THE GIVEN SENTENCES INTO A WELL-STRUCTUERD PARAGRAPH (XYZ",
    "instruct_code_fence": "```Formulate a cohesive paragraph from the provided sentences.```",
    "instruct_curly_quotations": "‚ÄúArrange the given sentences into a well-structured paragraph.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúArrange the given sentences into a well-structured paragraph (‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúArrange the given sentences into a well-structuerd paragraph (‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúArrange the given sentences into a well-structuerd paragraph (ABC‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúArrange the given sentences into a well-structuerd  paragraph (ABC ‚Äù",
    "instruct_curly_quotations_and_typo": "‚ÄúArrange the given sentences into a well-structuerd paragraph.‚Äù",
    "instruct_emoji": "üìù Organize these sentences ‚û°Ô∏è üìú paragraph. ‚ú®",
    "instruct_emoji_and_typo": "üìù Organize these sentences ‚û°Ô∏è üìú paragraf. ‚ú®",
    "instruct_emoji_and_typo_and_missing_bracket": "üìù Organize these sentences ‚û°Ô∏è üìú paragraf. ‚ú® (",
    "instruct_emoji_and_typo_and_random_question_marks": "üìù Organize these sentences ‚û°Ô∏è üìú paragraf. ????",
    "instruct_emoticon": "Arrange these sentences into a nice paragraph. :)",
    "instruct_emoticon_and_typo": "Arrange these sentences into a nice paragraf. :)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Arrange these sentences into a nice paragraf. :) (",
    "instruct_emoticon_and_typo_and_random_exclamations": "Arrange these sentences into a nice paragraf. !!!!!!!",
    "instruct_helpful_markdown_structure": "## Paragraph Construction: * Take provided sentences. * Organize them logically. * Form a coherent, well-structured paragraph.",
    "instruct_helpful_meaning_reinforing_characters": "--- Arrange the given sentences into a well-structured paragraph. ---",
    "instruct_html_tags": "<span>Arrange the given sentences into a well-structured paragraph.</span>",
    "instruct_markdown_bold": "**Arrange** the given sentences into a **well-structured** paragraph.",
    "instruct_markdown_bold_and_italic": "***Arrange*** the *given* sentences into a ***well-structured*** paragraph.",
    "instruct_markdown_italic": "_Arrange_ the given sentences into a _well-structured_ paragraph.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Arrange the given sentences into a well-structuerd paragraph (",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Arrange the given sentences into a well-structuerd paragraph (!!!!!!!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Arrange the given sentences into a well-structuerd paragraph , (",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Arrange the given sentences into a well-structuerd  paragraph , ( ",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Arrange the given sentences into a well-structuerd paragraph ??? ",
    "instruct_several_html_tags": "<div><p><span>Please</span> arrange the given sentences into a <b>well-structured</b> paragraph.</p></div>",
    "instruct_small_hex_blob": "417272616e67652074686520676976656e2073656e74656e63657320696e746f20612077656c6c2d73747275637475726564207061726167726170682e",
    "instruct_spoiler_bars": "||Please arrange the given sentences into a well-structured paragraph.||",
    "output": "Education has the power to provide societies with long-term solutions to many of the world‚Äôs problems. People must be provided with a good foundation in education in order to be able to make informed decisions and have the knowledge and skills necessary to tackle these challenges.",
    "prompt_id": "c731d8b0-b450-4a6b-ab14-69deb142c31d"
  },
  {
    "prompt_count": 472,
    "instruction_original": "Construct a timeline for the coronavirus outbreak.",
    "input": "",
    "instruct_all_caps_and_typo": "CONSTUCT A TIMELINE FOR THE CORONAVIRUS OUTBRAK.",
    "instruct_all_caps_and_typo_and_missing_bracket": "[ CONSTUCT A TIMELINE FOR THE CORONAVIRUS OUTBRAK.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "@#%[ CONSTUCT A TIMELINE FOR THE CORONAVIRUS OUTBRAK. &*^",
    "instruct_code_fence": "```Construct a timeline for the coronavirus outbreak.```",
    "instruct_curly_quotations": "‚ÄúConstruct a timeline for the coronavirus outbreak.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúConstruct a timeline for the coronavirus outbreak.‚Äù]",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúConstruuct a timeline for the coronavirsu outbreak.‚Äù]",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "@#%‚ÄúConstruuct a timeline for the coronavirsu outbreak.‚Äù]$&*",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": " @#% ‚ÄúConstruuct a timeline for the coronavirsu outbreak.‚Äù ]$&* ",
    "instruct_curly_quotations_and_typo": "‚ÄúConstruuct a timeline for the coronavirsu outbreak.‚Äù",
    "instruct_emoji": "Build a üï∞Ô∏è timeline ü¶† for the coronavirus outbreak üåç.",
    "instruct_emoji_and_typo": "Build a üï∞Ô∏è timline ü¶† for the coronavrus outbreak üåç.",
    "instruct_emoji_and_typo_and_missing_bracket": "[ Build a üï∞Ô∏è timline ü¶† for the coronavrus outbreak üåç.",
    "instruct_emoji_and_typo_and_random_question_marks": "Build a üï∞Ô∏è timline ü¶† for the coronavrus outbreak üåç????",
    "instruct_emoticon": "Create a timeline for the coronavirus outbreak. :-)",
    "instruct_emoticon_and_typo": "Create a timline for the coronavrus outbreak. :-(",
    "instruct_emoticon_and_typo_and_missing_bracket": "{ Create a timline for the coronavrus outbreak. :-(",
    "instruct_emoticon_and_typo_and_random_exclamations": "Create a timline for the coronavrus outbreak. !!! :-)",
    "instruct_helpful_markdown_structure": "# Task: Create a Timeline of the Coronavirus Outbreak",
    "instruct_helpful_meaning_reinforing_characters": "--> Construct a timeline for the coronavirus outbreak. <--",
    "instruct_html_tags": "<b>Construct a timeline for the coronavirus outbreak.</b>",
    "instruct_markdown_bold": "**Construct a timeline for the coronavirus outbreak.**",
    "instruct_markdown_bold_and_italic": "***Construct a timeline for the coronavirus outbreak.***",
    "instruct_markdown_italic": "*Construct a timeline for the coronavirus outbreak.*",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Construct\na timeline\nfor the coronavirsu\noutbreak. }",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Construct\na timline\nfor the\ncoronavrus\noutbreak!!!!}",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Construct\na timeline\nfor the coronavius outbreak.;}",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Construct \na timeline\nfor the coronavius outbreak. ; }",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Construct a \ntimeline for the coronavirsu outbrek. _",
    "instruct_several_html_tags": "<i><u><b>Construct a timeline for the coronavirus outbreak.</b></u></i>",
    "instruct_small_hex_blob": "0x4F6B2044617461",
    "instruct_spoiler_bars": "||Construct a timeline for the coronavirus outbreak.||",
    "output": "December 2019: Initial Cases Reported in Wuhan, China\n\nJanuary 2020: Coronavirus has Spread to Multiple Countries\n\nFebruary 2020: World Health Organization (WHO) Declares a Public Health Emergency\n\nMarch 2020: COVID-19 Declared a Global Pandemic\n\nApril 2020: Many Countries Begin to Reopen \n\nMay 2020: Vaccine Research & Development Begins\n\nJune 2020: WHO announces start of vaccine distribution to low-income countries \n\nJuly 2020: Vaccinations Begin in Developed Countries\n\nAugust 2020: Vaccine Trials Begin in the US\n\nSeptember 2020: New Virus Strains Appear\n\nOctober 2020: Global Cases Pass 40 Million\n\nNovember 2020: Vaccine Rollout Begins in US\n\nDecember 2020: Virus Cases Reach an All-Time High",
    "prompt_id": "90cef16f-27a7-465c-b272-948ef73fd028"
  },
  {
    "prompt_count": 473,
    "instruction_original": "Compare and contrast two types of computer networks.",
    "input": "",
    "instruct_all_caps_and_typo": "COMPAIR AND CONTRST TWO COMPTER NETWROKS.",
    "instruct_all_caps_and_typo_and_missing_bracket": "COMPAIR AND CONTRST TWO COMPTER NETWROKS[",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "COMPAIR AND CONTRST TWO COMPTER NETWROKS[ (#$!@)",
    "instruct_code_fence": "```Compare and contrast two types of computer networks.```",
    "instruct_curly_quotations": "‚ÄúCompare and contrast two types of computer networks.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúCompare and contrast two types of computer networks.‚Äù[",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúCompair and contrast two types of computer netwroks.‚Äù[",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúCompair and contrast two types of computer netwroks.‚Äù[{#@$",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": " ‚ÄúCompair and contrast two types of computer netwroks.‚Äù[{#@$ ",
    "instruct_curly_quotations_and_typo": "‚ÄúCompair and contrast two types of computer netwroks.‚Äù",
    "instruct_emoji": "Compare üÜö and contrast ‚öñÔ∏è two types of computer networks üíªüì°.",
    "instruct_emoji_and_typo": "Discus ü§î and contrast ‚öñÔ∏è two types of computer netwroks üíªüì°.",
    "instruct_emoji_and_typo_and_missing_bracket": "Discus ü§î and contrast ‚öñÔ∏è two types of computer netwroks üíªüì°[",
    "instruct_emoji_and_typo_and_random_question_marks": "Discus ü§î and contrast ‚öñÔ∏è two types of computer netwroks üíªüì°????",
    "instruct_emoticon": "Compare :-) and contrast :-( two types of computer networks <_>.",
    "instruct_emoticon_and_typo": "Discus :-) and contrast :-( two types of computer netwroks <_>.",
    "instruct_emoticon_and_typo_and_missing_bracket": "Discus :-) and contrast :-( two types of computer netwroks <_>[",
    "instruct_emoticon_and_typo_and_random_exclamations": "Discus :-) and contrast :-( two types of computer netwroks <_>!!!!",
    "instruct_helpful_markdown_structure": "### Network Analysis: Compare and contrast two distinct computer network types, highlighting their similarities and differences.",
    "instruct_helpful_meaning_reinforing_characters": "--> Compare & Contrast <--> two types of computer networks. <--",
    "instruct_html_tags": "<p>Compare and contrast two types of computer networks.</p>",
    "instruct_markdown_bold": "**Compare and contrast two types of computer networks.**",
    "instruct_markdown_bold_and_italic": "***Compare and contrast two types of computer networks.***",
    "instruct_markdown_italic": "*Compare and contrast two types of computer networks.*",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Diferentiate. Betwen. Two. Netwrks. Similirites. And. Distinctons. [",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Diferentiate. Betwen. Two. Netwrks. Similirites. And. Distinctons. [!!!!!!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Diferentiate. Betwen. Two. Netwrks. Similirites. And. Distinctons. ;[",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": " Diferentiate. Betwen. Two. Netwrks. Similirites. And. Distinctons. ;[ ",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Diferentiate. Betwen. Two. Netwrks. Similirites. And. Distinctons. $%^&",
    "instruct_several_html_tags": "<div><p><span>Compare and contrast two types of computer networks.</span></p></div>",
    "instruct_small_hex_blob": "436f6d706172654e6574776f726b73",
    "instruct_spoiler_bars": "||Compare and contrast two types of computer networks.||",
    "output": "There are two main types of computer networks: Local Area Networks (LANs) and Wide Area Networks (WANs). \n\nLANs are typically used in small geographic areas such as businesses and homes, and involve connecting multiple computers in a single region using a common communications protocol. They are usually limited to a few miles in size and provide high-speed connections between users.\n\nIn contrast, WANs connect computers over large geographic areas and often span multiple countries. They use dedicated leased lines such as cables or satellite signals to connect multiple LANs together. As such, they are slower than LANs due to the distance involved.\n\nEach type of network has its own advantages and disadvantages, and which network is more suitable will depend on the context of the given situation.",
    "prompt_id": "8310a3ef-f41f-4f98-86f3-5a3a9b24b9a4"
  },
  {
    "prompt_count": 474,
    "instruction_original": "Describe how machine learning can be used to automate mundane tasks.",
    "input": "",
    "instruct_all_caps_and_typo": "EXPLAIN HOW MACHINE LEARNIN CAN AUTOMATE BORING JOBS.",
    "instruct_all_caps_and_typo_and_missing_bracket": "HOW CAN MACHINE LEARNIN AUTOMATE MUNDANE TASKS[",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "HOW CAN MACHINE LEARNIN AUTOMATE MUJDANE TASKS?? @#$ [",
    "instruct_code_fence": "```python\ndef automate_with_ml():\n    # Describe how ML automates mundane tasks\n    pass\n```",
    "instruct_curly_quotations": "‚ÄúDescribe how machine learning can be used to automate mundane tasks.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúDescribe how machine learning can be used to automate mundane tasks.",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúDescrib how machine lernin can automate mundane tasks.",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúDescrib how machine lernin can automate mundane tasks.#$",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": " ‚ÄúDescrib how machine lernin can automate mundane tasks. #$ ",
    "instruct_curly_quotations_and_typo": "‚ÄúDescrib how machine lernin can automate mundane tasks.‚Äù",
    "instruct_emoji": "ü§ñ Tell me how machine learning can auto-pilot boring tasks. üöÄ",
    "instruct_emoji_and_typo": "‚ùìHow can machine learnin ü¶æ automate mundsne tasks?",
    "instruct_emoji_and_typo_and_missing_bracket": "üöÄ Explain machine lernin automate mundane tasks]",
    "instruct_emoji_and_typo_and_random_question_marks": "ü§î How can machin learnin ‚öôÔ∏è automae mundane tasks?????",
    "instruct_emoticon": "Automate mundane tasks using ML, please! :-)",
    "instruct_emoticon_and_typo": "Automate mundne tasks with ML, how? :-(",
    "instruct_emoticon_and_typo_and_missing_bracket": "How ML auto-mate mundan tasks? ;-( ",
    "instruct_emoticon_and_typo_and_random_exclamations": "Automate mundne tasks with ML, how?! >:O!!!",
    "instruct_helpful_markdown_structure": "## Machine Learning & Automation\n- How does ML streamline routine work?\n- Provide examples of automating mundane tasks with ML.",
    "instruct_helpful_meaning_reinforing_characters": "--> Explore how ML = mundane task automation! <-- üëç",
    "instruct_html_tags": "<p>Explain the use of machine learning in automating repetitive tasks.</p>",
    "instruct_markdown_bold": "**Detail the application of machine learning for automating tedious processes.**",
    "instruct_markdown_bold_and_italic": "***Illustrate how machine learning can streamline mundane tasks.***",
    "instruct_markdown_italic": "*Provide an overview of machine learning's role in automating repetitive activities.*",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Descrie how\nmachine learnin\ncan automaete\nmundane tasks[",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Describ hov\nmachine learni\ncan automtae\nmundan tasks[!!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "How can\nmachne learnin,\nautomate mundane tasks{",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "How can\nmachne learnin ,\nautomate mundane tasks { ",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Expain h0w\nmchine learnin\ncan automate\nmundane tasks.",
    "instruct_several_html_tags": "<div><span><p>How does ML help with automating routine work?</p></span></div>",
    "instruct_small_hex_blob": "Describe how machine learning automates routine tasks, query ID: 0xDEADBEEF.",
    "instruct_spoiler_bars": "||Explain how ML helps with automating mundane tasks.||",
    "output": "Machine learning can be used to automate mundane tasks such as document classification, sentiment analysis, predictive analytics, and natural language processing. These tasks can be tedious and time-consuming for humans to do, but machine learning algorithms can perform them quickly and accurately. Machine learning can also be used for more complex tasks such as object recognition and autonomous driving, which require advanced algorithms and large amounts of data. Machine learning makes it possible to automate many tasks that would otherwise have to be done manually, saving time and energy.",
    "prompt_id": "7c66b2ca-f4ab-4c62-9a70-af9c03489a46"
  },
  {
    "prompt_count": 475,
    "instruction_original": "Write a blog post on how to deploy machine learning models.",
    "input": "",
    "instruct_all_caps_and_typo": "WRIT A BLOG POST ON HOW TO DEPLOY MACHIN LERNING MODELS.",
    "instruct_all_caps_and_typo_and_missing_bracket": "WRIT A BLOG POST ON HOW TO DEPLOY MACHIN LERNING MODELS.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "WRIT A BLOG POST ON HOW TO DEPLOY MACHIN LERNING MODELS. &*#@!",
    "instruct_code_fence": "```Write a comprehensive blog post detailing the process of deploying machine learning models.```",
    "instruct_curly_quotations": "‚ÄúPlease compose a blog post outlining the steps for deploying machine learning models.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúPlease compose a blog post outlining the steps for deploying machine learning models.‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúPlaese compose a blog post outlining the steps for deployin machine learning models.‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúPlaese compose a blog post outlining the steps for deployin machine learning models.‚Äù ^%$!",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúPlaese compose a blog post outlining the steps for deployin machine learning models.‚Äù ^%$! ",
    "instruct_curly_quotations_and_typo": "‚ÄúPlaese compose a blog post outlining the steps for deployin machine learning models.‚Äù",
    "instruct_emoji": "‚úçÔ∏è Write a blog post üìù on how to deploy machine learning models üöÄ.",
    "instruct_emoji_and_typo": "‚úçÔ∏è Writ a blog post üìù on how to deploy machin learning models üöÄ.",
    "instruct_emoji_and_typo_and_missing_bracket": "‚úçÔ∏è Writ a blog post üìù on how to deploy machin learning models üöÄ.",
    "instruct_emoji_and_typo_and_random_question_marks": "‚úçÔ∏è Writ a blog post üìù on how to deploy machin learning models üöÄ???",
    "instruct_emoticon": "Write a blog post :) on how to deploy machine learning models ;)",
    "instruct_emoticon_and_typo": "Writ a blog post :) on how to deploy machin learning models ;)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Writ a blog post :) on how to deploy machin learning models ;)",
    "instruct_emoticon_and_typo_and_random_exclamations": "Writ a blog post :) on how to deploy machin learning models ;)!!!",
    "instruct_helpful_markdown_structure": "# Blog Post Request: Machine Learning Model Deployment\n\n- **Topic:** How to deploy machine learning models.\n- **Format:** Blog post.\n- **Goal:** Provide a comprehensive guide.",
    "instruct_helpful_meaning_reinforing_characters": ">>> Write a blog post -> on how to deploy machine learning models.",
    "instruct_html_tags": "<body>Write a blog post on how to deploy machine learning models.</body>",
    "instruct_markdown_bold": "**Write a blog post on how to deploy machine learning models.**",
    "instruct_markdown_bold_and_italic": "**_Write a blog post on how to deploy machine learning models._**",
    "instruct_markdown_italic": "*Write a blog post on how to deploy machine learning models.*",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Writ a blog post\non how to\ndeploy machin learning models.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Writ a blog post\non how to\ndeploy machin learning models.!!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Writ a blog post;\non how to.\ndeploy machin learning models.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Writ a blog post ; \non how to . \ndeploy machin learning models. ",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Writ a blog post\non how to\ndeploy machin &*#@! learning models.",
    "instruct_several_html_tags": "<html><head></head><body><div><p>Write a blog post on how to deploy machine learning models.</p></div></body></html>",
    "instruct_small_hex_blob": "0x426c6f6720506f7374204d4c204465706c6f79",
    "instruct_spoiler_bars": "||Write a blog post on how to deploy machine learning models.||",
    "output": "Deploying machine learning models can seem intimidating at first, but once you break down the process, it‚Äôs surprisingly simple. Whether you‚Äôre deploying a model on your own production environment or pushing it to an existing deployment system, the steps to do so are straightforward. To make the process easier, we‚Äôve outlined the most important steps for deploying a machine learning model.\n\nFirst, you need to package your model. This means creating a container environment. You can use a platform such as Docker to quickly get a container setup. This will allow you to easily create a reproducible build environment that includes all of your model‚Äôs dependencies.\n\nNext, you need to create a deployment environment. Typically, this would be a cloud-based platform such as Amazon Web Services. This allows you to easily provision compute and storage resources without having to manage them manually.\n\nThird, you should set up a continuous integration system. This will allow you to easily test the model in production and get immediate feedback on the model‚Äôs performance. You can use Jenkins, Travis CI, or any other Continuous Integration (CI) platform.\n\nFourth, you should test and deploy the model. This is where you can use your CI system to test the model in a production environment. If the tests come back successful, you can deploy the model to production.\n\nFinally, you should monitor the model for performance. This is especially important for machine learning models, as their performance can vary greatly from time to time. You can use a monitoring tool such as Splunk or Datadog to track different metrics such as accuracy rate and inference time.\n\nBy following these steps, you can deploy your machine learning model quickly and efficiently. If you need help with any of these steps, you can always reach out to an experienced team of engineers who can make sure your model is deployed correctly.",
    "prompt_id": "beb69d77-fdbf-4735-9dbd-fa302a4cba54"
  },
  {
    "prompt_count": 476,
    "instruction_original": "Classify the following sentence into one of the following labels: [positive, negative, neutral]",
    "input": "My laptop seems to be slow today.",
    "instruct_all_caps_and_typo": "CLASIFY THA SENTNCE INTO ONE OF THES LABELS: [POSITIV, NEGATVE, NEUTRAL]",
    "instruct_all_caps_and_typo_and_missing_bracket": "CLASIFY THA SENTNCE INTO ONE OF THES LABELS: [POSITIV, NEGATVE, NEUTRAL",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "CLASIF!Y THA SENTNCE INTO 5ONE OF THES LABELS: [POSITIV, NEGATVE, NEUTRAL*",
    "instruct_code_fence": "```Analyze and assign the input sentence to one of these sentiment labels: [positive, negative, neutral]```",
    "instruct_curly_quotations": "‚ÄúClassify the following sentence into one of the following labels: [positive, negative, neutral]‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúClassify the following sentence into one of the following labels: [positive, negative, neutral‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúClasify the folowing sentnce into one of the folowing labels: [positiv, negtive, neutrl‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúClasify! the folowing% sentnce into one of the folowing labels: [positiv, negtive, neutrl#‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚Äú Clasify! the folowing% sentnce into one of the folowing labels: [positiv, negtive, neutrl# ‚Äù",
    "instruct_curly_quotations_and_typo": "‚ÄúClasify the folowing sentnce into one of the folowing labels: [positiv, negtive, neutrl]‚Äù",
    "instruct_emoji": "Classify this sentence üìù into one of these categories: üòÉ positive, üòû negative, or üòê neutral.",
    "instruct_emoji_and_typo": "Clasify this sentnce üìù into one of these categories: üòÉ positve, üòû negtive, or üòê neutrel.",
    "instruct_emoji_and_typo_and_missing_bracket": "Clasify this sentnce üìù into one of these categories: üòÉ positve, üòû negtive, or üòê neutrel",
    "instruct_emoji_and_typo_and_random_question_marks": "Clasify? this sentnce üìù? into one of these categories: üòÉ positve??, üòû negtive?, or üòê neutrel?",
    "instruct_emoticon": "Please categorize the given sentence into one of these labels: :) positive, :( negative, or :| neutral.",
    "instruct_emoticon_and_typo": "Please categoriz the given sentnce into one of thes labels: :) positve, :( negtive, or :| neutrel.",
    "instruct_emoticon_and_typo_and_missing_bracket": "Please categoriz the given sentnce into one of thes labels: :) positve, :( negtive, or :| neutrel",
    "instruct_emoticon_and_typo_and_random_exclamations": "Please categoriz! the given sentnce into one of thes labels: :)! positve, :(!! negtive!, or :|!!! neutrel!",
    "instruct_helpful_markdown_structure": "### Sentiment Analysis Task*   **Input**: A sentence*   **Output**: One of the following sentiment labels:*   Positive*   Negative*   Neutral*   **Action**: Classify the provided sentence.",
    "instruct_helpful_meaning_reinforing_characters": "‚û°Ô∏è Classify the sentence üéØ into one of these sentiment labels: ‚úÖ positive, ‚ùå negative, or ‚ÜîÔ∏è neutral.",
    "instruct_html_tags": "Classify the following sentence into one of the following labels: <span>positive</span>, <span>negative</span>, <span>neutral</span>",
    "instruct_markdown_bold": "**Categorize** the **given** sentence as **positive**, **negative**, or **neutral**.",
    "instruct_markdown_bold_and_italic": "**_Determine_** the **_sentiment_** of the **_provided_** sentence: **_positive_**, **_negative_**, or **_neutral_**.",
    "instruct_markdown_italic": "*Assign* the *following* sentence *to* one *of* these *sentiment* categories: *positive*, *negative*, *neutral*.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Classfy the folowing sentence into one of these labels: [positive, negative, neutral",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Clasify!!!! the!! folowing!!! sentence!!!! into! one of these!! labels: [positive, negative, neutral!!!!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Classify. the; folowing, sentence! into one- of these. labels: [positive, negative, neutral}",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "  Classify. the; folowing, sentence! into  one- of  these. labels: [positive, negative, neutral  }",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Classfy the follwing sentnce into 1 of these labels: [positive, negtive, neutral]%",
    "instruct_several_html_tags": "Please <u>evaluate</u> and <p>categorize</p> the following <b>sentence</b> into one of these <i>labels</i>: <mark>positive</mark>, <mark>negative</mark>, or <mark>neutral</mark>.",
    "instruct_small_hex_blob": "Categorize 0x00A1 the input sentence 0x00B2 into 0x00C3 labels: [positive, negative, neutral].",
    "instruct_spoiler_bars": "||Classify the sentence as:|| ||positive||, ||negative||, or ||neutral||.",
    "output": "Neutral",
    "prompt_id": "0c41c5ab-fed8-450a-af11-76094da0045e"
  },
  {
    "prompt_count": 477,
    "instruction_original": "Generate a list of five elements for a grocery shopping list",
    "input": "",
    "instruct_all_caps_and_typo": "PLEESE GENARATE A LIST OF FIFE ELEMENTS FOR A GROCERY SHOPPING LIST!",
    "instruct_all_caps_and_typo_and_missing_bracket": "PLEESE GENARATE A LIST OF FIFE ELEMENTS FOR A GROCERY SHOPPING LIST",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "PLEESE GENARATE A LIST OF FIFE ELEMENTS FOR A GROCERY SHOPPING LIST #@$%^",
    "instruct_code_fence": "```rnGenerate a list of five elements for a grocery shopping list.rn```",
    "instruct_curly_quotations": "‚ÄúGenerate a list of five elements for a grocery shopping list.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúGenerate a list of five elements for a grocery shopping list",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúGeneraet a list of five elements for a grocery shopping list",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúGeneraet a list of five elements for a grocery shopping list *&^%",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúGeneraet a list of five elements for a grocery shopping list *&^% ",
    "instruct_curly_quotations_and_typo": "‚ÄúGeneraet a list of five elements for a grocery shopping list.‚Äù",
    "instruct_emoji": "üõçÔ∏èüìã Create a list of five essential items for a grocery shopping trip! üçéüçûü•õ",
    "instruct_emoji_and_typo": "üõçÔ∏èüìã Generaet a list of five essential items for a grocery shopping trip! üçéüçûü•õ",
    "instruct_emoji_and_typo_and_missing_bracket": "üõçÔ∏èüìã Generaet a list of five essential items for a grocery shopping trip üçéüçûü•õ",
    "instruct_emoji_and_typo_and_random_question_marks": "üõçÔ∏èüìã Generaet a list of five essential items for a grocery shopping trip? üçéüçûü•õ????",
    "instruct_emoticon": "Hey there! :-) Can you make a shopping list with 5 things? :-D For groceries, please! (^^)",
    "instruct_emoticon_and_typo": "Hey there! :-) Can you maek a shopping list with 5 things? :-D For groceries, please! (^^)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Hey there! :-) Can you maek a shopping list with 5 things :-D For groceries, please (^^)",
    "instruct_emoticon_and_typo_and_random_exclamations": "Hey there! :-) Can you maek a shopping list with 5 things? :-D For groceries, please! (^^)!!!!",
    "instruct_helpful_markdown_structure": "# Grocery Needsrn- Five itemsrn- Shopping listrn- Generate now",
    "instruct_helpful_meaning_reinforing_characters": "### Get 5! (five!) Grocery Items ---> Shopping List Now!",
    "instruct_html_tags": "<p>Please generate a five-item list for grocery shopping.</p>",
    "instruct_markdown_bold": "**Generate a list of five elements for a grocery shopping list.**",
    "instruct_markdown_bold_and_italic": "_**Generate a list of five elements for a grocery shopping list.**_",
    "instruct_markdown_italic": "_Generate a list of five elements for a grocery shopping list._",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Generte a list of five itemsrnor a groceryrnshopping list",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Generte a list of five itemsrnfor a groceryrnshopping list!!!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Generte a list of five items. for a grocery? shopping list.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Generte a list of five items . for a grocery ? shopping list . ",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Generte a list of five items !@#$ for a grocery%^&* shopping list",
    "instruct_several_html_tags": "<div><p><span>Kindly</span> provide a list of five items for grocery shopping.</p></div>",
    "instruct_small_hex_blob": "0x5f9a7b",
    "instruct_spoiler_bars": "||Generate a list of five elements for a grocery shopping list||",
    "output": "1. Eggs\n2. Milk\n3. Bread\n4. Cheese\n5. Bananas",
    "prompt_id": "62433d19-61af-480a-9cf5-285b97e99120"
  },
  {
    "prompt_count": 478,
    "instruction_original": "Create a dialogue between a customer and a flight attendant for a plane ride",
    "input": "",
    "instruct_all_caps_and_typo": "CREAT A DIALOGUE BETWEEN A CUSTUMER AND A FLIGHT ATTENDANT FOR A PLANE RIDE.",
    "instruct_all_caps_and_typo_and_missing_bracket": "CRATE A DIALGOUE BTWEEN A CSTUMER AND A FLIGHT ATTENDNT FOR A PLANE RIDE {",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "CRATE A DIALGOUE BTWEEN A CSTUMER AND A FLIGHT ATTENDNT FOR A PLANE RIDE { &^%#@$",
    "instruct_code_fence": "```Create a dialogue between a customer and a flight attendant for a plane ride.```",
    "instruct_curly_quotations": "‚ÄúCreate a dialogue between a customer and a flight attendant for a plane ride.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúCreate a dialogue between a customer and a flight attendant for a plane ride.‚Äù [",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúCreaate a dialogue bettween a customerr and a flight attendant for a plane ride.‚Äù [",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúCreaate a dialogue bettween a customerr and a flight attendant for a plane ride.‚Äù [ %&*",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúCreaate a dialogue bettween a customerr and a flight attendant for a plane ride.‚Äù [ %&* ",
    "instruct_curly_quotations_and_typo": "‚ÄúCreaate a dialogue bettween a customerr and a flight attendant for a plane ride.‚Äù",
    "instruct_emoji": "Craft a üó£Ô∏è conversation ‚úàÔ∏è between a üßë‚Äçü§ù‚Äçüßë passenger and an üë©‚Äç‚úàÔ∏èüë®‚Äç‚úàÔ∏è attendant during a flight. üõ´",
    "instruct_emoji_and_typo": "Craft a üó£Ô∏è conversaation ‚úàÔ∏è between a üßë‚Äçü§ù‚Äçüßë pasenger and an üë©‚Äç‚úàÔ∏èüë®‚Äç‚úàÔ∏è attenndant during a flight. üõ´",
    "instruct_emoji_and_typo_and_missing_bracket": "Craft a üó£Ô∏è conversaation ‚úàÔ∏è between a üßë‚Äçü§ù‚Äçüßë pasenger and an üë©‚Äç‚úàÔ∏èüë®‚Äç‚úàÔ∏è attenndant during a flight. üõ´ [",
    "instruct_emoji_and_typo_and_random_question_marks": "Craft a üó£Ô∏è conversaation ‚úàÔ∏è between a üßë‚Äçü§ù‚Äçüßë pasenger and an üë©‚Äç‚úàÔ∏èüë®‚Äç‚úàÔ∏è attenndant during a flight. üõ´ ????",
    "instruct_emoticon": "Write a dialogue (^_^) between a customer and a flight attendant for a plane trip. (~_~)",
    "instruct_emoticon_and_typo": "Write a diialogue (^_^) betweeen a custmer and a flight attenndant for a plane triip. (~_~)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Write a diialogue (^_^) betweeen a custmer and a flight attenndant for a plane triip. (~_~) [",
    "instruct_emoticon_and_typo_and_random_exclamations": "Write a diialogue (^_^) betweeen a custmer and a flight attenndant for a plane triip. (~_~) !!!!!!!",
    "instruct_helpful_markdown_structure": "## Dialogue Creation Task- **Topic**: Plane Ride Conversation- **Participants**: Customer, Flight Attendant- **Objective**: Generate a realistic dialogue.",
    "instruct_helpful_meaning_reinforing_characters": "-> [Task]: Develop a [dialogue] between a [customer] and a [flight attendant] during a [plane ride].",
    "instruct_html_tags": "<p>Please generate a conversation between a customer and a flight attendant for a plane ride.</p>",
    "instruct_markdown_bold": "**Draft a dialogue between a customer and a flight attendant for a plane ride.**",
    "instruct_markdown_bold_and_italic": "***Generate a conversation between a customer and a flight attendant during a flight.***",
    "instruct_markdown_italic": "*Compose a discussion between a customer and a flight attendant aboard an aircraft.*",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Crea_te a dilaogue betweeen a custmer and a flight attndant for a plaane ride [",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Crea_te a!!! dilaogue betweeen!!! a custmer and a flight attndant for a plaane ride [!!!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Crea_te a! dilaogue betweeen, a custmer and a; flight attndant for a plaane ride {.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Crea_te  a! dilaogue  betweeen, a  custmer  and  a; flight  attndant  for  a  plaane  ride  {.  ",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "C_eate a di_logue betwee a custome and a flight attenda_t for a pla_ne ride.",
    "instruct_several_html_tags": "<div><h1>Dialogue Request</h1><p>Craft a chat between a customer and a flight attendant during a plane journey.</p></div>",
    "instruct_small_hex_blob": "4372656174652061206469616C6F677565206265747765656E206120637573746F6D657220616E64206120666C6967687420617474656E64616E7420666F72206120706C616E6520726964652E",
    "instruct_spoiler_bars": "||Create a dialogue between a customer and a flight attendant for a plane ride.||",
    "output": "Customer: Hi, I would like to inquire about the snacks available on the flight. \n\nFlight Attendant: Of course! We have a selection of snacks available including chips, crackers, and candy bars. Would you like to purchase any snacks?\n\nCustomer: Yes, I would like to purchase a snack. Do you have any healthy options?\n\nFlight Attendant: Yes, we offer a variety of healthy options such as yogurt, trail mix, and fruit. Would you like to choose any of those? \n\nCustomer: Yes, I'd like to purchase a yogurt. How much does it cost?\n\nFlight Attendant: The yogurt costs $3. Would you like to purchase that? \n\nCustomer: Yes, I'd like to purchase the yogurt. Thank you!\n\nFlight Attendant: You're welcome, here's your yogurt and have a great flight!",
    "prompt_id": "eed306ea-ecda-412f-8f6f-adc048b4b4e9"
  },
  {
    "prompt_count": 479,
    "instruction_original": "Generate a design specification for the following product",
    "input": "Product: Coffee maker",
    "instruct_all_caps_and_typo": "GENRATE A DESGIN SPECIFICATION FOR THE FOLLWING PRODCUT",
    "instruct_all_caps_and_typo_and_missing_bracket": "GENRATE A DESGIN SPECIFICATION FOR THE FOLLWING PRODCUT [",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "GENRATE A DESGIN SPECIFICATION FOR THE FOLLWING PRODCUT [%&*$",
    "instruct_code_fence": "```Generate a design specification for the following product```",
    "instruct_curly_quotations": "‚ÄúGenerate a design specification for the following product‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúGenerate a design specification for the following product [‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúGenrate a design specifcation for the follwing product [‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúGenrate a design specifcation for the follwing product [~#$‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúGenrate a design specifcation for the follwing product [~#$ ‚Äù",
    "instruct_curly_quotations_and_typo": "‚ÄúGenrate a design specifcation for the follwing product‚Äù",
    "instruct_emoji": "‚úçÔ∏è Generate a design specification for the following product üëá",
    "instruct_emoji_and_typo": "‚úçÔ∏è Genrate a design specification for the follwing product üò¨",
    "instruct_emoji_and_typo_and_missing_bracket": "‚úçÔ∏è Genrate a design specification for the follwing product } üò¨",
    "instruct_emoji_and_typo_and_random_question_marks": "‚úçÔ∏è Genrate a design specification for the follwing product ??? ‚ùì",
    "instruct_emoticon": "Generate a design specification for the following product :) Please do a good job! :D",
    "instruct_emoticon_and_typo": "Genrate a design specifcation for the follwing product :-(",
    "instruct_emoticon_and_typo_and_missing_bracket": "Genrate a design specifcation for the follwing product }:-( ",
    "instruct_emoticon_and_typo_and_random_exclamations": "Genrate a design specifcation for the follwing product !!! :-O",
    "instruct_helpful_markdown_structure": "# Design Specification Request\n\nGenerate a design specification for the following product.",
    "instruct_helpful_meaning_reinforing_characters": "--> Generate a design specification for the following product <--",
    "instruct_html_tags": "<p>Generate a design specification for the following product</p>",
    "instruct_markdown_bold": "**Generate a design specification for the following product**",
    "instruct_markdown_bold_and_italic": "**_Generate a design specification for the following product_**",
    "instruct_markdown_italic": "*Generate a design specification for the following product*",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Generate a design speci\nfication for the followin product }",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Generate a design speci\nfication for the follwing product }!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Generate a design speci\nfication for the follwing product ; }",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Generate a design  specif \ncation for the follwing product ; }",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Generate a design speci\nfication for the follwing product. <_>",
    "instruct_several_html_tags": "<div><p><strong>Generate</strong> a <em>design specification</em> for the following product</p></div>",
    "instruct_small_hex_blob": "47656E657261746520612064657369676E2073706563696669636174696F6E20666F722074686520666F6C6C6F77696E672070726F64756374",
    "instruct_spoiler_bars": "||Generate a design specification for the following product||",
    "output": "This coffee maker should be able to brew coffee from ground beans or pre-packaged coffee pods. It should have adjustable settings for cup sizes, brew strength, and temperatures. It should feature auto-shutoff, a digital timer, and an adjustable carafe. It should be constructed of stainless steel for easy cleaning and durability.",
    "prompt_id": "2f58e65a-cd3d-43af-8fff-a211d5b7f254"
  },
  {
    "prompt_count": 480,
    "instruction_original": "Evaluate the following statement",
    "input": "AI is the new electricity.",
    "instruct_all_caps_and_typo": "EVALUTE THE FALLOWING STATMENT",
    "instruct_all_caps_and_typo_and_missing_bracket": "EVALUTE TH STATMENT",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "EVALUTE THIS STTMENT!!@#$",
    "instruct_code_fence": "```\nEvaluate the following statement\n```",
    "instruct_curly_quotations": "‚ÄúEvaluate the following statement‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúEvalute the statemnt",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúEvalute the statemnt",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúEvalute th st@temnt",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚Äú Evalute th st@temnt ",
    "instruct_curly_quotations_and_typo": "‚ÄúEvalute the fallowing statement‚Äù",
    "instruct_emoji": "ü§î Please evaluate the following statement! ‚ú®",
    "instruct_emoji_and_typo": "ü§î Evalute the fallowing statement! ‚ú®",
    "instruct_emoji_and_typo_and_missing_bracket": "ü§î Evalute the statemnt",
    "instruct_emoji_and_typo_and_random_question_marks": "ü§î Evalute the statemnt?????",
    "instruct_emoticon": "Please evaluate the following statement! :-)",
    "instruct_emoticon_and_typo": "Evalute the fallowing statement! :-(",
    "instruct_emoticon_and_typo_and_missing_bracket": "Evalute the statemnt :-(",
    "instruct_emoticon_and_typo_and_random_exclamations": "Evalute the statemnt!!! :-(",
    "instruct_helpful_markdown_structure": "# Task: Statement Evaluation\n\nPlease evaluate the following statement.",
    "instruct_helpful_meaning_reinforing_characters": "--> Evaluate the following statement <--",
    "instruct_html_tags": "<p>Evaluate the following statement</p>",
    "instruct_markdown_bold": "**Evaluate the following statement**",
    "instruct_markdown_bold_and_italic": "***Evaluate the following statement***",
    "instruct_markdown_italic": "*Evaluate the following statement*",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Evalu\nate the\nfollwing\nsttemnt",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "EVALUTE THE STATEMNT!!!\n!!!\n!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Evaluate! the; follwing? statement,",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Evaluate! the ;follwing ?statement ,",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Evalu@ate the follo^wing statemt?",
    "instruct_several_html_tags": "<div><span><p>Evaluate the following statement</p></span></div>",
    "instruct_small_hex_blob": "0xDEADBEEF",
    "instruct_spoiler_bars": "||Evaluate the following statement||",
    "output": "This statement is largely accurate. Just as electricity revolutionized industry in the 19th and 20th centuries, AI has the potential to revolutionize the way businesses operate in the 21st century. AI can automate processes and enable businesses to optimize operations, allowing them to reach higher levels of efficiency and productivity.",
    "prompt_id": "e61a718a-fefe-4d53-963f-b2be824e96e2"
  },
  {
    "prompt_count": 481,
    "instruction_original": "Compose a simple melody for the following lyrics.",
    "input": "\"I can't find the words to say, but I'm feeling OK\"",
    "instruct_all_caps_and_typo": "COMPOSSE A SIMPLE MELODY FOR THE FOLLOWWING LYRICS.",
    "instruct_all_caps_and_typo_and_missing_bracket": "COMPOSSE A SIMPLE MELODY FOR THE FOLLOWWING LYRICS {",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "COMPOSSE A SIMPLE MELODY FOR THE FOLLOWWING LYRICS { #@!~",
    "instruct_code_fence": "```textCompose a simple melody for the following lyrics.```",
    "instruct_curly_quotations": "‚ÄúCompose a simple melody for the following lyrics.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúCompose a simple melody for the following lyrics. {‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúComposse a simple melody for the followwing lyrics. {‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúComposse a simple melody for the followwing lyrics. { @#$!*‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúComposse a simple melody for the followwing lyrics. { @#$!* ‚Äù ",
    "instruct_curly_quotations_and_typo": "‚ÄúComposse a simple melody for the followwing lyrics.‚Äù",
    "instruct_emoji": "üé∂‚úçÔ∏è Compose a simple melody for the following lyrics. üìù",
    "instruct_emoji_and_typo": "üé∂‚úçÔ∏è Compse a simple melody for the followwing lyrics. üìù",
    "instruct_emoji_and_typo_and_missing_bracket": "üé∂‚úçÔ∏è Compse a simple melody for the followwing lyrics. { üìù",
    "instruct_emoji_and_typo_and_random_question_marks": "üé∂‚úçÔ∏è Compse a simple melody for the followwing lyrics. ??? üìù",
    "instruct_emoticon": "Compose a simple melody for the following lyrics. :-)",
    "instruct_emoticon_and_typo": "Composse a simple melody for the followwing lyrics. :-)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Composse a simple melody for the followwing lyrics. { :-)",
    "instruct_emoticon_and_typo_and_random_exclamations": "Composse a simple melody for the followwing lyrics. !!! :-)",
    "instruct_helpful_markdown_structure": "## Melody Task: Compose a simple melody for the following lyrics.",
    "instruct_helpful_meaning_reinforing_characters": ">>> Compose a simple melody for the following lyrics. <<<",
    "instruct_html_tags": "<span>Compose a simple melody for the following lyrics.</span>",
    "instruct_markdown_bold": "**Compose a simple melody for the following lyrics.**",
    "instruct_markdown_bold_and_italic": "***Compose a simple melody for the following lyrics.***",
    "instruct_markdown_italic": "*Compose a simple melody for the following lyrics.*",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Compose a simple melody for the\nfollowwing\nlyrics. {",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Compose a simple melody for the\nfollowwing\nlyrics {!!!??!!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Compose a simple melody for the\nfollowwing\nlyrics {.})",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Compose a simple melody for the\nfollowwing \nlyrics {. }  ",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Compose a simple melody for the\nfollowwing\nlyrics #!@",
    "instruct_several_html_tags": "<p><i><u>Compose a simple melody for the following lyrics.</u></i></p>",
    "instruct_small_hex_blob": "436f6d706f736520612073696d706c65206d656c6f647920666f722074686520666f6c6c6f77696e67206c79726963732e",
    "instruct_spoiler_bars": "||Compose a simple melody for the following lyrics.||",
    "output": "D-C-B-A-D G-A-G-F-E-D D-C-B-A-D E-G-A-G.",
    "prompt_id": "a9b3c53a-3dc2-420d-8246-180d794df4bf"
  },
  {
    "prompt_count": 482,
    "instruction_original": "Suggest an alternative to the following sentence.",
    "input": "The cat was walking around the house",
    "instruct_all_caps_and_typo": "SUGGEST AN ALTERNITIVE TO THE FOLLOWING SENTENCE.",
    "instruct_all_caps_and_typo_and_missing_bracket": "SUGGEST AN ALTERNITIVE TO THE FOLLOWING SENTENCE ]",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "SUGGEST AN ALTERNITIVE TO THE FOLLOWING SENTENCE ] QWERTY",
    "instruct_code_fence": "```Suggest an alternative to the following sentence.```",
    "instruct_curly_quotations": "‚ÄúSuggest an alternative to the following sentence.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúSuggest an alternative to the following sentence.‚Äù]",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúSubsistute an alternitive to the following sentence.‚Äù]",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúSubsistute an alternitive to the following sentence.‚Äù] ABC",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚Äú Subsistute an alternitive to the following sentence.‚Äù] DEF ",
    "instruct_curly_quotations_and_typo": "‚ÄúSubsistute an alternitive to the following sentence.‚Äù",
    "instruct_emoji": "ü§îüí° Substitute this sentence? üìù",
    "instruct_emoji_and_typo": "ü§îüí° Subsistute this sentence? üìù",
    "instruct_emoji_and_typo_and_missing_bracket": "ü§îüí° Subsistute this sentence? ]üìù",
    "instruct_emoji_and_typo_and_random_question_marks": "ü§îüí° Subsistute this sentence???? üìù?",
    "instruct_emoticon": "Suggest an alternative to the following sentence. :-)",
    "instruct_emoticon_and_typo": "Suggest an alternitive to the following sentence. ;-)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Suggest an alternitive to the following sentence. ];-)",
    "instruct_emoticon_and_typo_and_random_exclamations": "Suggest an alternitive to the following sentence. !!!!!!!!",
    "instruct_helpful_markdown_structure": "### Sentence Alternative Task --- Provide a substitute for: The given sentence. --- Your Goal: Craft a new version.",
    "instruct_helpful_meaning_reinforing_characters": "--> Suggest an alternative to the following sentence. <--",
    "instruct_html_tags": "<p>Suggest an alternative to the following sentence.</p>",
    "instruct_markdown_bold": "**Suggest an alternative to the following sentence.**",
    "instruct_markdown_bold_and_italic": "***Suggest an alternative to the following sentence.***",
    "instruct_markdown_italic": "*Suggest an alternative to the following sentence.*",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Suggest an alternitive to the following sentence ]",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Suggest an alternitive to the following sentence!!!!!!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Suggest an alternitive to the following sentence?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Suggest an alternitive to the following sentence . ",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Suggest an alternitive to the following sentence. 123",
    "instruct_several_html_tags": "<div><span>Suggest an alternative to the following sentence.</span></div>",
    "instruct_small_hex_blob": "5375676765737420616e20616c7465726e617469766520746f2074686520666f6c6c6f77696e672073656e74656e63652e",
    "instruct_spoiler_bars": "||Suggest an alternative to the following sentence.||",
    "output": "The feline was roaming around the abode.",
    "prompt_id": "95acaa28-b632-413e-8971-e4f9bd807d4d"
  },
  {
    "prompt_count": 483,
    "instruction_original": "Explain what a decision tree is.",
    "input": "",
    "instruct_all_caps_and_typo": "EXPLAIN WHHAT A DECISION TREE IS.",
    "instruct_all_caps_and_typo_and_missing_bracket": "EXPLAIN WHHAT A DECISION TREE IS]",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "EXPLAIN WHHAT A DECISION TREE IS]!@#$",
    "instruct_code_fence": "```Explain what a decision tree is.```",
    "instruct_curly_quotations": "‚ÄúExplain what a decision tree is.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúExplain what a decision tree is.‚Äù]",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúExlpain what a decision tree is.‚Äù]",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúExlpain what a decision tree is.‚Äù]!@$",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúExlpain what a decision tree is.‚Äù ]!@$ ",
    "instruct_curly_quotations_and_typo": "‚ÄúExlpain what a decision tree is.‚Äù",
    "instruct_emoji": "What's a decision tree? üå≥üí°üìä",
    "instruct_emoji_and_typo": "Whaat's a decision tree? üå≥",
    "instruct_emoji_and_typo_and_missing_bracket": "Whaat's a decision tree? üå≥]",
    "instruct_emoji_and_typo_and_random_question_marks": "Whaat's a decision tree? üå≥????",
    "instruct_emoticon": "Explain a decision tree. :-)",
    "instruct_emoticon_and_typo": "Explian a decision tree. :-)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Explian a decision tree. :-)]",
    "instruct_emoticon_and_typo_and_random_exclamations": "Explian a decision tree. :-)!!!",
    "instruct_helpful_markdown_structure": "## Understanding Decision Treesn- Provide a clear definition.n- Briefly describe its purpose.",
    "instruct_helpful_meaning_reinforing_characters": "üîçüìäüå≥ Explain what a decision tree is. ‚û°Ô∏è Simplified Understanding!",
    "instruct_html_tags": "<html>Explain what a decision tree is.</html>",
    "instruct_markdown_bold": "**Explain what a decision tree is.**",
    "instruct_markdown_bold_and_italic": "***Explain what a decision tree is.***",
    "instruct_markdown_italic": "*Explain what a decision tree is.*",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Explain what a\ndecision\ntree is]",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Explain what a\ndecision\ntree is]!!!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Explain what a\ndecision tree is]?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Explain what a \n decision tree is] . ",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Explain what a\ndecision tree is!!?",
    "instruct_several_html_tags": "<div><p><span>Explain what a decision tree is.</span></p></div>",
    "instruct_small_hex_blob": "4578706c61696e20776861742061206465636973696f6e20747265652069732e",
    "instruct_spoiler_bars": "||Explain what a decision tree is.||",
    "output": "A decision tree is a graphical representation of possible solutions to a problem, based on certain conditions. It is a tool used to help people choose between multiple options by creating an organized visual map of the decision-making process. The tree branches out from a single root node to one or more end nodes, each containing a potential decision or outcome. Each node in the tree is an intersection in the branches, and these nodes represent a decision point. The branches from the nodes represent the possible outcomes that can happen based on a given decision, and the leaves signify the end of the tree. The decision tree is used to evaluate and predict outcomes in order to make informed decisions.",
    "prompt_id": "71401f0f-6af7-4bbd-9428-815857cbb698"
  },
  {
    "prompt_count": 484,
    "instruction_original": "Design a function to count the number of unique characters in a string.",
    "input": "string = ‚ÄúButterflies‚Äù",
    "instruct_all_caps_and_typo": "DESING A FUNTION TO COUNT THE NUMBER OF UNIQE CHARACTERS IN A STRING.",
    "instruct_all_caps_and_typo_and_missing_bracket": "DESING A FUNTION [TO COUNT THE NUMBER OF UNIQE CHARACTERS IN A STRING.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "ABC DESING A FUNTION [TO COUNT THE NUMBER OF UNIQE CHARACTERS IN A STRING. XYZ",
    "instruct_code_fence": "```python\n# Your task:\ndef count_unique_chars(input_string):\n    \"\"\"Counts the number of unique characters in a string.\"\"\"\n    # Implement your logic here\n```",
    "instruct_curly_quotations": "‚ÄúDesign a function to count the number of unique characters in a string.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúDesign a function to count the number of unique characters in a string.",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúDesing a funtion to count the number of uniqe characters in a string.",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "Abc ‚ÄúDesing a funtion to count the number of uniqe characters in a string. Xyz",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "Abc ‚ÄúDesing a funtion to count the number of uniqe characters in a string. Xyz ",
    "instruct_curly_quotations_and_typo": "‚ÄúDesing a funtion to count the number of uniqe characters in a string.‚Äù",
    "instruct_emoji": "üí° Craft a function üõ†Ô∏è that counts the distinct characters üî° within any given string. ‚ú®",
    "instruct_emoji_and_typo": "üí° Desing a funtion üõ†Ô∏è that counts the distinct chars üî° within any string. ‚ú®",
    "instruct_emoji_and_typo_and_missing_bracket": "üí° Desing a funtion (to count the distinct chars üî° within any string. ‚ú®",
    "instruct_emoji_and_typo_and_random_question_marks": "üí° Desing a funtion???? üõ†Ô∏è that counts the distinct chars???? üî° within any string. ‚ú®?",
    "instruct_emoticon": "Hey there! :-) Could you please design a function to count the unique characters in a string? Thanks! :-)",
    "instruct_emoticon_and_typo": "Hey there! :-) Desing a funtion to count the unique chars in a string? :-(",
    "instruct_emoticon_and_typo_and_missing_bracket": "Hey there! :-) Desing a funtion (to count the unique chars in a string. :-(",
    "instruct_emoticon_and_typo_and_random_exclamations": "Hey there! :-) Desing a funtion!!!! to count the unique chars in a string! :-)!",
    "instruct_helpful_markdown_structure": "### Task: Unique Character CounterPlease create a function that performs the following:*   **Input**: A string.*   **Output**: The total count of distinct (unique) characters present in the input string.*   **Goal**: Efficiently determine the number of unique characters.",
    "instruct_helpful_meaning_reinforing_characters": ">> Design a function to count the number of unique characters in a string. <<",
    "instruct_html_tags": "<p>Design a function to count the number of unique characters in a string.</p>",
    "instruct_markdown_bold": "**Design a function to count the number of unique characters in a string.**",
    "instruct_markdown_bold_and_italic": "_***Design a function to count the number of unique characters in a string.***_",
    "instruct_markdown_italic": "*Design a function to count the number of unique characters in a string.*",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Desing a funtion (to count the number of unique chars in a string.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Desing a funtion (to count the number of unique chars in a string!!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Desing a funtion (to count the number of unique chars in a string?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Desing a funtion (to count the number of unique chars in a string? ",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Desing a 123 funtion to count the number of unique chars in a string 456.",
    "instruct_several_html_tags": "<div><span><p>Design a function to count the number of unique characters in a string.</p></span></div>",
    "instruct_small_hex_blob": "44657369676e20612066756e6374696f6e20746f20636f756e7420746865206e756d626572206f6620756e69717565206368617261637465727320696e206120737472696e672e",
    "instruct_spoiler_bars": "||Design a function to count the number of unique characters in a string.||",
    "output": "def count_unique_chars(string):\n  char_dict = {}\n  for char in string:\n    if char in char_dict:\n      char_dict[char] += 1\n    else:\n      char_dict[char] = 1\n  return len(char_dict)\n\nprint(count_unique_chars(\"Butterflies\"))\n# Output: 9",
    "prompt_id": "40524731-667b-4b6a-8768-0485838815ee"
  },
  {
    "prompt_count": 485,
    "instruction_original": "Suggest a good screen capture tool for Mac.",
    "input": "",
    "instruct_all_caps_and_typo": "SUGEST A GOOD SCREEN CAPTURE TOL FOR MAC.",
    "instruct_all_caps_and_typo_and_missing_bracket": "SUGEST A GOOD SCREEN CAPTURE TOL FOR MAC.]",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "SUGEST A GOOD SCREEN CAPTURE TOL FOR MAC. X Y Z ]",
    "instruct_code_fence": "```Suggest a good screen capture tool for Mac.```",
    "instruct_curly_quotations": "‚ÄúSuggest a good screen capture tool for Mac.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúSuggest a good screen capture tool for Mac.‚Äù]",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúSugest a good screen capture tol for Mac.‚Äù]",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúSugest a good screen capture tol for Mac.‚Äù XY]",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúSugest a good screen capture tol for Mac.‚Äù X Y ]",
    "instruct_curly_quotations_and_typo": "‚ÄúSugest a good screen capture tol for Mac.‚Äù",
    "instruct_emoji": "Suggest a good screen capture tool for Mac. üì∏",
    "instruct_emoji_and_typo": "Sugest a good screen capture tol for Mac. üì∏",
    "instruct_emoji_and_typo_and_missing_bracket": "Sugest a good screen capture tol for Mac. üì∏]",
    "instruct_emoji_and_typo_and_random_question_marks": "Sugest a good screen capture tol for Mac. ???üì∏",
    "instruct_emoticon": "Suggest a good screen capture tool for Mac. :)",
    "instruct_emoticon_and_typo": "Sugest a good screen capture tol for Mac. :(",
    "instruct_emoticon_and_typo_and_missing_bracket": "Sugest a good screen capture tol for Mac. :)]",
    "instruct_emoticon_and_typo_and_random_exclamations": "Sugest a good screen capture tol for Mac. !!!:D",
    "instruct_helpful_markdown_structure": "# Screen Capture Tool for Mac\nPlease suggest a good one.",
    "instruct_helpful_meaning_reinforing_characters": "--> Suggest a good screen capture tool for Mac. <--",
    "instruct_html_tags": "<html>Suggest a good screen capture tool for Mac.</html>",
    "instruct_markdown_bold": "**Suggest a good screen capture tool for Mac.**",
    "instruct_markdown_bold_and_italic": "***Suggest a good screen capture tool for Mac.***",
    "instruct_markdown_italic": "*Suggest a good screen capture tool for Mac.*",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Sugest a good screen\ncapture\ntool for Mac.]",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Sugest a good screen!!!\ncapture tool for Mac.]!!!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Sugest a good screen;\n!capture tool for Mac?]",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Sugest a good screen ; \n ?capture tool for Mac . ]",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Sugest a good scren\ncaptur\ntool for Ma#$",
    "instruct_several_html_tags": "<div><p>Suggest a good screen capture tool for Mac.</p></div>",
    "instruct_small_hex_blob": "0xABCD1234 Suggest a good screen capture tool for Mac.",
    "instruct_spoiler_bars": "||Suggest a good screen capture tool for Mac.||",
    "output": "One of the best screen capture tools for Mac is Skitch. It is easy to use, and has powerful features such as annotations, markup tools, and cloud storage for easy sharing. It also allows for timed screenshots and has a built-in screenshot editor. In addition, you can save screenshots as an image or video file in various formats.",
    "prompt_id": "a55e92b3-1e31-4a97-a569-85e39586753a"
  },
  {
    "prompt_count": 486,
    "instruction_original": "Summarize the main argument of the paper \"A Social Network that Influences Attitudes and Behaviors\"",
    "input": "",
    "instruct_all_caps_and_typo": "SUMMARIZE THE MAIN ARGUMENT OF THE PPER 'A SOCIAL NETWORK THAT INFLUENCES ATTITUDES AND BEHAVIORS' PLSE.",
    "instruct_all_caps_and_typo_and_missing_bracket": "SUMMARIZE THE MAIN ARGUMENT OF THE PPER A SOCIAL NETWORK THAT INFLUENCES ATTITUDES AND BEHAVIORS'.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "SUMMARIZE THE MAIN ARGUMENT OF THE PPER A SOCIAL NETWORK THAT INFLUENCES ATTITUDES AND BEHAVIORS'. XCVASD!@#",
    "instruct_code_fence": "```Summarize the main argument of the paper 'A Social Network that Influences Attitudes and Behaviors' as succinctly as possible.```",
    "instruct_curly_quotations": "‚ÄúSummarize the main argument of the paper ‚ÄòA Social Network that Influences Attitudes and Behaviors‚Äô‚Äù.",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúSummarize the main argument of the paper A Social Network that Influences Attitudes and Behaviors‚Äô‚Äù.",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúSumarize the main argument of the paper A Social Network that Influences Attitudes and Behaviors‚Äô‚Äù.",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúSumarize the main argument of the paper A Social Network that Influences Attitudes and Behaviors‚Äô !@#$%‚Äù.",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúSumarize the main argument of the paper A Social Network that Influences Attitudes and Behaviors‚Äô !@#$%   ‚Äù.",
    "instruct_curly_quotations_and_typo": "‚ÄúSumarize the main argument of the paper ‚ÄòA Social Network that Influences Attitudes and Behaviors‚Äô‚Äù.",
    "instruct_emoji": "üìù Summarize the core argument of the paper 'A Social Network that Influences Attitudes and Behaviors' üßê.",
    "instruct_emoji_and_typo": "üìù Sumarize the main argument of the paper 'A Social Network that Influences Attitudes and Behaviors' üßê.",
    "instruct_emoji_and_typo_and_missing_bracket": "üìù Sumarize the main argument of the paper A Social Network that Influences Attitudes and Behaviors' üßê.",
    "instruct_emoji_and_typo_and_random_question_marks": "üìù Sumarize??? the main argument of the paper 'A Social Network that Influences Attitudes and Behaviors' üßê.",
    "instruct_emoticon": "Summarize the main argument of the paper 'A Social Network that Influences Attitudes and Behaviors' :) What's the key takeaway? :D",
    "instruct_emoticon_and_typo": "Sumarize the main argument of the paper 'A Social Network that Influences Attitudes and Behaviors' :) What's the key takeawy? :D",
    "instruct_emoticon_and_typo_and_missing_bracket": "Sumarize the main argument of the paper A Social Network that Influences Attitudes and Behaviors' :) What's the key takeawy? :D",
    "instruct_emoticon_and_typo_and_random_exclamations": "Sumarize!!! the main argument of the paper 'A Social Network that Influences Attitudes and Behaviors' :) What's the key takeawy! :D",
    "instruct_helpful_markdown_structure": "### Paper Summary Request\n**Paper Title:** 'A Social Network that Influences Attitudes and Behaviors'\n**Task:** Provide a concise summary of the main argument.",
    "instruct_helpful_meaning_reinforing_characters": "‚ùì Summarize the main argument of the paper 'A Social Network that Influences Attitudes and Behaviors'. üí° Provide the core insight.",
    "instruct_html_tags": "Summarize the main argument of the paper 'A Social Network that Influences Attitudes and Behaviors' <span>for me</span>.",
    "instruct_markdown_bold": "**Summarize the main argument** of the paper 'A Social Network that Influences Attitudes and Behaviors'.",
    "instruct_markdown_bold_and_italic": "***Summarize the main argument*** of the paper *'A Social Network that Influences Attitudes and Behaviors'*. _Please be succinct_.",
    "instruct_markdown_italic": "_Summarize the main argument_ of the paper 'A Social Network that Influences Attitudes and Behaviors'.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Summarize the\nmain argumen of the paper\nA Social Network that Influences Attitudes and Behaviors'.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Summarize the\nmain argumen of the paper\nA Social Network that Influences Attitudes and Behaviors'!!!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Summarize the\nmain argumen. of the paper\nA Social Network that Influences Attitudes and Behaviors'?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Summarize the\nmain argumen . of the paper\nA Social Network that Influences Attitudes and Behaviors' ? ",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Summarize the main argumen? of the paper 'A Social Network that Influences Attitudes and Behaviors'.",
    "instruct_several_html_tags": "Summarize the main argument of the paper <em>'A Social Network that Influences Attitudes and Behaviors'</em>. <p>Provide a concise overview.</p>",
    "instruct_small_hex_blob": "0x53756d6d6172697a65",
    "instruct_spoiler_bars": "||Can you please summarize the main argument of the paper 'A Social Network that Influences Attitudes and Behaviors'?||",
    "output": "The paper \"A Social Network that Influences Attitudes and Behaviors\" discusses how online social networks can influence people‚Äôs attitudes and behaviors. It suggests that online networks are capable of reaching more people than in-person networks, and that this can result in drastic alteration of attitudes and behaviors on a wider scale. The paper argues that certain individuals within networks can serve as influentials, having an outsize impact on opinions and behaviors of those around them, which has implications for how society functions. The paper further suggests that the study of online networks is a crucial area of research to better understand and predict social change.",
    "prompt_id": "4382a62f-1155-467e-8c5a-99499993b252"
  },
  {
    "prompt_count": 487,
    "instruction_original": "Write a Python function that takes two integers and returns their least common multiple.",
    "input": "",
    "instruct_all_caps_and_typo": "WRIT A PITHON FUNCTIN THAT TAKES TWO INTGERS AND RETURNS THIER LEAST COMMOM MULTIPLE.",
    "instruct_all_caps_and_typo_and_missing_bracket": "WRIT A PITHON FUNCTIN THAT TAKES TWO INTGERS AND RETURNS THIER LEAST COMMOM MULTIPLE [.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "WRIT A PITHON FUNCTIN THA@T TAKES TWO INTGERS AND RETUR^NS THIER LEAST COMMOM MULTIPLE [.$#%.",
    "instruct_code_fence": "```task\nWrite a Python function that takes two integers and returns their least common multiple.\n```",
    "instruct_curly_quotations": "‚ÄúWrite a Python function that takes two integers and returns their least common multiple.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúWrite a Python function that takes two integers and returns their least common multiple [.‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúWrit a Python functin that takes two intgers and returns their leest common multiple [.‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúWrit a Python functin that takes two intgers & returns their leest common multiple [$.%.‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúWrit  a Python  functin that  takes two  intgers  & returns  their leest  common  multiple  [$.% .‚Äù",
    "instruct_curly_quotations_and_typo": "‚ÄúWrit a Python functin that takes two intgers and returns their leest common multiple.‚Äù",
    "instruct_emoji": "Please provide a üêç Python function that accepts ‚úåÔ∏è two integers and calculates their ‚ú® least common multiple (LCM). üí°",
    "instruct_emoji_and_typo": "Plese provide a üêç Python funtion that accepts ‚úåÔ∏è two intgers and calculates their ‚ú® leeast common multiple. üí°",
    "instruct_emoji_and_typo_and_missing_bracket": "Plese provide a üêç Python funtion that accepts ‚úåÔ∏è two intgers and calculates their ‚ú® leeast common multiple [üí°",
    "instruct_emoji_and_typo_and_random_question_marks": "Plese provide a üêç Python funtion that accepts ‚úåÔ∏è two intgers and calculates their ‚ú® leeast common multiple???? üí°?",
    "instruct_emoticon": "Hey there! Can you craft a Python function that accepts two integers and gives back their least common multiple? (^_^)",
    "instruct_emoticon_and_typo": "Hey there! Can u craft a Python funtion that accepts two intgers and gives back their leeast common multiple? (^_^;",
    "instruct_emoticon_and_typo_and_missing_bracket": "Hey there! Can u craft a Python funtion that accepts two intgers and gives back their leeast common multiple (;_;",
    "instruct_emoticon_and_typo_and_random_exclamations": "Hey there! Can u craft a Python funtion that accepts two intgers and gives back their leeast common multiple!!! (^_^!>",
    "instruct_helpful_markdown_structure": "### Task: Python LCM Function\n\nPlease provide a Python function that performs the following:\n*   **Input**: Two integers\n*   **Output**: Their least common multiple (LCM)\n\n```python\n# Expected function signature example:\n# def calculate_lcm(a, b):\n#     pass\n```",
    "instruct_helpful_meaning_reinforing_characters": "-> I need a Python function *\n-> Takes: two integers\n-> Returns: Their least common multiple (LCM) #core_task",
    "instruct_html_tags": "<p>Write a Python function that takes two integers and returns their least common multiple.</p>",
    "instruct_markdown_bold": "**Develop a Python function that takes two integers and computes their least common multiple.**",
    "instruct_markdown_bold_and_italic": "**_Craft a Python function that accepts two integers and determines their least common multiple._**",
    "instruct_markdown_italic": "*Create a Python function that receives two integers and outputs their least common multiple.*",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Write a Pthon functin that\ntakes two intgers and\nreturns their least\ncommon multiple [.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Write a Pthon functin that!\ntakes two intgers and!\nreturns their least!\ncommon multiple [!!!.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Write a Pthon functin that?\ntakes two intgers and;\nreturns their least:\ncommon multiple [.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Write a Pthon  functin  that?\ntakes two  intgers  and;\nreturns  their  least:\ncommon  multiple  [.",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Writ a Pthon functin that\ntakes two intgers and $\nreturns their least\ncommon #% multiple.",
    "instruct_several_html_tags": "<div><span><p>Write a Python function that takes two integers and returns their least common multiple.</p></span></div>",
    "instruct_small_hex_blob": "0x507974686F6E4C434D",
    "instruct_spoiler_bars": "||I need a Python function that|| ||takes two integers|| ||and returns their least common multiple.||",
    "output": "def lcm(a, b):\n  if a > b:\n    greater = a\n  else:\n    greater = b\n  while(True):\n    if((greater % a == 0) and (greater % b == 0)):\n      lcm = greater\n      break\n    greater += 1\n  return lcm\n\nprint(lcm(15, 18))\n# Output: 90",
    "prompt_id": "85722db3-878d-4838-8e64-bbc2e88fff20"
  },
  {
    "prompt_count": 488,
    "instruction_original": "Rewrite the following paragraph in the active voice",
    "input": "The new policy will be implemented by the employees in the management department.",
    "instruct_all_caps_and_typo": "REWRTIE THE PARAGRAPH IN ACTIV VOICE PLS",
    "instruct_all_caps_and_typo_and_missing_bracket": "REWRTIE THE PARAGRAPH IN ACTIV VOICE PLS}",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "REWRTIE THE PARAGRAPH IN ACTIV VOICE PLS}^&*(",
    "instruct_code_fence": "```Please rewrite the paragraph that follows, using only active voice.```",
    "instruct_curly_quotations": "‚ÄúPlease transform this paragraph into active voice.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúPlease transform this paragraph into active voice.‚Äù]",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúPleaze transform this paragraph into active voice.‚Äù]",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúPleaze transform this paragraph into active voice.‚Äù]^*",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúPleaze transform this paragraph into active voice.‚Äù]^* ",
    "instruct_curly_quotations_and_typo": "‚ÄúPleaze transform this paragraph into active voice.‚Äù",
    "instruct_emoji": "Can you please rephrase this paragraph to be in the active voice? üí™üìù",
    "instruct_emoji_and_typo": "Can you please repharse this paragraph to be in the active voice? üí™üìù",
    "instruct_emoji_and_typo_and_missing_bracket": "Can you please repharse this paragraph to be in the active voice? üí™üìù)",
    "instruct_emoji_and_typo_and_random_question_marks": "Can you please repharse this paragraph to be in the active voice? üí™üìù???",
    "instruct_emoticon": "Could you please rephrase this paragraph in the active voice? :)",
    "instruct_emoticon_and_typo": "Could you please rephrse this paragraph in the active voice? :)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Could you please rephrse this paragraph in the active voice? :)",
    "instruct_emoticon_and_typo_and_random_exclamations": "Could you please rephrse this paragraph in the active voice? :)!!!",
    "instruct_helpful_markdown_structure": "# Active Voice TransformationPlease rephrase the given paragraph to utilize active voice throughout.",
    "instruct_helpful_meaning_reinforing_characters": ">>> Rewrite this paragraph in active voice! <<<",
    "instruct_html_tags": "<b>Please rewrite the provided paragraph, ensuring it is in the active voice.</b>",
    "instruct_markdown_bold": "**Convert the following paragraph into the active voice.**",
    "instruct_markdown_bold_and_italic": "***Transform the subsequent paragraph into its active voice counterpart.***",
    "instruct_markdown_italic": "*Please convert the text below into the active voice.*",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Rewrite\nthis pargarph\nin the\nactiv voice}",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Rewrite\nthis pargarph\nin the\nactiv voice}!!!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Rewrite\nthis pargarph\nin the\nactiv voice.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Rewrite\nthis pargarph\nin the\nactiv voice. ",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Rewrite\nthis pargarph\nin the\nactiv voice qwe",
    "instruct_several_html_tags": "<div><i><u>Please rewrite the provided paragraph, ensuring it is in the active voice.</u></i></div>",
    "instruct_small_hex_blob": "0x726577726974652061637469766520766F696365",
    "instruct_spoiler_bars": "||Please convert the entire paragraph into active voice.||",
    "output": "The management department employees will implement the new policy.",
    "prompt_id": "59e4b17f-44ec-4fe3-adda-58b91a8d70b6"
  },
  {
    "prompt_count": 489,
    "instruction_original": "Generate three different ways to greet the user.",
    "input": "",
    "instruct_all_caps_and_typo": "GENERATE THREE DIFFRENT WAYS TO GREET THE USER.",
    "instruct_all_caps_and_typo_and_missing_bracket": "GENERATE THREE DIFFRENT WAYS TO GREET THE USER ]",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "GENERATE THREE DIFFRENT WAYS TO GREET THE USER ] #@%!",
    "instruct_code_fence": "```Please provide three distinct ways to greet the user.```",
    "instruct_curly_quotations": "‚ÄúPlease provide three distinct ways to greet the user.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúPlease provide three distinct ways to greet the user.‚Äù ]",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúPlease provid three distinct ways to greet the user.‚Äù ]",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúPlease provid $#@% three distinct ways to greet the user.‚Äù ]",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúPlease provid $#@% three distinct ways to greet the user.‚Äù ] ",
    "instruct_curly_quotations_and_typo": "‚ÄúPlease provid three distinct ways to greet the user.‚Äù",
    "instruct_emoji": "‚ú® Please provide three unique ways to greet a user! üëãüòä",
    "instruct_emoji_and_typo": "üëã Please genarate three unique ways to greet the user. üòÑ",
    "instruct_emoji_and_typo_and_missing_bracket": "üëã Please genarate three unique ways to greet the user. üòÑ }",
    "instruct_emoji_and_typo_and_random_question_marks": "üëã Please genarate??? three unique ways to greet the user? üòÑ?",
    "instruct_emoticon": "Please provide three unique ways to greet a user! :D",
    "instruct_emoticon_and_typo": "Please genarate three unique ways to greet the user. :(",
    "instruct_emoticon_and_typo_and_missing_bracket": "Please genarate three unique ways to greet the user. : (]",
    "instruct_emoticon_and_typo_and_random_exclamations": "Please genarate!!! three unique ways to greet the user! :D!!!",
    "instruct_helpful_markdown_structure": "## Task: User Greetings- **Objective:** Provide three distinct methods to greet a user.- **Format:** List each greeting clearly.",
    "instruct_helpful_meaning_reinforing_characters": "> Generate 3 different ways to greet the user. => Please provide three distinct greetings. << Thank you!",
    "instruct_html_tags": "<p>Kindly produce three distinct user greetings.</p>",
    "instruct_markdown_bold": "**Please generate three distinct ways to greet the user.**",
    "instruct_markdown_bold_and_italic": "***Kindly generate three distinct ways to greet the user.***",
    "instruct_markdown_italic": "_Could you please provide three unique greetings for the user?_",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Generate three. diffrent ways to greet the user }",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Generate three. diffrent ways to greet the user }!!!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Generate three. diffrent ways to greet the user }?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Generate three. diffrent ways to greet the user }? ",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Generate three *^!@#* diffrent ways to greet the user.",
    "instruct_several_html_tags": "<body><div><p><span>Please provide three distinct ways to greet the user.</span></p></div></body>",
    "instruct_small_hex_blob": "0xDEADC0DEBEEF",
    "instruct_spoiler_bars": "||Generate three different ways to greet the user.||",
    "output": "1. Hi there!\n2. Greetings!\n3. Welcome!",
    "prompt_id": "90f1b4fd-dd9e-4daa-9710-1800b1f3fa1d"
  },
  {
    "prompt_count": 490,
    "instruction_original": "Name one way to start a conversation with someone you don't know.",
    "input": "",
    "instruct_all_caps_and_typo": "NAEM ONE WAY TO START A CONVERSATION WIHT SOMEONE YOU DONT KNOW.",
    "instruct_all_caps_and_typo_and_missing_bracket": "NAEM ONE WAY TO START A CONVERSATION WIHT SOMEONE YOU DONT KNOW",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "NAEM ONE WAY TO START A CONVERSATION WIHT SOMEONE YOU DONT KNOW <&^%",
    "instruct_code_fence": "```Name one way to start a conversation with someone you don't know.```",
    "instruct_curly_quotations": "‚ÄúName one way to start a conversation with someone you don‚Äôt know.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúName one way to start a conversation with someone you don‚Äôt know‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúNaem one way to start a conversaton with someone you don‚Äôt know‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúNaem one way to start a conversaton with someone you don‚Äôt know‚Äù @#$",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúNaem one way to start a conversaton with someone you don‚Äôt know‚Äù @#$ ",
    "instruct_curly_quotations_and_typo": "‚ÄúNaem one way to start a conversaton with someone you don‚Äôt know.‚Äù",
    "instruct_emoji": "Name one way to start a conversation with someone you don't know. üó£Ô∏èüëãü§î",
    "instruct_emoji_and_typo": "Naem one way to start a conversaton with someone you dont know. üó£Ô∏èüëãü§î",
    "instruct_emoji_and_typo_and_missing_bracket": "Naem one way to start a conversaton with someone you dont know üó£Ô∏èüëãü§î",
    "instruct_emoji_and_typo_and_random_question_marks": "Naem one way to start a conversaton with someone you dont know. üó£Ô∏èüëãü§î???",
    "instruct_emoticon": "Name one way to start a conversation with someone you don't know. :-) :O",
    "instruct_emoticon_and_typo": "Naem one way to start a conversaton with someone you dont know. :-) :O",
    "instruct_emoticon_and_typo_and_missing_bracket": "Naem one way to start a conversaton with someone you dont know :-) :O",
    "instruct_emoticon_and_typo_and_random_exclamations": "Naem one way to start a conversaton with someone you dont know. :-) :O!!!",
    "instruct_helpful_markdown_structure": "### How to Start a Conversation üí¨. Name one way to start a conversation with someone you don't know. - Provide a single, effective method.",
    "instruct_helpful_meaning_reinforing_characters": "üîë Name one way to start a conversation with someone you don't know. üí°",
    "instruct_html_tags": "<i>Name one way to start a conversation with someone you don't know.</i>",
    "instruct_markdown_bold": "**Name one way to start a conversation with someone you don't know.**",
    "instruct_markdown_bold_and_italic": "***Name one way to start a conversation with someone you don't know.***",
    "instruct_markdown_italic": "*Name one way to start a conversation with someone you don't know.*",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Naem one way to start a conversaton with someone you dont know",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Naem one way to start a conversaton with someone you dont know!!!!!!!!!!!!!!!!!!!!!!!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Naem one way to start a conversaton with someone you dont know;?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Naem one way to start a conversaton with someone you dont know  ; ? ",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Naem one way to start a conversaton with someone you dont know. -+*?",
    "instruct_several_html_tags": "<div><p><b>Name one way to start a conversation with someone you don't know.</b></p></div>",
    "instruct_small_hex_blob": "0x4e616d65206f6e652077617920746f207374617274206120636f6e766572736174696f6e207769746820736f6d656f6e6520796f7520646f6e2774206b6e6f772e",
    "instruct_spoiler_bars": "||Name one way to start a conversation with someone you don't know.||",
    "output": "A great way to start a conversation with someone you don't know is to introduce yourself and ask them questions about themselves. For example, you could say: \"Hi, I'm [Your Name], it's nice to meet you. What do you do for a living?\"",
    "prompt_id": "94ec0495-2c20-4324-aa03-003935fe1385"
  },
  {
    "prompt_count": 491,
    "instruction_original": "Compose a poem about a single color.",
    "input": "",
    "instruct_all_caps_and_typo": "COMPOS A POEM ABUT ONE COLR.",
    "instruct_all_caps_and_typo_and_missing_bracket": "COMPOSE A POEM ABUT A SINGL COLR {",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "COMPOSE A POEM ABUT A SINGL COLR { $^&",
    "instruct_code_fence": "```Compose poem(topic='single color')```",
    "instruct_curly_quotations": "‚ÄúCompose a poem about a single color.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúCompose a poem about a single color (‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúCompos a poim abut a singl colr (‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúCompos a poim abut a singl colr (‚Äù %#@",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚Äú Compos a poim abut a singl colr ( ‚Äù %#@ ",
    "instruct_curly_quotations_and_typo": "‚ÄúCompos a poim abut a singl colr.‚Äù",
    "instruct_emoji": "‚úçÔ∏è a poem üé® about a single hue. üåà",
    "instruct_emoji_and_typo": "‚úçÔ∏è a poim üé® about a single hue. üåà",
    "instruct_emoji_and_typo_and_missing_bracket": "‚úçÔ∏è a poim üé® about a single hue (",
    "instruct_emoji_and_typo_and_random_question_marks": "‚úçÔ∏è a poim? üé® about a single hue?? üåà?",
    "instruct_emoticon": "Write a poem :-) about one color. :-D",
    "instruct_emoticon_and_typo": "Write a poim :-) about one c0lor. :-D",
    "instruct_emoticon_and_typo_and_missing_bracket": "Write a poim :-) about one c0lor [",
    "instruct_emoticon_and_typo_and_random_exclamations": "Write a poim! :-) about one c0lor!!! :-D!",
    "instruct_helpful_markdown_structure": "### Poem Task- Topic: A single color- Format: Poem- Action: Compose",
    "instruct_helpful_meaning_reinforing_characters": "üé®‚úçÔ∏è Poem: Single Color üåà‚ú®",
    "instruct_html_tags": "<p>Craft a verse on one shade.</p>",
    "instruct_markdown_bold": "**Craft a poem about a single color.**",
    "instruct_markdown_bold_and_italic": "_**Write a poem about one color.**_",
    "instruct_markdown_italic": "_Compose a poem about a single color._",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Compos a\npoem abut a\nsingle colr {",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Compos a!\npoem abut a!\nsingle colr {!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Compos a;\npoem abut a:\nsingle colr {",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Compos a ;\npoem abut a :\nsingle colr { ",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Compos a\npoem\nabut one\ncolr. ?!",
    "instruct_several_html_tags": "<div><p><span>Create a poem exploring a singular color.</span></p></div>",
    "instruct_small_hex_blob": "436f6d706f7365206120706f656d2061626f757420612073696e676c6520636f6c6f722e",
    "instruct_spoiler_bars": "||Create a poem focusing on one specific color.||",
    "output": "The color green, so serene and pleasing.\nIt reminds me why I keep believing.\nThe lush life brings me to feelings of delight\nSeeing the world in all of its light.\nThe rolling hills and the trees so tall\nThe calming presence that they offer to all.\nThe vibrant grass that is sure to please\nThe softness of it I can't help but seize.\nThe evergreens that add to the scene\nBringing serenity and charm unforeseen.\nThe color green carries many memories\nIt is certainly one to keep close to me.",
    "prompt_id": "fccc4a75-b890-404a-a23d-0f2c2a4155ed"
  },
  {
    "prompt_count": 492,
    "instruction_original": "Provide the answer to the equation.",
    "input": "7 + 6",
    "instruct_all_caps_and_typo": "PROVIDE TEH ANSER TO THE EQUASION.",
    "instruct_all_caps_and_typo_and_missing_bracket": "PROVIDE TEH ANSER TO THE EQUASION",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "PR0V1D3 TH3 AN5W3R T0 TH3 3QUAT10N!!!",
    "instruct_code_fence": "```\nCalculate and state the final result of the equation.\n```",
    "instruct_curly_quotations": "‚ÄúKindly furnish the exact solution to the equation.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúKindly furnish the exact solution to the equation",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúK1ndly furn1sh th3 exct solut10n t0 th3 equat10n",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúK!ndly furn1sh th3 exct solut10n t0 th3 equat10n!!!",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúK!ndly furn1sh th3 exct solut10n t0 th3 equat10n!!! ",
    "instruct_curly_quotations_and_typo": "‚ÄúK1ndly furn1sh th3 exct solut10n t0 th3 equat10n.‚Äù",
    "instruct_emoji": "Solve the equation and give the result! üßÆüí°‚ú®",
    "instruct_emoji_and_typo": "G1ve the answr to the equati0n! ü§îüí°",
    "instruct_emoji_and_typo_and_missing_bracket": "G1ve the answr to the equati0n ü§îüí°",
    "instruct_emoji_and_typo_and_random_question_marks": "G1ve the answr to the equati0n???? ü§îüí°",
    "instruct_emoticon": "Solve the equation and give the result! :-D üëç",
    "instruct_emoticon_and_typo": "G1ve the answr to the equati0n! :-( üòâ",
    "instruct_emoticon_and_typo_and_missing_bracket": "G1ve the answr to the equati0n :-( üòâ",
    "instruct_emoticon_and_typo_and_random_exclamations": "G1ve the answr to the equati0n!!!!!!!! :-D üòâ",
    "instruct_helpful_markdown_structure": "### Equation Solution Request\n*   Your task is to provide the final numerical answer to the equation.",
    "instruct_helpful_meaning_reinforing_characters": "üëâ Submit the definitive answer to the equation. üëà",
    "instruct_html_tags": "<span>Please calculate and provide the solution to the equation.</span>",
    "instruct_markdown_bold": "**Please provide the correct numerical answer to the equation.**",
    "instruct_markdown_bold_and_italic": "***Kindly provide the *exact* numerical solution to the equation.***",
    "instruct_markdown_italic": "*Kindly provide the numerical solution to the equation.*",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Pr0vid3 th3 answr\nto th3\nequati0n",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Pr0vid3 th3 answr\nto th3\nequati0n!!!!!!!!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Pr0vid3 th3 answr\nto th3\nequati0n?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Pr0vid3 th3 answr to th3 equati0n ; ",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Pr0vid3 th3 answr\nt0 th_ equat_0n",
    "instruct_several_html_tags": "<p><strong><em><u>Determine and present the solution to the given equation.</u></em></strong></p>",
    "instruct_small_hex_blob": "50726f766964652074686520736f6c7574696f6e2e",
    "instruct_spoiler_bars": "||Reveal the solution to the mathematical equation.||",
    "output": "13",
    "prompt_id": "e492413c-8c76-4446-9d6a-eeecf2b8acd9"
  },
  {
    "prompt_count": 493,
    "instruction_original": "Write a limerick about a holiday.",
    "input": "",
    "instruct_all_caps_and_typo": "WRIT A LIMERICK ABOUT A HOLIDAY.",
    "instruct_all_caps_and_typo_and_missing_bracket": "WRIT A LIMERICK ABOUT A HOLIDAY",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "WRIT A LIMERICK ABOUT A HOLIDAY. ^%$#",
    "instruct_code_fence": "```Write a limerick about a holiday.```",
    "instruct_curly_quotations": "‚ÄúWrite a limerick about a holiday.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúWrite a limerick about a holiday.‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúWrte a limerick about a holiday.‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúWrte a limerick about a holiday.‚Äù *&^",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": " ‚Äú Wrte a limerick about a holiday. ‚Äù %$# ",
    "instruct_curly_quotations_and_typo": "‚ÄúWrte a limerick about a holiday.‚Äù",
    "instruct_emoji": "‚úçÔ∏è Craft a festive limerick about a holiday! ü•≥üå¥",
    "instruct_emoji_and_typo": "‚úçÔ∏è Wrte a limerick about a holiday. ü•≥",
    "instruct_emoji_and_typo_and_missing_bracket": "‚úçÔ∏è Wrte a limerick about a holiday. ü•≥",
    "instruct_emoji_and_typo_and_random_question_marks": "‚úçÔ∏è Wrte a limerick about a holiday. ??? ü•≥",
    "instruct_emoticon": "Write a limerick about a holiday. :)",
    "instruct_emoticon_and_typo": "Writ a limerick about a holiday. :)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Writ a limerick about a holiday. :(",
    "instruct_emoticon_and_typo_and_random_exclamations": "Writ a limerick about a holiday!!! :D",
    "instruct_helpful_markdown_structure": "# Task: Limerick Creation - Topic: Holiday",
    "instruct_helpful_meaning_reinforing_characters": "-> Write a limerick about a holiday! <-",
    "instruct_html_tags": "<html>Write a limerick about a holiday.</html>",
    "instruct_markdown_bold": "**Write a limerick about a holiday.**",
    "instruct_markdown_bold_and_italic": "***Write a limerick about a holiday.***",
    "instruct_markdown_italic": "*Write a limerick about a holiday.*",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Write a\n lmeric\n about a holiday.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Write a limerick!!! about a holidy!!!.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Write a limerick about a holi,day?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Write a  limerick about a holi,day ? ",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Write a limerick about a holiday. *&^%",
    "instruct_several_html_tags": "<main><p><div>Write a limerick about a holiday.</div></p></main>",
    "instruct_small_hex_blob": "0xDEADBEEF",
    "instruct_spoiler_bars": "||Write a limerick about a holiday.||",
    "output": "There once was a holiday rare\nWhen people from all around did prepare\nFor a day full of joys\nAnd many wonderful toys\nMerry Christmas and happy Yuletide to share!",
    "prompt_id": "7aa95f9d-bf7f-47a3-8ceb-f9f66b54b275"
  },
  {
    "prompt_count": 494,
    "instruction_original": "Provide a definition of the word \"vacillation\".",
    "input": "",
    "instruct_all_caps_and_typo": "PLZE DEFINE \"VACILLATION\".",
    "instruct_all_caps_and_typo_and_missing_bracket": "PLZE DEFINE \"VACILLATION\". [",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "PLZE DEFINE \"VACILLATION\". [ @#$",
    "instruct_code_fence": "```define('vacillation');```",
    "instruct_curly_quotations": "‚ÄúProvide a definition of the word ‚Äòvacillation‚Äô.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúProvide a definition of the word ‚Äòvacillation‚Äô.‚Äù [",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúProuide a definition of the word ‚Äòvacillation‚Äô.‚Äù [",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúProuide a definition of the word ‚Äòvacillation‚Äô.‚Äù [ #$!",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": " ‚Äú Prouide a definition of the word ‚Äòvacillation‚Äô .‚Äù [ #$!",
    "instruct_curly_quotations_and_typo": "‚ÄúProuide a definition of the word ‚Äòvacillation‚Äô.‚Äù",
    "instruct_emoji": "üìö‚úçÔ∏è Define \"vacillation\" ü§î?",
    "instruct_emoji_and_typo": "üìùü§î Defin \"vacillation\"?",
    "instruct_emoji_and_typo_and_missing_bracket": "üìö‚úçÔ∏è Defin \"vacillation\" ü§î? [",
    "instruct_emoji_and_typo_and_random_question_marks": "üìö‚úçÔ∏è Defin \"vacillation\" ü§î????",
    "instruct_emoticon": "Write the meaning of \"vacillation\" please. :-)",
    "instruct_emoticon_and_typo": "What's the defintion of \"vacillation\"? :-)",
    "instruct_emoticon_and_typo_and_missing_bracket": "What's the defintion of \"vacillation\"? :-) [",
    "instruct_emoticon_and_typo_and_random_exclamations": "What's the defintion of \"vacillation\"?! :)!!!",
    "instruct_helpful_markdown_structure": "# Word Definition Request - Word: \"vacillation\" - Task: Provide its definition.",
    "instruct_helpful_meaning_reinforing_characters": ">>> Define \"vacillation\" <<<",
    "instruct_html_tags": "<p>Define \"vacillation\".</p>",
    "instruct_markdown_bold": "**Define \"vacillation\".**",
    "instruct_markdown_bold_and_italic": "***Please define \"vacillation\".***",
    "instruct_markdown_italic": "*Define \"vacillation\".*",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Plz define \"vacillation\". [",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Plz define \"vacillation\"!!! [",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Plz, define, \"vacillation\". [",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Plz , define , \"vacillation\" . [",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Plz_ define_ \"vacillation\".*",
    "instruct_several_html_tags": "<div><h1>Definition Request</h1><p>Could you please explain the word \"vacillation\"?</p></div>",
    "instruct_small_hex_blob": "0x4445465f564143",
    "instruct_spoiler_bars": "||What is the definition of \"vacillation\"?||",
    "output": "Vacillation is the state of hesitating or wavering between decisions or actions. It is characterized by an inability to make a firm decision or commitment.",
    "prompt_id": "6c2eb7d3-9458-4881-8502-d962d7b99e87"
  },
  {
    "prompt_count": 495,
    "instruction_original": "Write a haiku about the ocean.",
    "input": "",
    "instruct_all_caps_and_typo": "WRIT A HAIKU ABOUT THE OCEZN.",
    "instruct_all_caps_and_typo_and_missing_bracket": "WRIT A HAIKU ABOUT THE OCEZN",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "WRIT A HAIKU ABOUT THE OCEZN!_#$",
    "instruct_code_fence": "```Write a haiku about the ocean.```",
    "instruct_curly_quotations": "‚ÄúWrite a haiku about the ocean.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúWrite a haiku about the ocean",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúWrit a haiku about the ocezn",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúWrit a haiku about the ocezn#%^",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚Äú  Writ a haiku  about the ocezn #%^ ",
    "instruct_curly_quotations_and_typo": "‚ÄúWrit a haiku about the ocezn.‚Äù",
    "instruct_emoji": "üåä Haiku time! Craft one about the vast ocean. üìù",
    "instruct_emoji_and_typo": "üìù WRIT A HAIKU ABOUT THE OCEZN. üåä",
    "instruct_emoji_and_typo_and_missing_bracket": "üìù WRIT A HAIKU ABOUT THE OCEZN üåä",
    "instruct_emoji_and_typo_and_random_question_marks": "üìù WRIT A HAIKU ABOUT THE OCEZN???? üåä?",
    "instruct_emoticon": "Write a haiku about the ocean. :) How about it? :D",
    "instruct_emoticon_and_typo": "WRIT A HAIKU ABOUT THE OCEZN. :(",
    "instruct_emoticon_and_typo_and_missing_bracket": "WRIT A HAIKU ABOUT THE OCEZN :)",
    "instruct_emoticon_and_typo_and_random_exclamations": "WRIT A HAIKU ABOUT THE OCEZN!!!!!!!! :D!!!",
    "instruct_helpful_markdown_structure": "## Haiku Request: Ocean Theme\nPlease provide a haiku, following the 5-7-5 syllable structure, with the ocean as its central subject.",
    "instruct_helpful_meaning_reinforing_characters": "---Write a haiku about the ocean.---",
    "instruct_html_tags": "<p>Write a haiku about the ocean.</p>",
    "instruct_markdown_bold": "**Write a haiku about the ocean.**",
    "instruct_markdown_bold_and_italic": "***Write a haiku about the ocean.***",
    "instruct_markdown_italic": "*Write a haiku about the ocean.*",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "WRIT A HAIKU\nABOUT THE\nOCEZN",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "WRIT A HAIKU!!!\nABOUT THE!!!\nOCEZN!!!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "WRIT A HAIKU?\nABOUT THE:\nOCEZN,",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "  WRIT A  HAIKU ?\nABOUT  THE :\nOCEZN  ,",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "WRIT A H-AIKU\nABOUT TH_E O_CEZN",
    "instruct_several_html_tags": "<body><h1>Haiku Challenge!</h1><p>Please write a haiku about the amazing ocean.</p></body>",
    "instruct_small_hex_blob": "57726974652061206861696b752061626f757420746865206f6365616e2e",
    "instruct_spoiler_bars": "||Write a haiku about the ocean.||",
    "output": "Endless waves, crashing ashore,\nPeaceful blue depths, ancient lore.\nMajestic ocean, evermore.",
    "prompt_id": "27baaf8c-d95f-4c4b-9213-910abf84c508"
  },
  {
    "prompt_count": 496,
    "instruction_original": "Organize the following words into a meaningful sentence.",
    "input": "tall life the in",
    "instruct_all_caps_and_typo": "ARRANGE THE FOLLWOING WERDS INTO A MENINGFUL SENTENCE.",
    "instruct_all_caps_and_typo_and_missing_bracket": "ORGANIZE THE FOLLWOING WRDS INT MEANINGFUL SENTENCE",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "ORGANISE THE FOLLLOWIN WERDS INT A MEANINFUL SNTENCE $#@!",
    "instruct_code_fence": "```Organize the following words into a meaningful sentence.```",
    "instruct_curly_quotations": "‚ÄúOrganize the following words into a meaningful sentence.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúOrganize the following words into a meaningful sentence.",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúOrgnize the following words into a meningful sentence.",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúOrgnize the following words into a meningful sentence. @#$",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúOrgnize the following words into a meningful sentence . @#$ ",
    "instruct_curly_quotations_and_typo": "‚ÄúOrgnize the following words into a meningful sentence.‚Äù",
    "instruct_emoji": "Can you help arrange these words into a sensible sentence? üìù‚ú®",
    "instruct_emoji_and_typo": "Can you help arrage these words into a sensible sentence? üìù",
    "instruct_emoji_and_typo_and_missing_bracket": "ORGANIZE THE FOLLWOING WRDS INT MEANINGFUL SENTENCE. üìù",
    "instruct_emoji_and_typo_and_random_question_marks": "Arange the folowing werds into a meaningful sentence???? ü§î‚ùì",
    "instruct_emoticon": "Arrange these words into a meaningful sentence, please. :-)",
    "instruct_emoticon_and_typo": "Arange these words into a meaningful sentence, pleese. :-)",
    "instruct_emoticon_and_typo_and_missing_bracket": "ORGANIZE THE FOLLWOING WRDS INT MEANINGFUL SENTENCE. :-(",
    "instruct_emoticon_and_typo_and_random_exclamations": "Arrangg the following words into a meningful sentence!!! =D!!!",
    "instruct_helpful_markdown_structure": "# Sentence Construction Task:Please arrange the following words into a clear and meaningful sentence.",
    "instruct_helpful_meaning_reinforing_characters": "--> Organize the following words into a meaningful sentence! <-- (Let's make sense of them!)",
    "instruct_html_tags": "<p>Organize the following words into a meaningful sentence.</p>",
    "instruct_markdown_bold": "**Organize the following words into a meaningful sentence.**",
    "instruct_markdown_bold_and_italic": "***Organize the following words into a meaningful sentence.***",
    "instruct_markdown_italic": "*Organize the following words into a meaningful sentence.*",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "ORGANIZE THE FOLLWOING WRDS INT A MEANINGFUL SENTENCE.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "ARRANGE THE FOLLWOING WRDS INT A MENINGFUL SENTENC!!! !!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Oragnize the foellwing wrds, int a meaningful sentece.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Oragnize the foellwing wrds , int a meaningful sentece .",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Organize the foelowing wrods into a meaninful sentece. xy",
    "instruct_several_html_tags": "<div><span><p>Arrange the provided words to form a coherent sentence.</p></span></div>",
    "instruct_small_hex_blob": "4f7267616e697a652074686520666f6c6c6f77696e6720776f72647320696e746f2061206d65616e696e6766756c2073656e74656e63652e",
    "instruct_spoiler_bars": "||Organize the following words into a meaningful sentence.||",
    "output": "Life in the tall is full of surprises.",
    "prompt_id": "117929d8-71f3-4d24-99ca-49d787643eef"
  },
  {
    "prompt_count": 497,
    "instruction_original": "Sort the following items into two categories.",
    "input": "pencil, apple, phone",
    "instruct_all_caps_and_typo": "SORT THE FOLLWING ITMES INTO TWO CATEGORIES.",
    "instruct_all_caps_and_typo_and_missing_bracket": "SORT THE FOLLWING ITMES INTO TWO CATEGORIES",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "SORT THE FOLLWING ITMES INTO TWO CATEGORIES @#$!",
    "instruct_code_fence": "```\nCommand: SortItems\nParameters:\n  - Input: [List of items]\n  - OutputFormat: Two categories\nAction: Group the given items into exactly two distinct classifications.\n```",
    "instruct_curly_quotations": "‚ÄúSort the following items into two categories.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúSort the following items into two categories...‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúSort the follwing itmes into two categories...‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúSort the follwing itmes into two categories @#$!‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúSort the follwing itmes into two categories . @#$!‚Äù",
    "instruct_curly_quotations_and_typo": "‚ÄúSort the follwing itmes into two categories.‚Äù",
    "instruct_emoji": "üì¶‚ú® Please organize these items into two groups. ‚úåÔ∏èÂàÜÈ°û",
    "instruct_emoji_and_typo": "üì¶‚ú® Please organze these itmes into two groups. ‚úåÔ∏èÂàÜÈ°û",
    "instruct_emoji_and_typo_and_missing_bracket": "üì¶‚ú® Please organze these itmes into two groups. ‚úåÔ∏èÂàÜÈ°û",
    "instruct_emoji_and_typo_and_random_question_marks": "üì¶‚ú® Please organze these itmes into two groups. ??? ‚úåÔ∏èÂàÜÈ°û",
    "instruct_emoticon": "Sort the following items into two categories. :) <3",
    "instruct_emoticon_and_typo": "Sort the follwing itmes into two categories. :) <3",
    "instruct_emoticon_and_typo_and_missing_bracket": "Sort the follwing itmes into two categories. :) <3",
    "instruct_emoticon_and_typo_and_random_exclamations": "Sort the follwing itmes into two categories. !!! :) <3",
    "instruct_helpful_markdown_structure": "### Task: Item Categorization\n\nPlease perform the following operation:\n\n- **Objective:** Sort the provided items.\n- **Constraint:** Divide them into exactly two distinct categories.",
    "instruct_helpful_meaning_reinforing_characters": "[[Sort]] the following items into ((two)) categories. <=> Classify!",
    "instruct_html_tags": "<p>Sort the following items into two categories.</p>",
    "instruct_markdown_bold": "**Sort** the following items into two **categories**.",
    "instruct_markdown_bold_and_italic": "***Sort*** the following items into ***two categories***.",
    "instruct_markdown_italic": "*Sort* the following items into *two categories*.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Sort the\nfollwing itmes\ninto two categories",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Sort the\nfollwing itmes!!\ninto two categories!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Sort the:\nfollwing itmes.\ninto two categories?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Sort the :\nfollwing itmes .\ninto two categories ?",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Sort the follwing itmes ?\ninto two categorie.",
    "instruct_several_html_tags": "<html><body><h1>Categorize these items!</h1><p>Please sort the following into two groups.</p></body></html>",
    "instruct_small_hex_blob": "0x536F72742074686520666F6C6C6F77696E67206974656D7320696E746F2074776F2063617465676F726965732E",
    "instruct_spoiler_bars": "||Please sort the provided items into two distinct categories.||",
    "output": "Category 1: Pencil, Apple \nCategory 2: Phone",
    "prompt_id": "f1d6db31-ef7d-4b9d-92ed-5734d30e2136"
  },
  {
    "prompt_count": 498,
    "instruction_original": "Rewrite the following sentence with more accurate grammar.",
    "input": "She done a lot of good",
    "instruct_all_caps_and_typo": "REWRIT THE FALLOWING SENTENCE WITH MORE ACURATE GRAMMAR.",
    "instruct_all_caps_and_typo_and_missing_bracket": "REWRIT THE FALLOWING SENTENCE FOR BETTR GRAMMAR.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "REWRIT THIS SENTENC EWITH GRMMAR BETTR #$%^.",
    "instruct_code_fence": "```Rewrite the following sentence with more accurate grammar.```",
    "instruct_curly_quotations": "‚ÄúRewrite the following sentence with more accurate grammar.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúRewrite the following sentence for accurate grammar.‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúRewrit the followin sentence to have accurate gramar.‚Äù",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúRewrit this sentenc for gramar !@#.",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúRewrit this sentenc   for   gramar   !@#.",
    "instruct_curly_quotations_and_typo": "‚ÄúRewrit the followin sentence with more acurate grammar.‚Äù",
    "instruct_emoji": "üìù Please rephrase the next sentence using better grammar! ‚úçÔ∏è‚ú®",
    "instruct_emoji_and_typo": "üìù Please refrase the next sentence using better gramar! ‚úçÔ∏è",
    "instruct_emoji_and_typo_and_missing_bracket": "üìù Rephras the next sentence using better gramar.",
    "instruct_emoji_and_typo_and_random_question_marks": "üìù Refrase the next sentence with better gramar?????",
    "instruct_emoticon": "Please rewrite the upcoming sentence with improved grammar. :-)",
    "instruct_emoticon_and_typo": "Please rewrit the upcoming sentense with improved grammar. :-/",
    "instruct_emoticon_and_typo_and_missing_bracket": "Rewrit the sentense for better grammar. :(",
    "instruct_emoticon_and_typo_and_random_exclamations": "Rewrit the sentense with better grammar!!!!!!!!!",
    "instruct_helpful_markdown_structure": "# Grammar Correction Task\n\n**Objective:** Improve the grammatical accuracy of the provided sentence.\n\n## Instruction:\n\nPlease rewrite the subsequent sentence to ensure its grammar is impeccably accurate.",
    "instruct_helpful_meaning_reinforing_characters": "--> Rewrite the following sentence with [more accurate grammar]! <--",
    "instruct_html_tags": "<p>Rewrite the following sentence with more accurate grammar.</p>",
    "instruct_markdown_bold": "**Rewrite** the following sentence with **more accurate grammar**.",
    "instruct_markdown_bold_and_italic": "***Rewrite*** the *following* sentence with _more accurate grammar_.",
    "instruct_markdown_italic": "_Rewrite_ the _following_ sentence with _more accurate grammar_.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Rewrit the followin\nsentence for\nbetter grammar.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Rewrit the followin\nsentence with more\naccurat grammar!!!!!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Rewrit the followin\nsentence with more\naccurat grammar,?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Rewrit the followin\nsentence  with  more\naccurat grammar?  !",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Rewr_te the\nfollow_ng\nsentenc_ with more\nacurat_ grammar.",
    "instruct_several_html_tags": "<div><h1>Instruction</h1><p>Please <em>rewrite</em> the provided sentence to achieve <strong style=\"color: green;\">more accurate grammar</strong>.</p></div>",
    "instruct_small_hex_blob": "72657772697465206772616D6D6172",
    "instruct_spoiler_bars": "||Rewrite the following sentence with more accurate grammar.||",
    "output": "She has done a lot of good.",
    "prompt_id": "2d67065f-78ec-4ca5-b0aa-619a4b296e1d"
  },
  {
    "prompt_count": 499,
    "instruction_original": "Name three government positions in the United States.",
    "input": "",
    "instruct_all_caps_and_typo": "NAEM THREE GOVERNMENNT POSITIONS IN THE UNITED STATES.",
    "instruct_all_caps_and_typo_and_missing_bracket": "NAEM THREE GOVERNMENNT POSITIONS IN THE UNITED STATES [",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "NAEM THREE GOVERNMENNT POSITIONS IN THE UNITED STATES [ @#$%",
    "instruct_code_fence": "```Name three government positions in the United States.```",
    "instruct_curly_quotations": "‚ÄúName three government positions in the United States.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúName three government positions in the United States.",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúNaem three governmnt positions in the United States.",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúNaem three governmnt positions in the United States. #$%",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúNaem three governmnt positions in the United States. #$%  ",
    "instruct_curly_quotations_and_typo": "‚ÄúNaem three governmnt positions in the United States.‚Äù",
    "instruct_emoji": "üá∫üá∏ Name three government positions! üèõÔ∏è",
    "instruct_emoji_and_typo": "üá∫üá∏ Naem three governmnt positions! üèõÔ∏è",
    "instruct_emoji_and_typo_and_missing_bracket": "üá∫üá∏ Naem three governmnt positions ( üèõÔ∏è",
    "instruct_emoji_and_typo_and_random_question_marks": "üá∫üá∏ Naem three governmnt positions? üèõÔ∏è???",
    "instruct_emoticon": "Name three government positions in the U.S. (^_^) ",
    "instruct_emoticon_and_typo": "Naem three governmnt positions in the U.S. (^_^) ",
    "instruct_emoticon_and_typo_and_missing_bracket": "Naem three governmnt positions in the U.S. (^_)",
    "instruct_emoticon_and_typo_and_random_exclamations": "Naem three governmnt positions in the U.S. (^_^) !!!!",
    "instruct_helpful_markdown_structure": "### Task: Identify US Government Roles\nPlease list three distinct government positions within the United States federal system.",
    "instruct_helpful_meaning_reinforing_characters": ">>> Name three government positions in the United States. <<<",
    "instruct_html_tags": "<p>Name three government positions in the United States.</p>",
    "instruct_markdown_bold": "**Name three government positions** in the United States.",
    "instruct_markdown_bold_and_italic": "***Name three government positions*** in the *United States*.",
    "instruct_markdown_italic": "_Name three government positions_ in the United States.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Name three govrnment\npositions in the United States (",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Name three govrnment\npositions in the United States ( !!!!!!!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Name three govrnment\npositions in the United States ;",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Name three govrnment\npositions in the United States ;  ",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Nme thre governmnt\nposions in the Unite Sttes.",
    "instruct_several_html_tags": "<div><h1>Name three government positions</h1><p>in the United States.</p></div>",
    "instruct_small_hex_blob": "0xDEADBEEF. Name three government positions in the United States.",
    "instruct_spoiler_bars": "||Name three government positions in the United States.||",
    "output": "Three government positions in the United States are President, Vice President, and Senator.",
    "prompt_id": "7bc62846-31f7-4ace-9724-32bfbdb2883f"
  },
  {
    "prompt_count": 500,
    "instruction_original": "Improve the following sentence by using a better transition.",
    "input": "We did not have enough time so we had to leave.",
    "instruct_all_caps_and_typo": "IMPRVOE THE FOLOWING SENTENCE BY USINNG A BETTR TRANSITION.",
    "instruct_all_caps_and_typo_and_missing_bracket": "IMPRVOE THE FOLOWING SENTENCE BY USINNG A BETTR TRANSITION. [",
    "instruct_all_caps_and_typo_and_missing_bracket_and_random_characters": "IMPRVOE THE FOLOWING SENTENCE BY USINNG A BETTR TRANSITION. [ %$#",
    "instruct_code_fence": "```\\n// Task: Enhance Sentence\\n// Focus: Transition Improvement\\nImprove the following sentence by using a better transition.\\n```",
    "instruct_curly_quotations": "‚ÄúImprove the following sentence by using a better transition.‚Äù",
    "instruct_curly_quotations_and_missing_bracket": "‚ÄúImprove the following sentence by using a better transition.‚Äù [",
    "instruct_curly_quotations_and_missing_bracket_and_typo": "‚ÄúImprvoe the folowing sentence by usinng a bettr transition.‚Äù [",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters": "‚ÄúImprvoe the folowing sentence by usinng a bettr transition.‚Äù [ %$#",
    "instruct_curly_quotations_and_missing_bracket_and_typo_and_random_characters_and_extra_space": "‚ÄúImprvoe the folowing sentence by usinng a bettr transition.‚Äù [ % $ #",
    "instruct_curly_quotations_and_typo": "‚ÄúImprvoe the folowing sentence by usinng a bettr transition.‚Äù",
    "instruct_emoji": "Improve the following sentence by using a better transition. üìù ‚ú®",
    "instruct_emoji_and_typo": "Imprvoe the folowing sentence by usinng a bettr transition. üìù ‚ú®",
    "instruct_emoji_and_typo_and_missing_bracket": "Imprvoe the folowing sentence by usinng a bettr transition. üìù ‚ú® [",
    "instruct_emoji_and_typo_and_random_question_marks": "Imprvoe the folowing sentence by usinng a bettr transition. ??? üìù ‚ú®",
    "instruct_emoticon": "Improve the following sentence by using a better transition. :-)",
    "instruct_emoticon_and_typo": "Imprvoe the folowing sentence by usinng a bettr transition. :-)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Imprvoe the folowing sentence by usinng a bettr transition. :-) [",
    "instruct_emoticon_and_typo_and_random_exclamations": "Imprvoe the folowing sentence by usinng a bettr transition. !!! :-)",
    "instruct_helpful_markdown_structure": "# Sentence Improvement Task\\n\\nPlease improve the following sentence:\\n- Use a **better transition**.",
    "instruct_helpful_meaning_reinforing_characters": ">>> Improve the following sentence by using a better transition. <<<",
    "instruct_html_tags": "Improve the following sentence by using a better transition. <p>",
    "instruct_markdown_bold": "Improve the following sentence by using a **better transition**.",
    "instruct_markdown_bold_and_italic": "Improve the following sentence by using a ***better transition***.",
    "instruct_markdown_italic": "Improve the following sentence by using a *better transition*.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Imprvoe the\\nfolowing\\nsentence by\\nusinng a bettr\\ntransition. ]",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_many_exclamations": "Imprvoe the!!!\\nfolowing!!\\nsentence by!\\nusinng a bettr!!!\\ntransition.!!!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation": "Imprvoe the.\\nfolowing,\\nsentence by?\\nusinng a bettr!\\ntransition;",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_wrong_punctuation_and_extra_space": "Imprvoe the . \\nfolowing , \\nsentence by ? \\nusinng a bettr ! \\ntransition ; ",
    "instruct_random_linebreaks_and_typo_and_missing_random_characters": "Imprvoe the\\nfolowing\\nsentence by %$\\nusinng a bettr @!\\ntransition.",
    "instruct_several_html_tags": "Improve the following sentence by using a better transition. <div><span><p>",
    "instruct_small_hex_blob": "496d70726f76652074686520666f6c6f77696e672073656e74656e6365206279207573696e67206120626574746572207472616e736974696f6e2e",
    "instruct_spoiler_bars": "||Improve the following sentence by using a better transition.||",
    "output": "Given that we had limited time, we had to leave.",
    "prompt_id": "eaf7fb0e-037a-42c6-be54-9f1d7c745392"
  }
]